id,title,year,source,name,platform,genre,mode,group,type,quote
1,SSIs Dark Sun Online: Crimson Sands,1997,http://www.gamasutra.com/view/feature/3235/postmortem_ssis_dark_sun_online_.php,Dark Sun Online,pc,rpg,online,production,technical,"We tried to make a DOS application running in a DOS window communicate to a Windows 3.1 TCP/IP stack. Instead, we should have simply ported DSO to a Win32 application and developed the game with the Windows 95 TCP/IP stack - as ended up being done months later"
2,SSIs Dark Sun Online: Crimson Sands,1997,http://www.gamasutra.com/view/feature/3235/postmortem_ssis_dark_sun_online_.php,Dark Sun Online,pc,rpg,online,production,testing,"Not enough test time was allocated for debugging such a large-scale online game. This forced us to move extremely quickly which, in turn, frustrated players due to the speed and severity of the changes. Although many of these issues were unavoidable, having more time to prepare and a more flexible deadline would have allowed us to be more accommodating to testers issues and frustrations"
3,SSIs Dark Sun Online: Crimson Sands,1997,http://www.gamasutra.com/view/feature/3235/postmortem_ssis_dark_sun_online_.php,Dark Sun Online,pc,rpg,online,management-people,team,"SSIs internal resources were severely limited for the project, which in turn made us far too dependent on external resources. On top of that, the contractors should have been better incented to provide quality work. In particular, the external programming group was competent, but not financially-motivated to do the job right. In addition, the external art group needed a great deal of hand-holding, and at the end of the day we still didnt quite get everything we wanted (...) One of the scriptors left in the middle of the project and didnt do a great deal of the work that was necessary for the games underlying routines. We ended up having the two remaining scriptors doing the work of three, with one of them having to redo all of the key global routines"
4,SSIs Dark Sun Online: Crimson Sands,1997,http://www.gamasutra.com/view/feature/3235/postmortem_ssis_dark_sun_online_.php,Dark Sun Online,pc,rpg,online,management-feature,scope,Probably the biggest issues we had during the development of DARK SUN ONLINE were the hacking problems. These problems came as a result of taking a stand-alone game and turning it into a multiplayer game with a peer-to-peer networking system
5,Bungies Myth: The Fallen Lords,1997,http://www.gamasutra.com/view/feature/131691/postmortem_bungies_myth_the_.php,Myth: The Fallen Lords,pc,strategy,online single,production,technical,"One of the complaints most often voiced by players is that the sprite-based units animations are not fluid enough. At the start of the project,when we planned for the number of frames of animation per unit, there was a good deal of uncertainty regarding how much RAM would beconsumed by large texture maps, sounds, and other resources. As things were, it was not uncommon for our landscape textures to reach5MB in size, and certain animations already consumed close to 1MB -- our uncertainties were not unfounded. We erred on the conservativeside. Though we implemented caching schemes that greatly reduced our memory requirements, there wasnt enough time to rerender theunits."
6,Bungies Myth: The Fallen Lords,1997,http://www.gamasutra.com/view/feature/131691/postmortem_bungies_myth_the_.php,Myth: The Fallen Lords,pc,strategy,online single,management-people,team,"On the flip side, it became clear very early in the project that we were understaffed for such an ambitious undertaking. Success or failurerested with a handful of people, and that was extremely stressful. Losing a programmer halfway through development added still morepressure during the final push to get the game out the door. Additional programming tasks had to be shouldered by the remaining developers,who were already also responsible for level design. To alleviate the problem somewhat, we even found it necessary to ask our busy networkadministrator to aid in AI scripting and level design."
7,Bungies Myth: The Fallen Lords,1997,http://www.gamasutra.com/view/feature/131691/postmortem_bungies_myth_the_.php,Myth: The Fallen Lords,pc,strategy,multi single,management-feature,cutting-features,"The biggest announced feature that didnt make it into the final version of Myth was a scripting language that would allow the player to modify elements of the game. We had hoped that user scripts could be written for extensible artificial intelligence, as well as custom formations, net game rules, and map behaviors. We selected Java as a good basis for the Myth scripting language because of its gaining popularity, good information-hiding capabilities, and relatively simple byte code interpretation. After several months of work, early versions of the game loaded, compiled, and ran code from tag files. A few simple scripts worked for presentation purposes, including one that instructed a unit to search the battlefield for the heads of the enemy and collect them in a pile. Unfortunately, when the programmer responsible for the scripting language parted ways with Bungie, we were left with a number of features to implement and no library of user-friendly interfaces with the game code. Given its incomplete state at such a late stage of development, there was little choice but to drop this functionality. (...) With a few exceptions, everything from our list of ""Stuff that Rocks"" made it into the final product. Those features that didnt make it came so close and were so exciting that they definitely deserve mention. Near the end of the project, we started adding support for 3D fire, which would be ignited by explosions and flaming arrows. Our flames were sprite-based 3D particle effects, complete with translucent smoke. Fire could spread across the landscape and move at different rates over the various types of terrain. To our dismay, when a spark in the woods spread into a raging forest fire (as it should), all the translucent smoke sprites slowed even fast, 3Dfx-accelerated machines to a crawl. With little time to rectify the problem, we had to put out the fire, so to speak. We had also planned for wildlife to scamper across the terrain and for birds to fly through the air, breathing life into our empty landscapes. Our attempt at ambient life started with a giant squirrel created by one of our artists. Unfortunately, due to time constraints, we didnt have a chance to create very interesting behaviors for it. Just about the only AI that we had a chance to code simply made the squirrels gravitate towards the players units. We thought it best to drop ambient life rather than subject players to hordes of nuzzling squirrels."
8,DreamForges Sanitarium,1998,https://www.gamasutra.com/view/feature/131706/postmortem_dreamforges_sanitarium.php,Sanitarium,mobile pc,adventure,single,production,design,"Due to the size of the game, each character had a limited number of animation frames. In many cases, this caused the movement to look stiff and unnatural. Looking back on it, we would have preferred smoother animations with more angles - especially for the main character, Max. If we had taken this into account earlier in the project, we might have had an opportunity to fix it. By the time we realized that eight angles looked a little stiff, it was too late. The limited angles also caused problems for players trying to navigate Max through the levels. Hed often get stuck on corners, then either walk in place like some demented mime or frustrate the player with a litany of, Cant go that way."
9,DreamForges Sanitarium,1998,https://www.gamasutra.com/view/feature/131706/postmortem_dreamforges_sanitarium.php,Sanitarium,mobile pc,adventure,single,production,technical,"While long level loading times were an accepted design limitation from the beginning of the project, a system that could better manage memory and allow for streaming of more data from the CD could have benefited the game. The tight schedule left such a system impossible to pursue. A more sophisticated memory-management scheme could have allowed for shorter initial loading times, larger levels, and so on."
10,DreamForges Sanitarium,1998,https://www.gamasutra.com/view/feature/131706/postmortem_dreamforges_sanitarium.php,Sanitarium,mobile pc,adventure,single,management-people,communication,"Sanitarium is a huge game. A lot of people worked on it, meaning additional efforts had to be taken to coordinate and organize everyones labor. Familiarizing people with the vision of the game from an artistic and design point of view was a real challenge. Sometimes, keeping everyone on the same page seemed to be a chore, especially as new people came onto the project.A lot of time was spent getting people to understand the status of the project and the direction in which it was headed. A new artist would ask, Why am I making this one-eyed guy? and wed say, Didnt anyone tell you? We made the mistake of projecting time schedules as if new hires, following a brief training period, would be as competent as our most experienced people. Some of those experienced people were performing administrative and training tasks, and thus werent producing much art. (...) When you have a company of forty to fifty people, its impossible to do anything without rubbing someone the wrong way. Sanitarium was put together by a design team that in part came together naturally and in part was hand-picked by Chris Straka, our head of creative development. Individual employees (usually Chris) designed our previous titles. But we decided that team design would be the way to go. While team design has the potential to fracture the unified vision of a game, the various team members ultimately complement each others interests and goals, lending more depth to the game. This is a nice way of saying, The team argued a lot, but came up with better solutions as a group."
11,DreamForges Sanitarium,1998,https://www.gamasutra.com/view/feature/131706/postmortem_dreamforges_sanitarium.php,Sanitarium,mobile pc,adventure,single,management-feature,cutting-features,"The action sequences needed more attention. They were important for guiding the pace of the story, but didnt have the feel that we were after in the end product. The original idea behind these areas was based on one of DreamForges earlier titles, Veil Of Darkness. It had wonderful combat areas that helped break up the pacing between the puzzles. However, in Sanitarium, multiple factors forced us to water down the combat zones or in some cases cut them altogether. We had originally planned a large combat zone for the Hive level of the game. Wed hoped to make Grimwall vs. the Hive one of the most fun and integral combat areas, but it was cut from the game for various reasons."
12,Postmortem: LucasLearnings Star Wars DroidWorks,1998,http://www.gamasutra.com/view/feature/131775/postmortem_lucaslearnings_star_.php,Star Wars DroidWorks,pc,action puzzle simulation,single,management-people,crunch-time,"DroidWorks also had its share of timing problems. We originally planned a fairly luxurious development cycle that had us landing on shelves in time for Christmas 1998. About half way through production, after looking at the numbers, Marketing decided we should aim for Labor Day instead, the official kick-off of the back-to-school buying season. Everyone agreed, so we took a deep breath, re-worked major pieces of the design, and made some heavy cuts. The team rallied behind the new date, and we managed to hit our sign-off date"
13,Postmortem: LucasLearnings Star Wars DroidWorks,1998,http://www.gamasutra.com/view/feature/131775/postmortem_lucaslearnings_star_.php,Star Wars DroidWorks,pc,action puzzle simulation,single,management-feature,scope,"In choosing the Jedi engine, we hoped to benefit from its physics simulator as much as from its rendering engine. We wanted our game to teach simple physics in an open-ended environment, and we hoped concepts of velocity, acceleration, and gravity, would just fall out of the simulator. How wrong could we have been! The level designers closely control the world of Jedi Knight, and the physics engine had been tuned to make maximum fun out of running characters and flying projectiles. We had hoped to teach interactive real-world physics, not cartoon game physics in which the main character could run 80 miles an hour, nothing bounced, and nothing could be pushed! We expected a fairly robust dynamics simulation but wound up with sphere-based collision detection in a system that often couldnt properly respond to the collision of two moving objects. The lack of rotational forces sure made it difficult to build levers and fulcrums."
14,Postmortem: LucasLearnings Star Wars DroidWorks,1998,http://www.gamasutra.com/view/feature/131775/postmortem_lucaslearnings_star_.php,Star Wars DroidWorks,pc,action puzzle simulation,single,management-feature,feature-creep,"The number of combinations possible in DroidWorks gives it its power. How many droids can you build from 87 droid parts anyway? At one point during development, we could build over 65 million fully functioning droids, but design decisions forced us to cut it back to only 25 million by the time we shipped. How do you deal with that kind of complexity? (...) Our level designers also saw the nightmare of complexity. They could never be entirely sure what kind of droid would be walking into their rooms, and they had to leave the levels as open as possible. In many cases, they created ingenious physical filtering mechanisms that would guarantee certain types of droids beyond certain points in the level: a steep hill would weed out biped droids in favor of droids with tractor treads, a chasm would weed out wheeled droids who cant jump, a narrow canyon would weed out wide droids, and a short door would weed out tall droids. They used the terrain leading up to key puzzles to reduce the complexity of the puzzle itself, giving kids a chance to uncover the mission requirements themselves within the context of the game"
15,Postmortem: LucasLearnings Star Wars DroidWorks,1998,http://www.gamasutra.com/view/feature/131775/postmortem_lucaslearnings_star_.php,Star Wars DroidWorks,pc,action puzzle simulation,single,management-feature,planning,"Although we had several aces in our hands, including guaranteed private funding and one of the most popular film licenses in the world, Lucas Learning was still a startup. We had to hire staff, find space, clarify our vision, define our culture, and adopt processes for doing everything. On DroidWorks, almost everything we did we did for the first time, and even though we had a lot of industry veterans on board, we often ran on hunches, not having time to pause the project to figure out the right way to do something."
16,Postmortem: LucasLearnings Star Wars DroidWorks,1998,http://www.gamasutra.com/view/feature/131775/postmortem_lucaslearnings_star_.php,Star Wars DroidWorks,pc,action puzzle simulation,single,business,marketing,"Landing in the entertainment category proved problematic for DroidWorks. On those crowded shelves, DroidWorks disappears amongst action-oriented shoot-em-up games. Its bright blue box stands out from the dark tones of the adult games and catches the eye, and it feels strangely out of place. Furthermore, retailers have shorter attention spans for products on the entertainment shelves than they do for educational products: if a game doesnt disappear in the first two weeks, the stores send it back. Despite its great reviews and the press coverage we garnered in the month or two prior to its release, DroidWorks had a difficult first month of selling, and we started thinking our particular education/entertainment blend might be just too confusing for consumers. Luckily, stores gave it a break — thanks to the Star Wars name and the muscle of LucasArts distribution — and by the end of the month, sales had improved and things were looking up (...) As the game took final shape, the company marketing effort began to kick into full gear. Until that time, Lucas Learning had no public presence. Our mission and message had never been projected to the outside world, so we werent just marketing a product, we were marketing an entire company. We had lived in the cocoon of secrecy that typically surrounds George Lucas endeavors, and the time had come to start opening that cocoon to let the world know what we were up to. That process turned out to be harder — and more timeconsuming — than expected."
17,Shiny Entertainments Wild 9,1998,https://www.gamasutra.com/view/feature/131824/postmortem_shiny_entertainments_.php,Wild 9,console,platformer,single,production,technical," The physics engine turned out to be one of Gavin’s biggest nightmares during the Wild 9’s development. He inherited this code from the previous programmers, and he spent more time trying to unravel, optimize, and just get that part of the code functioning than on any other identifiable part of the game. His advice to engine inheritors: unless the physics are perfect and written exactly as you want them, grow your own."
18,Shiny Entertainments Wild 9,1998,https://www.gamasutra.com/view/feature/131824/postmortem_shiny_entertainments_.php,Wild 9,console,platformer,single,management-people,team," I once heard David Perry say that the first Wild 9 team was a great collection of talented individuals, while the second was a talented team. This statement alone sums up the main problem encountered by the first team. As we found out later in the project, communication and good atmosphere were two factors that made this project move forward; it’s now obvious that the best thing to do was to start over rather than try to salvage a situation that was going nowhere."
19,Shiny Entertainments Wild 9,1998,https://www.gamasutra.com/view/feature/131824/postmortem_shiny_entertainments_.php,Wild 9,console,platformer,single,management-feature,feature-creep," I’ve already sung the praises of our scripting language, but not everything was totally perfect in this picture. Although it ended up being very useful, it became clear early on that the language and its op-codes had massive loopholes and gotchas waiting to jump on us. To help other programmers with their first steps, Gregg started maintaining a document as he was learning the AI system. This document described all the major problems that he’d encountered and ways around them that he’d discovered. "
20,Shiny Entertainments Wild 9,1998,https://www.gamasutra.com/view/feature/131824/postmortem_shiny_entertainments_.php,Wild 9,console,platformer,single,management-feature,cutting-features," Tom and Kevin are two very creative fellows. The material they came up with is enough to fill up three or four games like this one. In addition, the whole team took this game to heart and ended up coming up with suggestions of their own. We were thus faced with a situation toward the end of the project: we could not fit everything into the game. Wex’s weapon, The Rig, is normally blue. But it possesses a red mode, which is greatly under-used in the game. The red mode was initially meant to be a more powerful blue beam, but this created game play issues, as a player will sometimes want to transport enemies in the beam from one point of the level to another. The red beam would vaporize just about everything on contact, which was obviously a problem. This is one of the only design issues that was never truly fixed and the red beam, even though it made it into the game, isn’t used to its full potential."
21,Shiny Entertainments Wild 9,1998,https://www.gamasutra.com/view/feature/131824/postmortem_shiny_entertainments_.php,Wild 9,console,platformer,single,management-feature,multiple-projects," Our tools programmer and resident Irish person Malachy once decided to bring us a little multiplayer game he was working on in his spare time. The game was called Deal Me In, and he wanted us to help him beta test it. Deal Me In is best described as a very addictive cross between Scrabble and Poker. Actually, addictive doesn’t even begin to describe the darn thing. Everyone at Shiny plays games. So when it comes to testing a very addictive game, we are very thorough. The game became an obsession, to the point where it was affecting our productivity. It turns out, after extensive research, that there is no such thing as a quick game of Deal Me In."
22,Outrages Descent 3,1999,https://www.gamasutra.com/view/feature/131788/postmortem_outrages_descent_3.php?page=2,Descent 3,pc,shooter,online single,production,design,"With sequels come high expectations that can almost never be achieved completely. (Just look at Star Wars: The Phantom Menace to see what I’m talking about.) While we aimed high for the entire game, many times trying to meet the varying expectations of our team (more in-level scripting and rendered cinematics), publisher (using more AI and levels), and fans (more of everything) resulted in halfimplemented features, such as our in-game cinematics or items that went in untested at the last minute (such as some Guide-Bot functionality). With a game so big and widely anticipated, I’m not sure if we would have ever been able to manage everyone’s expectations. And, one of our biggest problems was that those expectations were controlling the design of the game. As developers, we should have been more confident in our abilities to produce this type of game and should have approached new ideas with a bit of skepticism. While I don’t dismiss the valuable role that the fans and our publisher played in the development of Descent 3, we were too apt to deviate from our design document when others wanted us to add features to the game."
23,Outrages Descent 3,1999,https://www.gamasutra.com/view/feature/131788/postmortem_outrages_descent_3.php?page=2,Descent 3,pc,shooter,online single,management-people,communication,"Another major problem on Descent 3 was the tools the level designers used to make their levels. Some people used 3D Studio Max, some used Lightwave, and one designer even wrote his own custom modeler from scratch. Due to our somewhat anarchistic development environment, this was seen as O.K., and not too many people complained. However, the different tools led to inconsistent quality across our game levels."
24,Outrages Descent 3,1999,https://www.gamasutra.com/view/feature/131788/postmortem_outrages_descent_3.php?page=2,Descent 3,pc,shooter,online single,management-people,team,"Many systems, such as the graphics, AI, and scripting, were written exclusively by one person. This fostered a feeling of pride in a particular system, but it also caught us with our guard down when we found that one system was falling behind schedule. Our AI, for example, was very much behind schedule for the duration of the project because the programmer just had too much to do. This caused a ripple effect that was felt throughout the design of the game. After all, you can’t tell how a level is going to play if the robots that you’re fighting aren’t behaving at all as they should. (...) When we started work on Descent 3, Outrage had just eight employees on staff. Since some of the Descent II team left Ann Arbor to work at Volition during the project, we literally had to build the team and company at the same time we started production on the game. This resulted in a mixed bag of results ranging from pushing back larger projects or features until later in the project to adding multiple tasks to someone’s already full schedule."
25,Outrages Descent 3,1999,https://www.gamasutra.com/view/feature/131788/postmortem_outrages_descent_3.php?page=2,Descent 3,pc,shooter,online single,management-feature,planning,"The biggest problem on Descent 3 was the weak management structure.Descent and Descent II were developed by small groups that worked closely together (often in the same room), and as we grew to a team of almost twenty people, we didn’t introduce enough management to control the process. Even though people had designated titles, there was no real authority attached to those titles. No code reviews, no art reviews, no way of saying, This is bad and we should be going in a different direction. What we needed was more of a hierarchy and a systematic way to get things done. People would have disagreements that were never settled, and that led to bad feelings among team members. It would have been much better if some sort of hierarchy had been in place to mediate disputes, but unfortunately this didn’t materialize during the entire development cycle of the game."
26,Surreal Software Drakan Order of the Flame,1999,https://www.gamasutra.com/view/feature/131586/postmortem_surreal_softwares_.php,Drakan: Order of the Flame,pc,action adventure,multi single,production,design," Although the overall story concept of Drakan was a great, the script and execution of the idea were lacking. We hired a movie scriptwriter to do the initial work on the script, but he was not familiar with the fantasy genre and did not have a firm grasp on Alan’s vision for the design. From there, the script was edited and rewritten by several more people: members of Surreal, members of Psygnosis, even one of the voice actors. Under pressure to finish the script, it was completed with cheesy one-liners and other badly written dialog. Once it had been recorded by the voice actors, it was very difficult to re-record lines that were badly written or acted. Some were re-recorded, but that was a luxury we could only afford for the completely failed lines. The voice acting was difficult to get right, because just as some of the writers had almost no vision of the game, the voice actors likewise had little understanding of the characters they portrayed."
27,Surreal Software Drakan Order of the Flame,1999,https://www.gamasutra.com/view/feature/131586/postmortem_surreal_softwares_.php,Drakan: Order of the Flame,pc,action adventure,multi single,production,technical," Considered by some the Achilles’ heel of Drakan, its multiplayer suffered from developmental neglect. For the game’s multiplayer to have succeeded, the design, art, and programming teams would have had to spend at least twice as much time on it than they did. The two multiplayer designers did most of their level and weapon work during the alpha and beta periods. The same designers also created most of the artwork for the multiplayer effects and weapons. Any game-related bugs that came up were fixed by our single network programmer, who already had his hands full optimizing the underlying network engine. Most of these game-related problems arose because the same weapons were used in both single and multiplayer games, but the original programmers were not careful to make them “network aware.” (...)  One of the biggest chores for the testing team was to make sure that all of our hundreds of 3D models could not be penetrated by missiles, NPCs, or Rynn. Each model had to be properly bounded by the artist during the model’s construction, a process which took about 20 percent of their modeling time to construct. Bounding was generated in our custom modeling tool and approximated the polygons of the model using a hierarchy (tree) of bounding spheres or oriented bounding boxes (OBBs). This made the collision detection system very fast and accurate, but it also meant that if an artist made a mistake in the bounding tree, collision detection might not work. To say this created a testing challenge would be an understatement."
28,Surreal Software Drakan Order of the Flame,1999,https://www.gamasutra.com/view/feature/131586/postmortem_surreal_softwares_.php,Drakan: Order of the Flame,pc,action adventure,multi single,production,testing," Although we tracked bugs internally before and during the alpha and beta releases, Psygnosis was responsible for the bulk of the testing after alpha. For a game as vast and ambitious as Drakan, the time that we allocated for testing was inadequate. Multiplayer and collision detection issues, in particular, were not given enough testing time. When the final shipping date approached, we reluctantly agreed to allow some noncritical bugs to slip through to the gold master in the interest of meeting the deadline. A patch was inevitable."
29,Surreal Software Drakan Order of the Flame,1999,https://www.gamasutra.com/view/feature/131586/postmortem_surreal_softwares_.php,Drakan: Order of the Flame,pc,action adventure,multi single,management-feature,planning," Drakan was originally slated for release in February 1999, but ended up being released six months later. Even with careful scheduling and task planning, we failed to meet the final deadlines. Part of the problem was that we didn’t account for the time the team would spend creating versions of the game for E3 and for magazine and Internet demos. Each demo pulled nearly two weeks of time away from our normally scheduled tasks. The majority of the scheduling problems were due to feature creep and other improvements that were considered necessary during development. In March 1998, the design team was faced with a mountain of work ahead in order to complete the 14 original levels as designed. After careful consideration, the designers decided to spend their efforts on enlarging and improving upon the ten best level designs. They also ended up cutting many features that did not show much game-play promise. The dart gun and the boomerang weapons were among those eliminated from the game. Even though these tasks had already been mostly completed (in terms of code) for several months, they had not yet been put into the game."
30,Multitude Fireteam,1999,https://www.gamasutra.com/view/feature/131823/postmortem_multitudes_fireteam.php,Fireteam,pc,action strategy,online,production,design," Fireteam would have been more willingly accepted by the market if it contained some artificial intelligence (AI). With such an implementation, players could practice using the interface by themselves and, more importantly, players could practice as a team against AIs. With computercontrolled opponents in place, players could play offline or possibly on a LAN against computers opponents. Many users are intimidated by having to learn a new game while playing against other more experienced human players. AIso would have helped ease players into the online-only part of the game, providing a feature that many players expect to find in games today."
31,Multitude Fireteam,1999,https://www.gamasutra.com/view/feature/131823/postmortem_multitudes_fireteam.php,Fireteam,pc,action strategy,online,production,technical," Fireteam is a very complicated project with many processes running on both the client and the server. Add in the complication of the Internet, and you can get one confusing mess . We tried to break our server components down into smaller, more manageable pieces, each with its own function. We hired some experts in various disciplines to help us better understand parts of the server technology that were new to us. Our mistake was in thinking that these experts could just come in and solve our problems. As we busied ourselves with other parts of the project, it was easy for us to say to ourselves, They know what they’re doing. In the end, however, the development team needs to understand the whole picture and how the pieces really fit together. One of Fireteam’s unique properties is that its server-side components run remotely at an ISP’s facilities. In order to debug something as complicated as our server architecture remotely, our key programmers - not just the client/server experts -needed to understand the whole system. (...)  The Internet poses significant problems for developers. Although we did our best in designing the game around the limitations of the Internet, we did have some technical problems. We originally designed Fireteam around TCP/IP because it’s a reliable transport protocol for network traffic. However, the reliability comes at a very high cost: retransmission times. If a packet is lost on the Internet (which happens a lot), it takes some time for the machines on both ends to realize this and resend the data. TCP/IP guarantees that all packets are in order; therefore, all of the packets after the lost packet will be delayed until the lost packet is sent again. In a fast-paced game such as Fireteam, lost packets can really cause problems. As soon as we started doing real Internet tests, we realized that we needed to start sending some packets unreliably via UDP. These packets could get lost, be out of order, or even duplicated, but they wouldn’t be delayed by other packets. We learned that different packets require different sets of reliability and timeliness, and that developers should use all the tools available to them, both TCP/IP and UDP. We initially labored under the idea that only one protocol should be used for the sake of simplicity, but it’s best to use the appropriate tool for each job."
32,Multitude Fireteam,1999,https://www.gamasutra.com/view/feature/131823/postmortem_multitudes_fireteam.php,Fireteam,pc,action strategy,online,production,testing," As I mentioned previously, when you create an online game, you need to embrace the community. At the same time, a direct connection with a community of testers who aren’t 100 percent aware of your objectives is something that needs to be managed very carefully. The testers will always want something different. When is the last time you played a game and said, This is perfect? I’ve often said that even my favorite game would be better if it had feature X. Most beta testers are young people who have a lot of time on their hands; that’s great for finding bugs, but it can also be a problem because some of them lack perspective. All players have an equal voice in the Fireteam lobby, so we had to watch over the lobby constantly because a few testers could ruin the fun for others, even to the point of instigating a mini online riot."
33,Multitude Fireteam,1999,https://www.gamasutra.com/view/feature/131823/postmortem_multitudes_fireteam.php,Fireteam,pc,action strategy,online,management-people,communication," As we were developing Fireteam, our attention was also focused on growing our new company. We found that it was easy to forget what the contractors were doing and how they fit into the project. We made the naïve assumption that they would be willing to work with an evolving specification. However, when a project is fix-bid, an external developer will only do so much tuning and reworking of code before he or she starts charging you for it. If you don’t manage this relationship closely, these costs add up very quickly. For example, the cost for developing the community web pages doubled from the original quote because the design evolved. The final version of the community web pages was great, but a more thoughtful initial design specification and better management of the process would have saved Multitude significant money and time."
34,Activisions Heavy Gear 2,1999,https://www.gamasutra.com/view/feature/131814/postmortem_activisions_heavy_.php,Heavy Gear 2,pc,shooter simulation,multi single,production,design,"During the production of Heavy Gear II, many of our game designers and external testers began to notice a distinct absence of thrilling game play, which were attributed to several factors: the AI wastoo vicious, the AI-controlled squadmates were disobedient and difficult to deal with, and there was no noticeable ramp-up in difficulty and emotion — some missions were frightfully easy and others absolutely impossible to complete. (The average life expectancy of the player in some of our combat scenarios was about four seconds.)"
35,Activisions Heavy Gear 2,1999,https://www.gamasutra.com/view/feature/131814/postmortem_activisions_heavy_.php,Heavy Gear 2,pc,shooter simulation,multi single,production,documentation,"When turnover occurred on the Heavy Gear II team, we and our schedule encountered a nasty surprise. Many of the systems we inherited were only partially implemented and virtually undocumented. To make things worse, much of the code was written to implement advanced animation and mathematical methods used all over the game engine, and we didn’t have a technical design document that we could refer to in order to determine the intended solution for these systems. Working around the bugs and limitations in these systems cost the team even more time and generated bushels of frustration."
36,Activisions Heavy Gear 2,1999,https://www.gamasutra.com/view/feature/131814/postmortem_activisions_heavy_.php,Heavy Gear 2,pc,shooter simulation,multi single,management-people,crunch-time,"After experiencing the high quality of our second prototype, people at Activision began to get very excited about the future of Heavy Gear II. We were given a highly favorable reception at E3 in 1998, where we finally revealed the game. We subsequently released a playable demo that met with similar acceptance. Our marketing staff, which had been pushing this title from the start, finally had the leverage it needed to differentiate Heavy Gear II from its competitors. Magazine articles began to run, OEM deals were made, and shelf displays were created as everyone anticipated the forthcoming release. Only the development team knew how alarmingly behind schedule the game actually was, however. This was due in part because of some unfortunate turnover in our staff, but the main factor was the amount of time and effort we had allocated to creating the demo. We had hit roadblocks in the past and always rebounded in sterling fashion, so nobody on our team allowed themselves to believe that the demo would cause us to miss our target ship date."
37,Activisions Heavy Gear 2,1999,https://www.gamasutra.com/view/feature/131814/postmortem_activisions_heavy_.php,Heavy Gear 2,pc,shooter simulation,multi single,management-feature,scope,"When the smoke cleared and the demo was finally posted, the team gave a sigh of relief and basked in the warmth of a job well done. Unfortunately, this feeling quickly evaporated when we realized that we had taken almost a three-month departure from our original development schedule and totally exhausted ourselves in the process. I still believe a demo is important to the success of a game, but such a task should be closely correlated to the production of the main SKU. Attempting to factor the demo development time and resources into a schedule significantly different from the game itself can profoundly affect both the product’s quality and timeliness."
38,Activisions Heavy Gear 2,1999,https://www.gamasutra.com/view/feature/131814/postmortem_activisions_heavy_.php,Heavy Gear 2,pc,shooter simulation,multi single,management-feature,planning,"Heavy Gear II was built completely from the battleground up, so every aspect of the game required significant development time. Unfortunately, the development schedule was too optimistic about how long it would take to create the title. Here’s an idea of the scope of the game, as specified by our design document. Heavy Gear II required a brand new game engine and an accompanying suite of design, development, and debugging tools. The game had more than 40 single-player missions, as well as numerous historical and instant-action missions. Additionally, multiplayer functionality (including cooperative play with multiplayer AI) was required for deathmatch, king of the hill, steal the beacon, and historical settings. We were also required to construct three different modes for each and all of these missions: terrestrial, space, and Gomorrah (combat in an enclosed, multi-level, near-future megacity) gaming modes."
39,Raven Softwares Heretic II,1999,https://www.gamasutra.com/view/feature/131748/postmortem_raven_softwares_.php,Heretic II,pc,action adventure,online single,production,documentation,"Since almost every programmer at Raven had been into the code base at one point or another, there was a fair amount of redundancy in routines, and so on. It’s a credit to lead programmer Pat Lipo that things went as smoothly as they did. However, inevitably, coding conflicts arise, as do competing subsystems. I think it would be safe to say that we found the point at which too many clever people working together becomes more of a liability than an asset. It is worth pointing out that the reason we had so much programming power on this project had little to do with the quality of the core team, and everything to do with the sheer quantity of work, and looming deadlines."
40,Raven Softwares Heretic II,1999,https://www.gamasutra.com/view/feature/131748/postmortem_raven_softwares_.php,Heretic II,pc,action adventure,online single,production,tools,"One acknowledged misstep we made was not commissioning a Linux Server version of Heretic II to be released at the same time as retail. Half-Life demonstrated the wisdom of having Linux code available at launch time; witness the number of servers around on launch day. Heretic II never caught up on this, not even to this day. We have a Linux version in the works now, but its been delayed by the Expansion Pack and the Expansion Pack bug fixes, but it may be a case of too little, too late. (...) Don’t rebuild your physics system unless you really have to. We did this, and it turned out to be a much larger albatross than we had imagined. It didn’t help that our resident physics expert left for greener pastures after implementing it, either. The original idea was to integrate the new physics systems with the AI more tightly, fix one or two legacy bugs with physics from the Quake engine, and add some cool features like proper friction and inertia. As it turned out, we introduced more bugs than we fixed, and the AI integration was never used."
41,Raven Softwares Heretic II,1999,https://www.gamasutra.com/view/feature/131748/postmortem_raven_softwares_.php,Heretic II,pc,action adventure,online single,production,bugs,"Once the game was released, the decision was made to go ahead with a glorified patch, referred to as the Enhancement Pack. The idea behind this was that H2 was pretty much free of major bugs, and as such didn’t really require a patch to fix anything. However, there were some bugs in the code. The first was a joystick mistake we made. This was fixed almost immediately, and released on the net. After that, most of the team was disbanded into other projects, leaving Pat Lipo, Marcus Whitlock and myself to complete the Enhancement Pack. We started out fixing the small bugs we knew were out there, and then moved into expanding the feature set of H2 to what we would have liked it to have been when we shipped."
42,Raven Softwares Heretic II,1999,https://www.gamasutra.com/view/feature/131748/postmortem_raven_softwares_.php,Heretic II,pc,action adventure,online single,business,marketing,"We released a few days off from Half-Life. You can’t get much more unfortunate than that, unless you release the same day as Quake 3. With all the anticipation that had been built regarding Half Life, the release time was unfortunate. On the other hand, our release date had been set by Activision when we were first green-lighted, whereas the Valve guys tended to be more floating with theirs, so it would have been difficult to plan around it."
43,Ritual Entertainments Sin,1999,https://www.gamasutra.com/view/feature/131727/postmortem_ritual_entertainments_.php,Sin,pc,shooter,multi single,production,design,"The more that’s in a game, the more there is to go wrong. Although creating the gadgets and gizmos and character AI and environment interactions and such are some of the best aspects of level designing, level designing in particular has become far too complicated for any single individual to control. Level designing isn’t simply making square rooms with connecting hallways anymore, and gone are the days of simply placing characters on a map and relying on their inherent AI to control them. The demand for realism has requires almost unattainable detailing to successful levels."
44,Ritual Entertainments Sin,1999,https://www.gamasutra.com/view/feature/131727/postmortem_ritual_entertainments_.php,Sin,pc,shooter,multi single,production,tools,"We lacked a standardized method of texturing models from the outset. We started out using the Quake method of planar projecting the front and back of a character. Planar projection worked well, but about halfway thorough the project, it became apparent that this methodwasted a lot of texture space and wasn’t the right way to map, especially with less organic models. When we got per-face mapping and 3D Studio Max 2,we took more care to unwrap the models carefully and use the texture space better. Most of the original models were redone, but a few slippedthrough due to time constraints."
45,Ritual Entertainments Sin,1999,https://www.gamasutra.com/view/feature/131727/postmortem_ritual_entertainments_.php,Sin,pc,shooter,multi single,production,technical,"Sin was originally scheduled for a Spring 1998 release, and we didn’t get the Quake II source until late December 1997. We started the porting in early January, and it took a lot longer than we had anticipated. Because the Quake II source was drastically different from the original Quake engine that we started with, major systems were rewritten instead of ported. We rewrote the scripting system three timesduring the course of development. This was a major setback — finding issues with levels after they had been completed forced the level designers to rework each level, and in most cases, they just started over from scratch. We definitely learned our lesson in regard to trying to implement a major technology change midstream in a project. (...) Developers at Ritual are very sensitive to the needs of the first-person shooter gaming community, and one the reasons that Quake hasbeen such a success is that it is easily changed and modified by the end user. Nonprofessionals in this community made hundreds of modificationsand total conversions, and we wanted SIN to be just as flexible. Most of the major systems in SIN can be changed without rewriting any source code. Just make a simple change to a plain text file, and voilà, you have new behavior and effects. However, writing generalized source code is a lotharder than writing special case functions just to perform one task. Accommodating our goal of an easily modifiable game added a lot of extra development time to the new systems that we’d created."
46,Ritual Entertainments Sin,1999,https://www.gamasutra.com/view/feature/131727/postmortem_ritual_entertainments_.php,Sin,pc,shooter,multi single,management-people,team,"Ritual is a new company and it went through a lot of growing pains during SIN’s development. Many new faces cameinto the company, and many left. Actually, it is only now that the dust has settled that any real sense of a bona fide team can be seen. Ournewly formed tribe felt little sense of cohesion, as most members were basically strangers to each other. A real team requires lot of faith andtrust in order to act as a unit while performing something as creative as game design. This fact was especially evident in our decision-makingprocesses. A clear vision was often muddled by too many inputs; settling on specifics often became impossible."
47,Zombie SpecOps Rangers Lead the Way,1999,https://www.gamasutra.com/view/feature/131832/postmortem_zombies_specops_.php,SpecOps: Rangers Lead the Way,pc,shooter simulation strategy,multi single,management-people,team," The last thing that I expected was that it would be hard to find good programmers in Seattle. I was hired at the start of SpecOps’ development and didn’t manage to bring the entire programming staff on board for nearly seven months. Needless to say, this caused substantial delays. We had similar problems hiring the art team. During the first months, the employees we hired burned out because they were trying to accomplish the duties of several people. I’m not sure what can be learned from this, but planning around such problems in the future will save some headaches."
48,Zombie SpecOps Rangers Lead the Way,1999,https://www.gamasutra.com/view/feature/131832/postmortem_zombies_specops_.php,SpecOps: Rangers Lead the Way,pc,shooter simulation strategy,multi single,management-feature,cutting-features," The spec for this game was more than a little overboard. It originally targeted the PlayStation, Macintosh, and PC. It had networking, supported 3D hardware, used motion capture, and contained support for just about everything else you could want in a game. It was also on a 15-month development cycle. To top it off, Zombie was writing the entire engine from scratch. On the up side, there was a healthy budget. We dropped the Macintosh version right away, and we terminated the PlayStation version at alpha (when it was still running at five to eight FPS). Networking support was postponed for an expansion pack a year into development. While setting our sights so high was clearly the reason we got so far, dropping this many versions and features along the way was worse than anyone expected. I blame publishers as much as developers in this kind of situation. Publishers go through more product cycles than developers do, and should have some past experience telling them what is realistic to achieve. We learned the hard way what’s possible to accomplish in 15 months; as a result, we completed the game in 20. (...) As mentioned earlier, at one point we mitigated being over schedule by dropping networking capabilities from the release. I don’t think anyone actually believed that this was a good idea, but it somehow it happened anyway. The fact is that as much as 3D acceleration is the future, so is networking. Luckily, the gaming community has been taking it soft on us, and we’re working hard to get out an expansion pack that has a variety of network play options. That pretty much concludes the walkthough of the major components of the Viper engine and the problems we had while creating the title. While I could only really touch on the major issues we faced and the solutions we devised, hopefully it’s enough to make the efforts of other developers a little easier. If there’s a component of the Viper engine that you would like to see explained in further detail, please let me know. I encourage other developers to describe their projects in similar detail, so that we can learn from each other’s mistakes as well as successes"
49,Zombie SpecOps Rangers Lead the Way,1999,https://www.gamasutra.com/view/feature/131832/postmortem_zombies_specops_.php,SpecOps: Rangers Lead the Way,pc,shooter simulation strategy,multi single,business,marketing," Right around E3 ‘97, we heard that our publisher, BMG Interactive, was planning to go out of business. It was not clear if our game would make it to the shelves, although BMG tried to assure us that everything was fine. After many months of things being up in the air, Ripcord Games came in and bought the title. In the interim, however, we lost morale, and there was some misdirection in our work effort. Ripcord came onto the scene so late that it had to really rush to get a marketing campaign going. Nobody wants something like this to happen, but it comes with the territory."
50,Postmortem: Presto Studios Star Trek: Hidden Evil,1999,https://www.gamasutra.com/view/feature/131809/postmortem_presto_studios_star_.php,Star Trek: Hidden Evil,pc,adventure puzzle,single,production,design,"Possibly our worst decision in making Star Trek was our separation of level design and level construction. The decision came from the companys experiences with its previous graphic adventure products. In this design setting, having one artist create the visual and mechanical concept of the level and another model the level from the drawings is a perfectly viable pipeline. However, in a game with realtime navigation and combat, trying to design something for beauty will not necessarily get you something that is entertaining. "
51,Postmortem: Presto Studios Star Trek: Hidden Evil,1999,https://www.gamasutra.com/view/feature/131809/postmortem_presto_studios_star_.php,Star Trek: Hidden Evil,pc,adventure puzzle,single,production,tools,Many members of the production team lacked any serious knowledge of the engine or the tools used to create worlds. This included people who were designing gameplay on paper without any real understanding as to the construction pipeline for their ideas.
52,Postmortem: Presto Studios Star Trek: Hidden Evil,1999,https://www.gamasutra.com/view/feature/131809/postmortem_presto_studios_star_.php,Star Trek: Hidden Evil,pc,adventure puzzle,single,production,technical,"The first generation of tools at Presto was practically a step-by-step course in how to not create tools. The incremental design ate away at all sides until the whole structure threatened to fall in on itself. The code for the tools was bad in that they never were crash proof. And in our mad rush to get in more features, we never seemed to be able to spend the time to fix these sporadic problems. So bad code was covered up with more bad code and the situation grew worse as time progressed (...) One interesting example of the opposite problem arose in our custom interface system: we had too much design. Our interface system is the library of code that handles our front end interface and our in-game heads up display. The code was written by a programmer with extensive experience in C++ object oriented design and loved to use it. He spent many weeks designing and crafting an interface system which was extremely... well... designed. Private data fields were placed into private headers. The const operator was used everywhere. Void pointers hiding internal data structures made debugging a nightmare."
53,Postmortem: Presto Studios Star Trek: Hidden Evil,1999,https://www.gamasutra.com/view/feature/131809/postmortem_presto_studios_star_.php,Star Trek: Hidden Evil,pc,adventure puzzle,single,management-people,communication,"To make the situation worse for the production team, the interface was designed by the programmer as he went. Once again, incremental design reared its ugly head and bit off a large chunk of our productivity. And the fact that a left brained programmer was creating a graphic interface for right brained artists is a mistake that Im sure most game makers have seen at one time or another."
54,Postmortem: Presto Studios Star Trek: Hidden Evil,1999,https://www.gamasutra.com/view/feature/131809/postmortem_presto_studios_star_.php,Star Trek: Hidden Evil,pc,adventure puzzle,single,management-feature,feature-creep,"The initial game design was a mammoth undertaking especially when you consider the one year timeline. As we watched ourselves fall behind early with milestones, we knew that unless we changed the project significantly we would completely miss our gold master date and Christmas with it. It was decided that cuts had to be made."
55,Postmortem: Presto Studios Star Trek: Hidden Evil,1999,https://www.gamasutra.com/view/feature/131809/postmortem_presto_studios_star_.php,Star Trek: Hidden Evil,pc,adventure puzzle,single,management-feature,cutting-features,"After removing many scenes from the game, we needed to repair the holes left in the story. Our solution for many of these cuts was to create a prescripted cut scene. Some of them showed basic actions or events but most fell into the category of data dump. These are scenes that obviously exist for no purpose other than to convey information to the player. The result in Star Trek was one or two minute dialogues with characters standing around talking, sometimes over communicators which really doesnt create an energetic scene. Our use of dialogue to convey information breaks one of the fundamental rules of visual entertainment, convey information with images. Instead of watching someone tell you about a level, why not listen to the voice over while watching a fly-by of the level on your tricorder."
56,Postmortem: Presto Studios Star Trek: Hidden Evil,1999,https://www.gamasutra.com/view/feature/131809/postmortem_presto_studios_star_.php,Star Trek: Hidden Evil,pc,adventure puzzle,single,management-feature,multiple-projects,"Poor design is not just a problem for artists. Programmers need to design systems before incorporating them into a project especially when there are other programmers. We suffered from the no-design mentality quite a bit on the Star Trek project. Since we were essentially building the game and the engine at the same time, we were constantly running into time conflicts where we needed a new feature right now in order to meet a deadline next week. This resulted in what is often the standard in game programming: design as you go"
57,Postmortem: Presto Studios Star Trek: Hidden Evil,1999,https://www.gamasutra.com/view/feature/131809/postmortem_presto_studios_star_.php,Star Trek: Hidden Evil,pc,adventure puzzle,single,management-feature,planning,"Half way through the project we realized that we did not have the manpower to finish our level instancing. (Level instancing is how we refer to level construction, setting up doors, placing enemies, etc...) Now while this might sound odd to those that come from companies creating Quake clones, remember that Presto Studios has been making prerendered Myst style games for years. Until we ventured into real-time 3D, creating levels was the job of artists who worked on scenes with millions of polygons. Creating low level geometry and placing door logic requires different, more engine specific skills. So we hired two people who were working towards their degrees in computer science to help us lay down the logic needed to make our 3D worlds come to life."
58,Sierras SWAT3 Close Quarters Battle,1999,https://www.gamasutra.com/view/feature/131843/postmortem_sierras_swat3_close_.php,SWAT3 Close Quarters Battle,pc,simulation strategy,multi single,production,design," The original design was extremely ambitious. Most of the individual features seemed doable, but added up they represented a tremendous amount of work. All of us had extremely high expectations for the game, but the total feature set turned out to be unrealistic given our small development staff and fixed schedule. Looking at it another way, the expectation was to create a graphics engine similar to Unreal, with a better character animation system than Half-Life, with better AI than both games put together, and multiplayer, and compelling SWAT officer gameplay. Right. No problem. Some of us suspected the design was over ambitious. In design meetings, we would say something like, “um, this is getting a bit complicated here,” but without a concrete schedule, our concerns were difficult to justify."
59,Sierras SWAT3 Close Quarters Battle,1999,https://www.gamasutra.com/view/feature/131843/postmortem_sierras_swat3_close_.php,SWAT3 Close Quarters Battle,pc,simulation strategy,multi single,production,documentation," Our design document was basically a framework for the game, not a detailed specification of how each feature worked or how they would be implemented. That was fine, except that as we filled in the details, we failed to put the resulting documents into a centralized location. We had many impromptu meetings with the designer where we’d discuss how a feature would work and how it would be integrated into the game. Most of the time, the decisions made in these meetings were sent to the team via email. This worked okay initially, but as the project grew more complex and the number of design decisions increased, these “mini design documents” became increasingly difficult to keep track of. The current design was spread out among many separate documents and emails, and it was difficult to tell if the one you were using was the latest."
60,Sierras SWAT3 Close Quarters Battle,1999,https://www.gamasutra.com/view/feature/131843/postmortem_sierras_swat3_close_.php,SWAT3 Close Quarters Battle,pc,simulation strategy,multi single,management-people,team," We had a difficult time finding the right people for both programming and art positions. Several people were transferred to our project after theirs had been cancelled or had shipped way past its deadline. Needless to say, this is a bad way to fill out a team. Some of them adapted well, but others were totally fried from the tremendous amount of overtime they had just put in, and had a difficult time getting motivated for a new project. We had an especially hard time finding good programmers. We interviewed a lot of people, but our only external hire was the AI programmer, who turned out to be exceptional. The programmer responsible for the character animation export tools had just come from two cancelled projects and only lasted a few months. Another programmer was difficult to work with, refused to work overtime, and quit a couple of months before our ship date."
61,Sierras SWAT3 Close Quarters Battle,1999,https://www.gamasutra.com/view/feature/131843/postmortem_sierras_swat3_close_.php,SWAT3 Close Quarters Battle,pc,simulation strategy,multi single,management-feature,feature-creep," In an effort to pack in as many features as possible, we simply didn’t give ourselves enough time for integration and play testing. For example, most of our character dialogue didn’t roll in until a couple of weeks before we were scheduled to begin QA. Integrating the dialogue took longer than expected, and only at the last minute did we discover that some of it could never even be heard. The AI didn’t really come together until the last month of development. There were some minor problems in the character animation system that caused the AI programmer quite a bit of grief, and the pathing system went through several last minute changes. Having more time to integrate those modules would have made things much easier. Our user’s manual was another casualty of our tight schedule. We were so focused on finishing the game, we simply didn’t give it the priority it deserved. When someone says the manual isn’t important, don’t believe them. People really do read the manual, and it should be play tested just like the game. We won’t make that mistake again."
62,Sierras SWAT3 Close Quarters Battle,1999,https://www.gamasutra.com/view/feature/131843/postmortem_sierras_swat3_close_.php,SWAT3 Close Quarters Battle,pc,simulation strategy,multi single,management-feature,multiple-projects," Due to our tight schedule, we couldn’t wait for the game engine to be completed before starting on the art. This was difficult for the artists, who were developing content for an engine that didn’t exist yet. They used Worldcraft and Quake to prototype some of our early levels, but since our engine used a different rendering algorithm (cells & portals), they could only do rough work. Even after the engine was up and running, it was constantly evolving. Our design called for levels with an incredible amount of detail, and the engine was constantly being optimized to increase the frame rate. These optimizations would sometimes require the level designers to change the way they worked, and existing levels had to be modified. Engine changes would often cause rendering artifacts, and it was difficult for them to tell whether the problem was with their art or the most recent engine change. The AI was also constantly evolving and frequently required existing levels to be changed. Things like valid door angles, minimum hall widths, and 3D path node placement were not finalized until late in the project"
63,Irrational Games System Shock 2,1999,http://www.gamasutra.com/view/feature/131813/postmortem_irrational_games_.php,System Shock 2,pc,shooter,multi single,production,design,"We took a novel approach to the level building process by attempting to apply design levels using a production-line method. Using this metaphor, we attempted to divorce the different stages of work on the level: rough architecture, decorative and functional objects, architectural polish, and lighting. It was not considered necessary for the same individual to be involved in all stages of this production process. This approach had positive and negative consequences. The advantages were that we could track progress on levels, we could ""bootstrap"" levels fairly quickly, and we could (in theory) swap individuals in and out of different tasks. The disadvantages are fairly obvious, and most stem from the fact that the various stages of level design are clearly not independent (for example, architecture is ideally built with an understanding of the functional objects that are to be used in the level). Although I think our process was necessary in order to get the game out on time, it probably detracted from the quality of some of the levels."
64,Irrational Games System Shock 2,1999,http://www.gamasutra.com/view/feature/131813/postmortem_irrational_games_.php,System Shock 2,pc,shooter,multi single,production,tools,"In hindsight, our failure to understand the amount of work needed to design levels is reprehensible given that we had seen the same problems emerge on Thief, and that System Shock 2 levels involved substantially more complex object placement than Thief. I attribute this error mostly to our denial of the problem - we had a limited budget for level designers and there is a long training time required to get designers familiar with the complex Dark Editor. So we locked ourselves into working with the resources we had. Since each individual task required from the designer (apart from initial architectural work) was relatively simple, it was easy to believe that the sum total of work was also relatively small. What we overlooked was the fact that System Shock 2 involves so many objects, scripts and parameters. As such, the work load on level designers was excessively large. (...) Our other major design hurdle was the instability and inscrutability of Dromed, the Dark Engine editor. Dromed is a cantankerous beast and many man-months were spent struggling with its idiosyncrasies. Perhaps our biggest problem stemmed from the lack of support in one crucial area - the part of the engine concerned with translating the designer-placed brushes into the basic world representation. Like many complex 3D engines, the Dark Engine suffers from troubling epsilon issues (data errors caused by rounding inaccuracies) and other glitches that crop up during level compilation. Because the programmer who implemented the basic renderer and world representation was not available during the majority of the System Shock 2 development cycle, we had to work around these problems. It was often a frustrating process when the fundamental cause of the problems was not even known. Over time we developed a set of heuristics to avoid the majority of the glitches, but we were forced to lock down much of the level architecture before we wanted to in order to ensure stability. (...) The Dark Engine has a complex creature animation playback system and deformable mesh renderer. We encountered many problems with this piece of technology along our data integration path, and found quirks in the playback systems as well. Primarily, the system was hampered by the fact that data frequently had to be modified by hand, that mysterious bugs would appear in motions during playback which had not been present in the source data, and that few tools were available for debugging and analysis. We were ill-equipped to deal with these kinds of problems, having devoted few resources to dealing with the technology problems. (...) Motivated by the dramatic scripted sequences in Half-Life, we attempted to introduce similar elements into System Shock 2. In doing so, we broke one of our rules: we tried to step outside the bounds of our technology. Although we attempted relatively simple sequences and ultimately got them working, they were time sinks, and the payback was relatively slight. (...) Early in the project we were asked to identify the major risks associated with the project. Our number one candidate by far was the multiplayer component. This was the only new substantial engine feature that was to be added and it was a complicated piece of work. We were particularly nervous about this technology for a couple of reasons. First, it is usually much harder to make this kind of pervasive change to an existing piece of software than it is to build it in from scratch. Second, Looking Glass had no track record in shipping multiplayer technology and we were not confident that the development was fully understood."
65,Irrational Games System Shock 2,1999,http://www.gamasutra.com/view/feature/131813/postmortem_irrational_games_.php,System Shock 2,pc,shooter,multi single,production,technical,"Our capture sessions were hampered by our inexperience with the technology and by the fact that we did not plan properly for the sessions. We hadnt defined key poses, rehearsed the motions, or ensured that our motions were compatible with the technology. Optical capture technology, the technology that we used, can be glitchy and has difficulty with motions that have obscured markers, as in the death motions that were necessary for System Shock 2. Over the course of three sessions, we gradually refined our motions, but we spent a lot of time reshooting failed captures from earlier sessions. Even in the best cases, most of our captures exhibit strange artifacts (feet pointing down through the ground, hands improperly aligned, and so on), whose causes are still unknown to us. In future projects we will hand-animate almost all of the data, and we will need to understand better what aspect of the conversion process introduced these artifacts into our final game animations, although the irregularities never appeared in our raw data. Motion capture technology, while highly efficient compared to hand animation, must be approached carefully to obtain good results."
66,Irrational Games System Shock 2,1999,http://www.gamasutra.com/view/feature/131813/postmortem_irrational_games_.php,System Shock 2,pc,shooter,multi single,production,testing,"Because this was the first multiplayer product developed by Irrational or Looking Glass, we did not properly estimate the time required for the multiplayer testing. We did not devote adequate quality assurance resources to this feature. Too much time was spent testing the multiplayer features over the LAN and not enough over the more demanding modem connections."
67,Irrational Games System Shock 2,1999,http://www.gamasutra.com/view/feature/131813/postmortem_irrational_games_.php,System Shock 2,pc,shooter,multi single,management-people,delays,"Irrational did not want to introduce multiplayer support into System Shock 2 because we considered it a tangential feature that did not contribute to our core strengths. However, marketing concerns dictated it, so ultimately we acquiesced. Our lack of enthusiasm for this feature contributed to its developmental problems because we failed to monitor its progress adequately or raise concerns when that progress fell behind schedule. (...) Given the difficulties posed by the multiplayer technologies, the engine developers working on the task made great efforts, and their early results were promising. However, the early departure of one of the programmers, and the fact that he was not replaced, ultimately doomed any possibility of shipping the multiplayer technology with the initial SKU. Reluctantly, we opted for a patch that would be available at the same time as the single-player box reached shelves. Our cooperative multiplayer game will undoubtedly be fun and will probably be enjoyed immensely by a relatively small number of our customers. However, we wonder whether our failure to deliver a promised feature in the box will ultimately hurt us more than the absence of that feature from the start would have."
68,Irrational Games System Shock 2,1999,http://www.gamasutra.com/view/feature/131813/postmortem_irrational_games_.php,System Shock 2,pc,shooter,multi single,management-people,communication,"One difficulty that we encountered was educating our designers in what was expected from them in terms of game-play implementation. Most of our level builders had previously built Quake or Unreal levels and were not familiar with the style of game play that we were trying to build in System Shock 2. Partially this was because we were simply exploring a style of game play that we did not entirely understand ourselves. But it reflected a failure on our part to properly educate the designers. Building prototypical spaces, looking at past games and conducting more intensive discussions about game play will all be part of our future projects. (...) Our primary animation source was motion capture data. We were nervous about the technology from the start and attempted to minimize our risk by concentrating primarily on humanoid creatures with a small number of interesting variants such as spiders and floating boss monsters. In retrospect, this was a very wise decision, as we had a lot of trouble even with this simple set of creatures. Motion capture technology and capture services were contracted from a local company, but unfortunately this company viewed its motion capture work primarily as a side business and did not display much interest in it. In fact, they cancelled this sector of their business during our project, and we had to fight hard to complete the sessions that we had already scheduled with them."
69,Irrational Games System Shock 2,1999,http://www.gamasutra.com/view/feature/131813/postmortem_irrational_games_.php,System Shock 2,pc,shooter,multi single,management-people,team,"In addition, psychological factors, such as lack of ownership and training issues (stemming from unfamiliarity with levels) speak very strongly against transferring people from one task or level to another. Nevertheless, there were several benefits of our procedure - mostly the ability to employ particularly talented individuals to pinch hit on particular levels, and the psychological benefits of completing architectural work early in the schedule."
70,Irrational Games System Shock 2,1999,http://www.gamasutra.com/view/feature/131813/postmortem_irrational_games_.php,System Shock 2,pc,shooter,multi single,management-feature,planning,"In addition, we made a classic beginners mistake and failed to provide adequate time for tuning in response to play-testing feedback. In System Shock 2 this was particularly important because the ability of the player to re-enter levels means that the difficulty of a level cannot be adjusted in isolation from the rest of the game. Often we had to impose global changes across all levels, which could be very expensive even when the change was relatively minor. (...) As the principals of the company, Ken, Rob and I didnt really understand what it took to run a business and simultaneously work in that business. None of the Irrational founders started the company to be businessmen, and we have always believed that the ultimate health of the company depended on us all staying involved in the development process, which is, after all, what each of us enjoys and wants to do. Unfortunately, as anyone who has run a business knows, there is a lot more to starting and maintaining a company than sitting around at board meetings smoking cigars. From the mundane matters of making payroll, organizing taxes and expense reports to business negotiations and contract disputes, there is substantial overhead involved in running even a small company such as Irrational. In our naïveté, we did not factor these tasks into our schedules and the result was that they mostly became extra tasks that kept us in the office late at night and on weekends. As a result of our misjudgment, we just had to work harder. Rather than enduring a crunch period of a few months, the entire last year of the project was our crunch time, as we struggled desperately to fulfill our jobs as programmers, designers, and managers as well as keep the money flowing in (and out) of the company. (...) As well as destroying our personal lives, our failure to judge the magnitude of our task meant that we had to devote less time than we desired to every aspect of our work. My programming time was severely curtailed and I was able to spend far less time on System Shocks AI than I wished. Simultaneously, I was unable to provide the level of direct management that I wanted, and I was forced to postpone company financial work until the end of the project or hurry it through. The results were less than optimal all around."
71,Postmortem: HyperBole Studios The X-Files,1999,http://www.gamasutra.com/view/feature/131811/postmortem_hyperbole_studios_the_.php,The X-Files,console pc,simulation,single,production,technical,"The scale of the game design and the tools built to develop it was at a level of generalization quite a bit higher than what we could actually achieve with The X-Files Game. The technology was designed to anticipate a wider range of products than just one game, and was therefore generalized to solve a wide range of problems. Unfortunately, this extra effort cost development time that wasnt accounted for in the initial schedules, and the project as a whole suffered for it"
72,Postmortem: HyperBole Studios The X-Files,1999,http://www.gamasutra.com/view/feature/131811/postmortem_hyperbole_studios_the_.php,The X-Files,console pc,simulation,single,management-people,crunch-time,"The most severe blow suffered by all teams was from accepting an unrealistic schedule. Despite endemic problems with producing finished video, the large amount of graphics to be created, and the sheer size of the programming task, the concept that was floated at the time was that it would be possible to adhere to the original schedule if everyone simply worked around the clock. Foolish and naïve, we bought it, and started pushing"
73,Postmortem: HyperBole Studios The X-Files,1999,http://www.gamasutra.com/view/feature/131811/postmortem_hyperbole_studios_the_.php,The X-Files,console pc,simulation,single,management-people,communication,"This top-down approach to management worked into project scheduling as well. Time and again, developers were told that the schedules they wrote for the project were unacceptable. The schedules that were eventually agreed upon were largely emotional compromises made to avoid more conflict. This unfortunate situation hurt everyone involved, since the success of both the team and the company depends on its schedule being as accurate as possible."
74,Postmortem: HyperBole Studios The X-Files,1999,http://www.gamasutra.com/view/feature/131811/postmortem_hyperbole_studios_the_.php,The X-Files,console pc,simulation,single,management-feature,scope,"Designers not tackling the details of the game design up front exacerbated this problem. Difficult questions like how we were to implement a design concept were not present in the design document. When the developers got to the point of actually implementing a hastily sketched concept, it generally turned out to take much longer than was anticipated. This affected every department; video, graphics, and programming all found that they had much more to do than the design implied when they sat down to work it out."
75,Postmortem: HyperBole Studios The X-Files,1999,http://www.gamasutra.com/view/feature/131811/postmortem_hyperbole_studios_the_.php,The X-Files,console pc,simulation,single,management-feature,planning,"The Playstation port of the game was mired in huge problems for a great deal of its duration. Many of these problems stemmed from one initial difficulty: an outside developer made a low-bid to develop the port before the game design was even complete, and they were hired on the basis of that bid. This team came on approximately a year and a half before the PC/Mac version shipped, and from the outset they were underfunded and in trouble. Many of their developers wanted to be on other projects, and HyperBole was focusing almost exclusively on the PC/Mac version in order to get it shipped. The initial development environment for the port was plagued with systemic problems that were tackled by writing complex in-house tools that often acted as a band-aid rather than actually fixing the problem. Meetings were generally frustrating for all involved, and there seemed to be a lot of confusion about where the project actually stood. I have learned that this is generally a good indicator that things are not progressing well."
76,Thief: The Dark Project,1999,http://www.gamasutra.com/view/feature/131762/postmortem_thief_the_dark_project.php,Thief: The Dark Project,pc,puzzle roguelike,single,production,design,"Trouble with the AI. If one thing could be called out as the reason Thiefs gameplay didnt come together until late in the process, it would be the AI. The AI as a foil to the player is the central element of Thief, and the AI we wanted wasnt ready until late in the spring of 1998. As lead programmer and author of the final AI, I take full responsibility for that."
77,Thief: The Dark Project,1999,http://www.gamasutra.com/view/feature/131762/postmortem_thief_the_dark_project.php,Thief: The Dark Project,pc,puzzle roguelike,single,production,tools,"One of the boils never lanced on the project was our editor, Dromed. Although it was sufficiently powerful and provided the essential functionality we needed to ship the game, Dromed was a poorly documented and sometimes disagreeable editor. Dromed was first developed as a demonstration editor when the target platform of the game was DOS. As a demo, it never received the kind of formal specifications and designs one would expect for the central experience of the design team. As a DOS application, it lacked the consistent and relatively easy-to-use user-interface tools of Windows."
78,Thief: The Dark Project,1999,http://www.gamasutra.com/view/feature/131762/postmortem_thief_the_dark_project.php,Thief: The Dark Project,pc,puzzle roguelike,single,production,technical,"The project was started because of the renderer, rather than the reverse. The basic core of the renderer for Thief was written in the fall of 1995 as an after-hours experiment by programmer Sean Barrett. During the following year, the renderer and geometry-editing tools were fleshed out, and with Dark Camelot supposed to ship some time in 1997, it looked like we would have a pretty attractive game. Then, at the end of 1996, Sean decided to leave Looking Glass. Although he periodically contracted with us to add features, and we were able to add hardware support and other minor additions, the renderer never received the attention it needed to reach the state-of-the-art in 1998. The possibility that we might not have a point programmer for the renderer weighed heavily on the team. "
79,Thief: The Dark Project,1999,http://www.gamasutra.com/view/feature/131762/postmortem_thief_the_dark_project.php,Thief: The Dark Project,pc,puzzle roguelike,single,management-feature,budget,"Midway through 1997, Thief was just starting to gather momentum. We were fully staffed and the stealth design was really starting to get fleshed out. Unfortunately, Looking Glasss financial situation was bleak.Few emotions can compare to the stress of heading to work not knowing who might be laid off, including yourself, or whether the doors would be locked when you got there. The company shed half of its staff in a span of six months, and while the active teams tried to stay focused, it was hard when one day the plants were gone, another day the coffee machine, then the water cooler."
80,Thief: The Dark Project,1999,http://www.gamasutra.com/view/feature/131762/postmortem_thief_the_dark_project.php,Thief: The Dark Project,pc,puzzle roguelike,single,management-feature,planning,"Although it is a cliché in the software industry to say our scheduling and budget planning were woefully inadequate, the Thief project suffered greatly from this malady. There were several elements to our deficient planning. During Dark Camelot, and continuing through the first half of Thief, we staffed the team before the design and technology was sufficiently mature. In Thief, this led us to rush towards finishing the design, when we didnt necessarily understand the design and technology. With insufficient specifications of both the code systems and mission designs, we ended up doing lots of content that was essentially wrong for the game we were making. Code was written and spaces were built that werent well directed towards the goals of the project."
81,DreamWorks Interactives Trespasser,1999,http://www.gamasutra.com/view/feature/131746/postmortem_dreamworks_.php,Trespasser,pc,adventure shooter,single,production,design,"The biggest indication that Trespasser had game design problems was the fact that it never had a proper design spec. For a long time, the only documents which described the gameplay were a prose-based walkthrough of what the main character would do as she went through the game, and a short design proposal listing the keys which would be used and some rough ideas of what gameplay might actually be. These documents were created before any playable technology existed and were based on promises of how that technology was supposed to work. (...) When it became clear that the technology was not going to exist to support the initial high-concept design, it would have been best to throw out all our existing notions and reinvent the game. Unfortunately, our license made it all but impossible to throw out the original Trespasser concepts. The only major deviations from the original concept were the change from constructive, stacking-based physics puzzles to destructive, knocking-over puzzles, and an attempt to make combat more prevalent in order to shore up the weakness of the destructive physics puzzles. Since no part of the Trespasser code was written to be good at doing first-person shooter gameplay, this attempt to make shooting a more important feature only ended up flaunting some of the weaker points in the game like the lack of an inventory system and the slow frame rate. (...) The dinosaur AI was a state-based system where, based on an emotional state, but it became apparent once dinosaurs were working well enough to put into levels that the differences between the activity states were not discrete enough. Dinosaurs were governed by a set of emotions which theoretically would prompt them to pick appropriate responses at any time. However, in practice they would end up oscillating rapidly between many activities, sometimes even literally standing still and twitching as they tried to decide what to do. Making a usable dinosaur required disabling all but one or two of their activities. This allowed aggressive dinosaurs to really be aggressive, but it also meant that the most dinosaurs were as single-minded as the traditional video game monsters we were trying to one-up"
82,DreamWorks Interactives Trespasser,1999,http://www.gamasutra.com/view/feature/131746/postmortem_dreamworks_.php,Trespasser,pc,adventure shooter,single,production,tools,"Trespasser was begun before the 3dfx Voodoo 1 started the wave of 3D hardware popularity. As such, the Trespasser engineers set about to create an engine in the old-school manner: they picked some previously-unseen rendering technologies and implemented them, ignoring any issues of compatibility with hardware cards. Our engine’s two most incompatible features were its bump mapping, a true geometrical algorithm which could take surface curvature into account, and its image caching. Image caching was intended to allow real-time rendering of huge numbers of meshes, but it was also the system almost solely responsible for the graphical anomalies of popping, snapping trees. The other primary visual artifact of the game was the frequent sorting errors, but this was a result of poorly-constructed levels which continually handed our depth sort algorithm more polygons than its limit, and not a direct result of image caching itself. (...) Trespasser was built entirely in 3D Studio Max. There was no level editor, only the generically-titled GUIApp, which was the game with a debugging shell and not really a tool at all. Our level creation procedure consisted of arranging 20,000 - 25,000 meshes in Max. We used dummy meshes to represent gameplay objects like triggers and defined game behavior of all objects by typing code into their object properties buffers."
83,DreamWorks Interactives Trespasser,1999,http://www.gamasutra.com/view/feature/131746/postmortem_dreamworks_.php,Trespasser,pc,adventure shooter,single,production,technical,"The box model was Trespasser’s most significant physics innovation: it was intended to be a complete simulation of any arbitrarily-sized box interacting with a number of other boxes. The approach used in Trespasser was what is known as the penalty force method. In incredibly simple terms, when boxes collide, they are allowed to intersect with each other (mathematically), and then they push each other apart until they are no longer intersecting. The penalty force model is generally believed to be an unworkable one by the few other people in the industry attempting real time solids models. Trespasser’s physics problems seem to indicate that the rest of the industry was right."
84,SCEEs WipEout Pure,1999,https://www.gamasutra.com/view/feature/130809/postcard_from_gdc_europe_2005_.php,WipEout Pure,mobile,racing,multi single,production,tools," In order to play the game as soon as possible, new solutions were found for the UI development. The entire UI solution was authored in XML format, allowing for very easy revisions to be made to any content. This also abstracted the designers away from the programmers, giving them a freedom to create away from the codebase. The downside to this, of course, was that the XML file become somewhat large. (...)  Much of the story of WipEout Pure is about coping with the absence of finished hardware. Preproduction began on the game in August 2003 with just two staff members, production beginning proper in October of that year. It wasnt until a year later, in August 2004 that the team actually received development kits. Finally, in November 2004 they finally received the browser which forms a core element of the download functionality of the PSP. By launch, the team had grown to twenty. (...)  Added to this, within the studio they also found themselves using two tools, making ships in 3ds max and tracks in SoftImage. The result was specialists in one or the other, but few people who knew both - indeed, the one programmer who knew the external editor became a huge bottleneck. The conclusions that they came to, moving forwards, were radical. They decided on a clean start, rebuilding the game from scratch."
85,SCEEs WipEout Pure,1999,https://www.gamasutra.com/view/feature/130809/postcard_from_gdc_europe_2005_.php,WipEout Pure,mobile,racing,multi single,production,bugs," Dave discussed at great length the detail of how to bypass the problems involved in getting the PSP to recognize the download files, which needed to conform to the valid game save data file format. The solution eventually required the team to piggy back their game data onto a valid PSP system entry, using a dummy PSP data file. The problem of actually getting the content onto the device was related with amusing candor. At first, we thought we might make an iTunes-type application, explained Dave, but then we realized that it might be a little too much hassle to build iTunes as well as a new WipEout game so we settled on a web-based Java applet."
86,Ensemble Studios Age of Empires II: Age of Kings,2000,http://www.gamasutra.com/view/feature/131844/postmortem_ensemble_studios_age_.php,Age of Empires II: Age of Kings,console pc,strategy,multi single,production,tools,"Another one of the items from the AoE postmortem returns again. Microsoft’s DirectPlay API still has a number of issues that make it less than perfect. One of its biggest problems is documentation and testing of the lesser-used portions of the API, or rather the lack thereof. Late in the development of AoK, our communications programmer, Paul Bettner, was able to communicate with the DirectPlay developers and an interesting scenario played out several times: Paul would attempt to solve some problem and the developers would indicate that it wouldn’t work because of bugs in DirectPlay that they knew about but that were not documented. DirectPlay wasn’t the only problem. We decided to use DirectShow to handle our cinematics. The short version of this story is that it just didn’t work. And then there was the Zone software for Microsoft’s online Gaming Zone. The Zone software was developed too late in the process and had a number of problems, due to a lack of time to test and correct. Unfortunately, this means that direct TCP/IP games are more reliable than those played over the Zone, which is disappointing. This was not all the Zone’s fault because we did not get our requirements to them soon enough."
87,Ensemble Studios Age of Empires II: Age of Kings,2000,http://www.gamasutra.com/view/feature/131844/postmortem_ensemble_studios_age_.php,Age of Empires II: Age of Kings,console pc,strategy,multi single,production,technical,"At first people found bugs in AoE and exploited them to win unfairly. Then it got even worse. Programs called “trainers” were developed that would actually modify the game’s code while it was running to allow players to cheat. Being the developer — not the publisher — of AoE, we don’t have the final decision if or when a patch is to be released. As a result, all during 1999 our reputation as developers was assaulted by fans who saw us as uncaring about the problems that were driving people away from online play of our games. (...) The number of individual frames of graphics in AoK is in the tens of thousands, and we didn’t do a good job managing it. The programmers had a source-control system to help coordinate their primary output of code and the designers had the game’s database system, but no such equivalent existed for the game’s art assets. Artists could be working on something with no idea that anyone else was also working on it. There was no way to get a momentary snapshot of who was working on what, other than going around from office to office. Plus, there was no way to tell which files were actually live and being used and which ones were just taking up space. Also missing was a way to go back and find prior versions of art, or to guarantee that new versions wouldn’t be overwritten. As we have grown as a company, this problem has grown even faster. To address this problem in the future, a source-control similar to the art asset management system is being developed for use in all future projects."
88,Ensemble Studios Age of Empires II: Age of Kings,2000,http://www.gamasutra.com/view/feature/131844/postmortem_ensemble_studios_age_.php,Age of Empires II: Age of Kings,console pc,strategy,multi single,production,testing,"Many of our play-tests were not organized and focused enough, seriously reducing the amount of new and meaningful feedback obtained. It wasn’t always clear when we were testing for specific bugs and issues, and when we were testing for “fun.” We had a schedule of participants which drew upon the whole company, but schedule conflicts and lax enforcement resulted in the same people playing most of the games. We played too much multiplayer and not enough attention was given to the single-player game. And some people took it much too seriously, trash-talking other players, celebrating wins at the loser’s expense and storming off when they were losing. Play-test problems weren’t confined to Ensemble, though. At Microsoft, it was discovered that a play-tester had turned cheats on, playing to win not to test, in almost every game for over a month, which invalidated all the feedback from that group for the prior two months."
89,Ensemble Studios Age of Empires II: Age of Kings,2000,http://www.gamasutra.com/view/feature/131844/postmortem_ensemble_studios_age_.php,Age of Empires II: Age of Kings,console pc,strategy,multi single,management-feature,security,"Prerelease versions of nearly all games wind up circulating in pirate channels known as “warez”. This happened with AoE. Imagine our surprise at reading an entire review of the game (an alpha version) eight months before it was released. Fortunately, almost no one bothered with it until the game was properly released because nobody knew much about it. AoK was a completely different story. It was a highly anticipated sequel to a very successful game, and the various warez sites were tripping all over themselves to get a copy of the latest build. And get a copy they did. They were usually only one or two weeks behind our latest build. It seemed as though copies were leaking out from every imaginable source — play-testers at Microsoft, previews sent to magazines, even internal sources. Unfortunately, positively identifying and fingering the culprits was almost impossible. There were hacking attempts on our FTP server and network, though the real rub came from the pirates in Hong Kong and Singapore. They took the warez versions of AoK, burned them onto CDs, added some cover art, and sold the game throughout the Pacific Rim. In Korea, the CD vendors operating in front of Microsoft’s headquarters had a warez version of AoK for sale. Warez versions were even turning up on eBay. Though we doubt bottom-line sales were hurt much, our pride certainly suffered. Any of our future games will probably require connecting to a secure server of our own design to operate, even for single-player games."
90,Postmortem: Westwood Studios Command and Conquer: Tiberian Sun,2000,https://www.gamasutra.com/view/feature/131595/postmortem_westwood_studios_.php,Command and Conquer: Tiberian Sun,pc,strategy,single,production,documentation,"One of the side effects of schedule slippage was that we locked our documents too early in order to achieve the localization plan. We knew this was going to wind up causing us significant pain, but at the time there was nothing we could do to avoid it. The result turned out well, but a lot of time and effort was spent to make everything work together."
91,Postmortem: Westwood Studios Command and Conquer: Tiberian Sun,2000,https://www.gamasutra.com/view/feature/131595/postmortem_westwood_studios_.php,Command and Conquer: Tiberian Sun,pc,strategy,single,production,technical,"As with most projects in development today, Tiberian Sun suffered from scheduling problems; ours resulted in a nine-month delay. There wasn’t a single reason that caused the product to be delayed, but rather a series of seemingly minor contributing factors. Brett Sperry has a rule of thumb that we often refer to when scheduling projects. When you add one fundamental new technology to a project, it can cause slippage up to 90 days. When you add two fundamental new technologies it can add a year to the anticipated release date. When you add three or more new technologies it becomes impossible to predict the release date of the project accurately."
92,Postmortem: Westwood Studios Command and Conquer: Tiberian Sun,2000,https://www.gamasutra.com/view/feature/131595/postmortem_westwood_studios_.php,Command and Conquer: Tiberian Sun,pc,strategy,single,management-people,delays,"Everybody on the team knew this and we tried as hard as we could to work out all the details before we started the shoot. The problem was we didn’t have enough time and couldn’t change the date of the shoot because we wouldn’t have been able to get our two main actors, James Earl Jones and Michael Biehn. Going into the shoot, we had a pretty good idea of how we were going to work out all of the technical details such as camera tracking on a bluescreen, matching lighting to computer graphics, compositing, and so on. However, we ran into difficulties because we didn’t allow enough time for the more complex shots and were forced to edit on the fly during the shoot."
93,Postmortem: Westwood Studios Command and Conquer: Tiberian Sun,2000,https://www.gamasutra.com/view/feature/131595/postmortem_westwood_studios_.php,Command and Conquer: Tiberian Sun,pc,strategy,single,management-feature,feature-creep,"Everybody stresses the importance of working off of a design document and not deviating from it. Unfortunately, this just isn’t realistic since every product evolves during the course of development and sometimes the original design proves to be lacking. A team has to be able to incorporate new ideas during development if the final project is to be better. However, the flip side of this idea is that the team must be able to cut features diplomatically when it is in the best interest of the project."
94,Postmortem: Westwood Studios Command and Conquer: Tiberian Sun,2000,https://www.gamasutra.com/view/feature/131595/postmortem_westwood_studios_.php,Command and Conquer: Tiberian Sun,pc,strategy,single,management-feature,cutting-features,"Tiberian Sun‘s development had many challenging moments when features had to be cut for one reason or another. A perfect example of this was the ability to order a limited number of units through a drop-ship loading screen before a mission. This sounded like a great idea on paper and we had already coded it and incorporated it into the game. It wasn’t until we actually played with it that we realized it just didn’t fit and had to be removed. Looking back at the project, I think we could have been more aggressive in cutting or changing certain features to make sure their returns were really worth the development investment. I’m a firm believer in the idea that less is more and that fewer but more fully developed features are the way to go. If a feature isn’t amazing, you should cut it or make damn sure it becomes amazing before you ship the product."
95,Postmortem: Westwood Studios Command and Conquer: Tiberian Sun,2000,https://www.gamasutra.com/view/feature/131595/postmortem_westwood_studios_.php,Command and Conquer: Tiberian Sun,pc,strategy,single,management-feature,planning,"One of the things that we did not do was explore all of the new features to their logical conclusions. This would have allowed us to do a lot more with a smaller feature set and provide an even better game. A perfect example of a feature that was begging to be used more is the dynamic-battlefield concept. The basic idea behind the dynamic-battlefield concept is that players’ actions alter the battlefield. For example, a player could set fire to trees to burn a path into an enemy’s base. We wound up cutting this particular feature because it caused path-finding problems. Also, battles with heavy weapons would cause cratering of terrain which hindered unit movement."
96,Ion Storms Deus Ex,2000,https://www.gamasutra.com/view/feature/131523/postmortem_ion_storms_deus_ex.php,Deus Ex,console pc,action shooter,multi single,production,technical,"I dont know how we missed it, but we did. Its not that we didnt spendtime on AI. We started thinking about AI early in preproduction. Unfortunately, what that meant was that the AI was, to a great extent,designed in a vacuum, and as is often the case, we didnt really know what the game required with respect to AI until relatively late indevelopment. And that meant implementing AI features early on that ended up being unnecessary later, once our design had evolved into itsfinal form. In addition, building on the base of Unreal Tournaments pure shooter AI meant that, instead of designing a system specifically forour needs, we ended up adding stuff and tweaking until the bitter end, causing NPC behavior to change constantly, right up to the last day ofdevelopment."
97,Ion Storms Deus Ex,2000,https://www.gamasutra.com/view/feature/131523/postmortem_ion_storms_deus_ex.php,Deus Ex,console pc,action shooter,multi single,production,prototyping," Wed worry about fleshing out allthe missions, making the game as interesting and fun and dense and exciting as it needed to be during the inevitable gameplay tuning,tweaking, and balancing phase at the end. This probably isnt so much of a What Went Wrong as it is an open question of whether that wasthe right call. I think so, and the plan clearly worked to the extent that we shipped a game that people seem to like pretty well. But its unclearto me whether using our proto-missions to fine-tune might not have resulted in an even better game."
98,Ion Storms Deus Ex,2000,https://www.gamasutra.com/view/feature/131523/postmortem_ion_storms_deus_ex.php,Deus Ex,console pc,action shooter,multi single,management-people,communication," Morale hits were frequent and problematic. It simplyisnt possible to be bombarded by negative press about the company you work for and not take it somewhat personally. Trust me when I saythat seeing your personal and private e-mails posted on the Internet is a devastating experience. Also, recruiting was more difficult than itshould have been. We were able to put together an incredibly talented team for Deus Ex, but too many talented people told us that while theywould like to work on Deus Ex, they couldnt work for Ion Storm. Eventually, a well show them mentality became prevalent in Austin. I dontknow that anyone who worked on Deus Ex thought of him- or herself as part of the same company making Daikatana and Anachronox up inDallas. That kind of us-versus-them thinking is rarely good in the long run."
99,Ion Storms Deus Ex,2000,https://www.gamasutra.com/view/feature/131523/postmortem_ion_storms_deus_ex.php,Deus Ex,console pc,action shooter,multi single,management-people,team," Our original team structure didnt work. Youd think after 17 years of making games and building teams to make games, Id have a clueabout team structures that work and those that dont. Ha! When I started pulling the Deus Ex team together I had a core of six guys fromLooking Glasss Austin office. Having tapped Chris Norden to be lead programmer, I needed to find a lead designer and a lead artist. As Istarted casting about for the right person for the design job, something really good, but ultimately really bad, happened -- two guys camealong with enough experience to expect a leadership position. Instead of doing the sensible thing and picking one of them, even if that meantthe other chose not to sign on, I got cute. I created two design teams, each with its own lead."
100,Ion Storms Deus Ex,2000,https://www.gamasutra.com/view/feature/131523/postmortem_ion_storms_deus_ex.php,Deus Ex,console pc,action shooter,multi single,management-feature,scope,"Clear goals are great . . . when theyre realistic. We started out thinking very big. That in itself isnt bad -- its necessary to advance thestate of the art -- but we were unrealistic, blinded by promises of complete creative freedom, and by assurances that we would be left alone tomake the game of our dreams. A really big budget, no external time constraints, and a marketing budget bigger than any of us had ever hadbefore made us soft."
101,Blizzards Diablo II,2000,https://www.gamasutra.com/view/feature/131533/postmortem_blizzards_diablo_ii.php,Diablo II,pc,adventure rpg,multi single,production,design,"Graphics. Shortly before Diablo II shipped, we began noticing some feedback from customers about the resolution of the graphics in the game. They were frequently labeled ""outdated"" or ""pixellated."" The shame is that the technology choices we made eclipsed the recognition of the fantastic job the artists did. We put a lot of effort into creating characters, monsters, and landscapes with a lot of unique character. The game displays an incredible amount of action happening onscreen in an easy-to-follow manner. Still, with all the negative reaction, we probably should have done it differently. (...) As much as we tried to make a frustration-free game, we seem to have failed some people with our savegame scheme. Eschewing the common save-game feature we used in the original Diablos single-player mode, where every facet of the game state can be saved to files and reloaded at will, we opted to make all modes behave more like Diablos multiplayer game. InDiablo II, we do not save the world state. Reloading the game resets the location of monsters and treasures every time. The character is placed in the town he or she last visited, not in the wilderness or a dungeon."
102,Blizzards Diablo II,2000,https://www.gamasutra.com/view/feature/131533/postmortem_blizzards_diablo_ii.php,Diablo II,pc,adventure rpg,multi single,production,tools,"Tools. We developed the original Diablo with almost no proprietary tools at all. We cut out all the background tiles by hand and used commercial software to process the character art. Spells and monsters were balanced by verbal estimates (""Hey, lets make the lightning about ten percent weaker.""). Diablo IIs vastly increased scale required much better tools, and we made some, but not enough."
103,Blizzards Diablo II,2000,https://www.gamasutra.com/view/feature/131533/postmortem_blizzards_diablo_ii.php,Diablo II,pc,adventure rpg,multi single,production,technical," Despite the original Diablos success online, we knew as we began development that to create the type of multiplayer experience that we wanted to achieve in Diablo II, we would need to fundamentally change the game network. And, as we expected, this became one of our biggest challenges during development. We had to reinvent Battle.nets structure by melding existing technology with new programming and feature sets. This had implications across the board. We had to rethink everything - programming, hardware, bandwidth, staffing, online support, and how we could financially support this model while keeping it free."
104,Blizzards Diablo II,2000,https://www.gamasutra.com/view/feature/131533/postmortem_blizzards_diablo_ii.php,Diablo II,pc,adventure rpg,multi single,production,testing,"Although we had more than 100,000 people testing the Diablo II Realms, having more than one million customers in just three weeks proved to be very different from beta testing. The beta test was very successful in uncovering many stability issues that were addressed before the launch. After the game shipped, we faced bugs that only appeared at much higher usage rates. The issues that we faced at launch were ones that could not have been simulated in a beta test of 100,000 people. It took a much larger influx of players to trigger certain situations."
105,Treyarchs Draconus,2000,https://www.gamasutra.com/view/feature/131547/postmortem_treyarchs_draconus.php,Draconus,console,action,single,production,tools,"C++ served us extremely well on Die By the Sword, and we continued to use it extensively, including some of the more esoteric features such as STL. But with Draconus, C++ was quite the handicap. The first compilers available for the Dreamcast were the Hitachi C compiler and the WinCE Visual C++ compiler, which we assumed wed be using. Unfortunately, the first version of WinCE for the Dreamcast was very poor."
106,Treyarchs Draconus,2000,https://www.gamasutra.com/view/feature/131547/postmortem_treyarchs_draconus.php,Draconus,console,action,single,production,technical,"It took about five minutes to load a single level on a developers station. Therefore, it took about five minutes to test the smallest change. We knew that would be unacceptable on the shipped version, but our solution for optimizing the load of the shipped version was to save a snapshot of the Dreamcasts heap, global variables, and texture memory, and have that be what the final version of the game loaded. This technology gave us very fast loads. One reviewer even commented on how fast our loads were. But the downside was crippling, implementing the technology took over a month of programmer time. Our developer station loads never got any faster, so working on the project was tedious at best. (...) Progressive, adaptive level of detail was the hot topic at the GDC a couple of years ago. It sounded wonderful to me. I read all of Hugues Hoppes papers on his website and developed a progressive mesh rendering system for use in Draconus. I was quite pleased with the results; watching the system remove the least useful vertices from a model was cool. Unfortunately, it wasnt much faster. Due to various kinds of overhead and the Dreamcast processors small cache (although Im making excuses here; what I really needed, as usual, was more time to optimize the thing), rendering the lowest-detail model still took about half the time as it took to render the highest-detail model. We would have been better off if we stuck to the old school of having the artists turn out half a dozen models at different levels of detail."
107,Treyarchs Draconus,2000,https://www.gamasutra.com/view/feature/131547/postmortem_treyarchs_draconus.php,Draconus,console,action,single,management-people,communication,"Once youre under funded, everything else goes to hell. Our planning probably would have been better if we had more time. We had a fairly nice design document for Die By the Sword 2, but that was thrown out when we went to Draconus. Mark had a vision for Draconus, it was going to be something like what Gauntlet Legends turned out to be: a real bad-ass hero beset by dozens of foes. This vision was promptly ignored by an overly optimistic programmer (myself) who told the artists to go nuts and pump so many polys into the foes that we ended up being able only to have three of them on the screen at any one time."
108,Treyarchs Draconus,2000,https://www.gamasutra.com/view/feature/131547/postmortem_treyarchs_draconus.php,Draconus,console,action,single,management-feature,cutting-features,"Our answer to being under funded and under scheduled was to cut network play. We needed to make much bigger cuts. If we had thrown out our new engine and gone back to the Die By the Sword engine, cut the number of levels in half, stuck with one main character instead of two, and tried to be conservative about our technical achievements, rather than pushing the Dreamcast to its published limits, we would have had a fighting chance."
109,Treyarchs Draconus,2000,https://www.gamasutra.com/view/feature/131547/postmortem_treyarchs_draconus.php,Draconus,console,action,single,management-feature,planning,"Another example of poor planning was that magic was an afterthought. We always knew we would have spells in the game, special abilities with nice special effects that your character would acquire as the game progressed, but they were left until late in development because there were always more pressing issues. Of course, once we did implement spells, they unbalanced the play of the game horrendously, and much more unplanned work was needed to make magic function reasonably. Aspects that are fundamental to playability need to be prototyped early, even if the pretty special effects arent ready yet, so that the play balance can be measured and tested."
110,Treyarchs Draconus,2000,https://www.gamasutra.com/view/feature/131547/postmortem_treyarchs_draconus.php,Draconus,console,action,single,business,marketing,"Fortunately, this is extremely rare. What seems to happen when two different companies are going to sell your game in two different places is that neither one of them wants to stand behind your product. They both point at the other guy. Need more development stations? Thats the other publishers responsibility. Need more money? Thats the other publishers responsibility. Need anything? You get the picture. "
111,Sierra Studios Gabriel Knight 3,2000,http://www.gamasutra.com/view/feature/131536/postmortem_sierra_studios_.php,Gabriel Knight 3,pc,adventure,single,production,tools,"When we rebuilt the game engine, we tried to retain as much of the original code as we could to get the game up and running again as soon as possible. With the exception of the G-Engine, this was a big mistake. Nearly every one of the systems that we kept caused us problems -- they were badly designed, buggy, inflexible, and should have been redesigned. Some of these systems never worked correctly throughout the lifetime of the project and had to be hacked around by the content developers to get the game to ship. Specifically, we had serious problems with the ""fidget"" system (used by character models when idle or when involved in dialogue), the character models walker, the vertex animation system, and the conversation and dialogue systems. All of these failed regularly and were regularly ""fixed"", but each bug fix introduced new bugs, usually in the form of hidden time bombs. The engineers responsible for these systems became very defensive about the problems with them, and usually ended up blaming artists and scripters or even other engineers for the cause. Management, thinking that it would save time, often encouraged content developers to hack and work around the problems rather than fix them properly. We should have ripped these parts of the game out and rebuilt them, rather than continually attempting to work around a flawed legacy design. It would have saved a lot of time and hard feelings."
112,Sierra Studios Gabriel Knight 3,2000,http://www.gamasutra.com/view/feature/131536/postmortem_sierra_studios_.php,Gabriel Knight 3,pc,adventure,single,production,technical,"Previous Sierra adventure games, including GK1 and GK2 as well as the Space Quest and Leisure Suit Larry series were built using the ""SCI"" game engine. SCI was developed and maintained by Sierra Oakhurst and, for a variety of reasons, Sierra Northwest (the division I worked for) decided to stop using it. This single decision probably affected the project more than anything else did -- it meant that GK3 was to be the first adventure game Sierra had built completely from scratch in a very long time. (...) When I joined the project in early 1998, GK3 had already been in development for more than a year and a half, and it was scheduled to ship at the end of that summer. I realized that this would never happen because at that point the game was a hacked-up version of a sample application that Jim Napier wrote some time earlier to demonstrate the G-Engine. Sample code being used in a production environment should send shivers up the spine of any experienced engineer. Malignant growths of code were added haphazardly whenever a new feature was required, making the game extremely unstable and difficult to maintain. This problem fed on itself and grew worse over time. One example of this problem was the games horrendous startup time. The file and resource system, while sufficient for a sample applications minimal resources, completely fell over when faced with the tens of thousands of files and hundreds of directories in GK3. The game took over a minute just to start up and display the title screen. (...) Most of the games non-art content, such as a story sequence involving simple dialogue exchanges between two characters, was initially hard-coded into the game in C++. This was a nightmare for a couple of reasons. First, engineers were creating content instead of working on the engine, and engineers are generally not the best people for creating good content (and they tend to be very slow at it as well). Second, the tiniest changes to the game, such as choosing a different line of dialogue or altering an animation sequence, required recompilation. This made the content development process unbelievably inefficient. Artists would potentially have to wait weeks to see their work integrated into the game. This resulted in engineers resenting artists ""chucking art over the fence"" and probably inspired similar resentment on the art side. (...) We also faced a lot of problems that were out of our control. Most notable were the technical difficulties with the DirectX drivers provided by hardware vendors for their 3D graphics cards and sound cards, but this probably isnt news to any 3D game developers. These problems were generally features that were implemented improperly or inconsistently, or just outright bugs that caused system crashes or hangs. We also wasted a few weeks trying to add copy protection. During the final push to ship, we repeatedly attempted to make Macrovisions SafeDisc product work with GK3. SafeDisc has a set of special (and we felt completely unnecessary) antihacking measures that got in the way of the games execution. It heavily affected performance, dropping the frame rate to a third of its original speed and adding strange intermittent freezes of several seconds while the camera was moving. After getting nowhere with Macrovisions engineering department, we decided to ditch SafeDisc and roll our own (which took less than a day to do). This entire process wasted several weeks of our time and frustrated us all the more because, apart from this one remaining task, we were ready to ship the game. Lesson learned: If you are required to use copy protection, dont put it off until the last month, especially if its SafeDisc. We werent the first game to have severe problems working with SafeDisc and probably wont be the last, so if youre using this product be sure to do your homework and try it out well in advance of your ship date. (...) One of the most expensive mistakes a team can make is ramping up art before the engine is ready. This often happens at large game companies because developers need a place to go after theyve shipped their most recent game. Unfortunately, this was a serious problem with GK3 -- artists were brought onto the game while the original engine was in development, and long before a stable engine was available. They created content for an animation engine that was untested and in doing so built up enough inertia that we ended up having to keep the design. Later we discovered that the engines design was seriously flawed. GK3s animation system is vertex-based, meaning that a models individual vertices are animated. Even using some creative compression methods, this is very expensive in terms of memory usage. Contrast this method with a typical skinned skeletal animation system, which only requires that the bones be animated. The worst thing about this system was not the memory usage, however. It was the impact on content creation, and the repercussions of this requirement were not fully realized until the art team was ramped up and churning out models and animations. GK3 animations are completely coupled to the meshes of the models that they affect. Once an animation is exported from 3D Studio Max, the models it involves cannot be changed in any way, otherwise existing animations created from the old versions of those models would break. Vertices cant be added or removed, and texture maps can only be tweaked, not remapped. Changing a model required re-exporting every single animation that affected the model, which was very time consuming, tedious, and repetitive for animators, and was often impossible to boot. The source assets (the original Max files) had a way of getting lost and usually ended up stored on backup disks as artists left the project. The end result was that once a model was created, it could never be changed. Consequently, GK3 shipped with a lot of bad art that the team was dissatisfied with but had to use. (...) To the best of our knowledge, every single critical problem with the game is caused by either bad hardware drivers (sound or 3D card) which can be fixed by upgrading them, or CD-ROM problems due to our oversized CD copy protection. Also, the first disk that shipped in some retail boxes was difficult to read on some CD-ROMs, apparently due to duplication problems. This can also be worked around, as the same file exists on the second disk and can be copied to the hard drive."
113,Sierra Studios Gabriel Knight 3,2000,http://www.gamasutra.com/view/feature/131536/postmortem_sierra_studios_.php,Gabriel Knight 3,pc,adventure,single,management-people,crunch-time,"Crunch mode is a reality on most projects, but you should not gear up for one unless the light at the end of the tunnel is really in sight. The GK3 team was pushed into crunch mode three separate times, each time thinking that we were almost ready to ship. Most of the last year of the project we spent in this mode, which Just about all of Gabriels inventory fits in his pants. meant that even small breaks for vacations, attending conferences, and often even taking off nights and weekends were looked down upon. It was time that the team ""could not afford to lose"". The irony is that this overtime didnt help anyway -- the project didnt move any faster or go out any sooner. The lack of respect for our personal lives and attention to our well-being caused our morale to sink."
114,Sierra Studios Gabriel Knight 3,2000,http://www.gamasutra.com/view/feature/131536/postmortem_sierra_studios_.php,Gabriel Knight 3,pc,adventure,single,management-people,team,"When someone is placed in a role in which they dont belong, I call this being ""badly cast."" Many of the problems with GK3 resulted from developers being badly cast in their roles, usually because the project requirements were so severely underestimated. To give you an idea of the casting problems we had, consider this: we went through a total of two producers, three art directors (we spent the last year of the project without one), and three project leads (the producer was forced to take over as project lead towards the end). This was an ambitious, massive project that required experienced engineers and the original team was simply not up to this task. GK3 was initially built from members of the Shivers 2 team (one of the last games built with SCI) and they had practically no 3D experience. Engineers under the venerable SCI engine were basically scripters and putting them in charge of building a game engine from scratch was like feeding them into a furnace. To make things worse, the developers that were in over their heads didnt ask for help, which gave management a false sense of progress. (...) To managers everywhere: morale is one of those icky personal political things that many of you avoid dealing with, but you need to understand that your development team is not a factory churning out content and code. To paraphrase Peter Sellers in Being There, ""The team is a garden of creativity that requires regular watering and sunshine in order to build strong roots."" Loyalty is not something that comes easily. The job market is very competitive -- your best developers will simply leave and work for somebody else if they arent treated well and maintained properly. On GK3, there was a serious lack of love and appreciation throughout the project. Recognition of work (other than relief upon its completion) was very rare, lacked sincerity, and was always too little, too late. Internally, a lot of the team believed that the game was of poor quality. And of course, the many web sites and magazines that proclaimed ""adventure games are dead"" only made things worse. Tim Schafers Grim Fandango, although a fabulous game and critically acclaimed, was supposedly (we heard) performing poorly in the marketplace. Rumors circulated among our team that GK3 was going to lose money, due largely to our high burn rate. The low morale resulted in a lot of send-off lunches for developers seeking greener pastures. GK3 had a ridiculous amount of turnover that never would have been necessary had these people been properly cast or well treated in the first place. More than 45 developers worked on GK3 (the average standing team size was 15 to 20), and now, just a few months after it shipped, only seven remain at Sierra. Strangely, the opposite also happened -- several of our developers were included in Sierras mid-1999 housecleaning layoffs but these individuals were allowed to stay on for a couple of months, postponing their last day until we shipped GK3. I believe this was done in good faith out of respect for the developers hard work up to that point but it ended up being a prolonged drain on morale. Having a small group of people who are (understandably) upset with your company for laying them off and actively looking for a job while still trying to be productive and contribute to a project is a tough situation that should be avoided. After a certain amount of time on a project like this, morale can sink so low that the team develops an incredible amount of passive resistance to any kind of change. Developers can get so tired of the project and build up such hatred for it that they avoid doing anything that could possibly make it ship later. This was a terrible problem during the last half of the GK3 development cycle and as a result there are many aspects of the game that we arent proud of. These were problems that should have been fixed but nobody wanted to take the time to correct them because we were so focused on trying to get the game out. I dont think anyone on the team is directly at fault for this and I dont know what we could have done to correct this problem. (...) Because of the high turnover, GK3 always had a high percentage of developers new to the team. Faced with mandatory overtime, these new people understandably felt it was unfair to be ""punished"" by paying for problems caused by the original team or things that they felt management had brought upon itself. "
115,Sierra Studios Gabriel Knight 3,2000,http://www.gamasutra.com/view/feature/131536/postmortem_sierra_studios_.php,Gabriel Knight 3,pc,adventure,single,management-feature,multiple-projects,"GK3 became a black hole that sucked in many developers from other projects, often at the expense of those projects. Artists were shifted off the team to cut the burn rate, and then pulled back on later because there was so much work left to do. "
116,Sierra Studios Gabriel Knight 3,2000,http://www.gamasutra.com/view/feature/131536/postmortem_sierra_studios_.php,Gabriel Knight 3,pc,adventure,single,management-feature,planning,"Despite these initial advantages, the project faced problems almost from the start. The team had to build a new game engine and most of the related content development tools from scratch, but team members severely underestimated the time, cost, effort, and experience required to construct these tools and establish effective development processes around them. The initial development team was not up to this task. (...) Our engineers never had an accurate development schedule -- the schedules we had were so obviously wrong that everybody on the team knew there was no way to meet them. Our leads often lied to management about progress, tasks, and estimates, and I believe this was because they were in over their heads and werent responding well to the stress. Consequently, upper management thought the project was going to be stable and ready to ship long before it actually was, and we faced prolonged crunch times to deliver promised functionality. More frequent and honest communication within the team would have avoided a lot of this. GK3 had few real milestones, which undermined our ability to track progress. There were some milestones very early on in development, but the focus on shoveling visible features into the game turned them into worthless smoke-and-mirrors demos. The concept of milestones eventually was discarded and was replaced with two simple and unofficial goals -- beta and release to manufacturing. In the push to ship the game, we simply forgot about milestones (because ""were almost there!""), put the blinders on, and worked like mad."
117,Ritual Entertainments Heavy Metal: F.A.K.K. 2,2000,https://www.gamasutra.com/view/feature/131520/postmortem_ritual_entertainments_.php,Heavy Metal: F.A.K.K. 2,pc,action,single,production,design,"I do agree that the game is on the short side, but we didnt want to put in dozens of levels that repeated the same gameplay over and over, as so many other games do. Even though I am defending our decision in this article, I do acknowledge it as one of the problems that we had with the design. A short game with no multiplayer has a very limited lifetime in the gaming industry."
118,Ritual Entertainments Heavy Metal: F.A.K.K. 2,2000,https://www.gamasutra.com/view/feature/131520/postmortem_ritual_entertainments_.php,Heavy Metal: F.A.K.K. 2,pc,action,single,production,tools,"Level designers arent just creating levels anymore. They have to design puzzles, scripted events, cinematics, and on and on. In F.A.K.K. 2 this is all done through the scripting language, so each level designer had to be something of a programmer as well. On the artists side, they also got a taste of programming. The effects system is driven entirely by text files, and the artists needed to learn the systems intricacies in order to get the effects they wanted. This complexity added more to the development time than we had anticipated. Even though everyone on the team was really familiar with the engine, getting used to the new tools and modifications took a lot of extra work."
119,Ritual Entertainments Heavy Metal: F.A.K.K. 2,2000,https://www.gamasutra.com/view/feature/131520/postmortem_ritual_entertainments_.php,Heavy Metal: F.A.K.K. 2,pc,action,single,management-people,crunch-time,"Not having a single person manage tasks, and letting just about every feature request get added to the list, was a major reason why we had to go into crunch mode in order to finish everything by our July deadline. This resulted in a crunch mode that lasted nearly five months, and one month of ""super crunch"", consisting of seven-day weeks and 12- to 16-hour days. I dont mind crunch mode every now and then, but for an extended period of time it really wears you out. The team morale during this crunch was very low."
120,Ritual Entertainments Heavy Metal: F.A.K.K. 2,2000,https://www.gamasutra.com/view/feature/131520/postmortem_ritual_entertainments_.php,Heavy Metal: F.A.K.K. 2,pc,action,single,management-people,team," At the beginning of this article, I mentioned that the team started off with 18 members, and we finished the game with 11. Of those 11 people, only one person was on the original F.A.K.K. 2 team from the beginning. It was a weird project, because most of the team didnt have a handle on the design of the game. The key designers of gameplay had moved on, and werent available to talk about the ideas that they had come up with. We ended up scrapping a lot of the original design document and starting over. This set us back pretty far in the gameplay area. Another area that suffered was models and animations. We lost several artists who worked on different animation packages, and when they left we had to redo the models they were responsible for."
121,Ritual Entertainments Heavy Metal: F.A.K.K. 2,2000,https://www.gamasutra.com/view/feature/131520/postmortem_ritual_entertainments_.php,Heavy Metal: F.A.K.K. 2,pc,action,single,management-feature,feature-creep,"We worked on never-ending task lists for months and months. Just when you thought you were close to being done with what you were assigned, another 30 tasks would appear on the list after a team meeting where we would flesh out the incomplete areas of the design."
122,Ritual Entertainments Heavy Metal: F.A.K.K. 2,2000,https://www.gamasutra.com/view/feature/131520/postmortem_ritual_entertainments_.php,Heavy Metal: F.A.K.K. 2,pc,action,single,management-feature,cutting-features,"We were going to try to put multiplayer into the final release if we had the time, but our July deadline came so quickly that we just didnt have the time to finish it. "
123,Ritual Entertainments Heavy Metal: F.A.K.K. 2,2000,https://www.gamasutra.com/view/feature/131520/postmortem_ritual_entertainments_.php,Heavy Metal: F.A.K.K. 2,pc,action,single,management-feature,planning,"During the development of F.A.K.K. 2, we had a project manager at the beginning of the project and a different project manager near the end. There were 12 months of development time in between, during which we had little to no management on the project. There were members of the team that took on this role, but only in a limited capacity, as they had tons of other work to do as well. (...) Having a good project manager allows you to have a majority of the design details fleshed out from the beginning, schedule the correct amount of time for tasks, and have the appropriate number of people on the team to finish a game. This seems to be a major problem in the gaming industry, as nearly everyone I talk to has just about the same story about project management and death-march crunch modes."
124,Ritual Entertainments Heavy Metal: F.A.K.K. 2,2000,https://www.gamasutra.com/view/feature/131520/postmortem_ritual_entertainments_.php,Heavy Metal: F.A.K.K. 2,pc,action,single,business,marketing,"Our July deadline was fast approaching, and we had yet to release a playable demo to the Internet. This hurt us in two ways. First, we werent able to build up any pre-game buzz by having a killer demo for our game, and when the game was released people seemed surprised to hear about it. Second, a lot of people will not buy a game unless they play a demo beforehand to see if they like it."
125,Redstorms Rainbow Six,2000,http://www.gamasutra.com/view/feature/131829/postmortem_redstorms_rainbow_six.php,Rainbow Six,pc,action shooter,online single,production,documentation,"We never had a proper design document, which meant that we generated a lot of code and art that we later had to scrap. What’s worse, because we didn’t have a detailed outline of what we were trying to build, we had no way to measure our progress (or lack thereof) accurately. We only realized that we were in trouble when it became glaringly obvious. If we’d been about the design rigorous up front, we would have known that we were slipping much sooner."
126,Redstorms Rainbow Six,2000,http://www.gamasutra.com/view/feature/131829/postmortem_redstorms_rainbow_six.php,Rainbow Six,pc,action shooter,online single,production,tools,"Our external solutions for rendering and networking both fell through and had to be replaced with internally developed code late in the development cycle. In both cases, we were relying on software that was still under development. The core technology was sound, but we were plagued with inadequate documentation, changing programming interfaces, misunderstood performance requirements, and heavy integration costs. Because both packages were in flux, we failed to do a thorough evaluation of their limitations and capabilities."
127,Redstorms Rainbow Six,2000,http://www.gamasutra.com/view/feature/131829/postmortem_redstorms_rainbow_six.php,Rainbow Six,pc,action shooter,online single,production,testing,"We got lucky. As a result of our early missteps, the only way we could get the game done on time was to cut deeply into our testing schedule. We were still finding new crash bugs a week before gold master; if any of these had required major reengineering to fix, we would have been in deep trouble. That the game shipped as clean as it did is a testament to the incredible effort put in at the end by the engineering team. As it was, we still had to release several patches to clean up stuff that slipped through the cracks."
128,Redstorms Rainbow Six,2000,http://www.gamasutra.com/view/feature/131829/postmortem_redstorms_rainbow_six.php,Rainbow Six,pc,action shooter,online single,management-people,team,"This point is closely related to the previous point. Because we didn’t have a firm design, it was impossible to do accurate time estimates. Red Storm was starved for manpower across the board, and because we didn’t have a proper schedule, it was hard to come to grips with just how deep a hole we were digging for ourselves. There were always plenty of other things to do in getting a new company off the ground besides recruiting, and we were trying to run as lean as possible to make the most of our limited start-up capital. Given the circumstances, it was easy to rationalize understaffing the project and delaying new hires. (...) Losing even a junior member of a development team close to gold master can be devastating. When our lead engineer took ill in February 1998, we were faced with a serious crisis. For a few frantic weeks, we tried to recruit a lead from outside the company, but eventually it became obvious that there was no way we could bring someone in and get them up to speed in time for us to make our ship date in July 1998. Promoting from inside the team wasn’t a possibility either — everyone’s schedule was so tightly packed that they were already pulling overtime just to get their coding tasks done; no one had the bandwidth to handle lead responsibilities too."
129,Angel Studios Resident Evil 2 (N64 Version),2000,https://www.gamasutra.com/view/feature/131556/postmortem_angel_studios_.php,Resident Evil 2 (N64),console,adventure strategy,single,production,testing," Never underestimate your testing requirements and, more importantly, never let your publisher underestimate your testing requirements.Almost obvious to anyone who has developed a game should be the testing phase, especially for projects with shorter deadlines. Make surethat the level of testing support you expect is written into the contract with your publisher.As an aside, programmers and artists are not testers. Such a practice reduces their effectiveness when they are called upon and at the timewhen the utmost care must be taken to ensure their changes do not have ripple effects elsewhere in the code. Having them on call 24 hoursa day is fine, but have them be on call, not sleeping on the floor."
130,Angel Studios Resident Evil 2 (N64 Version),2000,https://www.gamasutra.com/view/feature/131556/postmortem_angel_studios_.php,Resident Evil 2 (N64),console,adventure strategy,single,management-people,communication," Its Murphys law: for a project that had run so smoothly, our biggest problem came in the final hour, after the game was complete and wewere awaiting approval from Nintendo. We were all ready to kick back and congratulate each other on a job well done, but our title still neededapproval from Nintendo, both in Japan and in the U.S. The ensuing delays caused us to miss our ideal release date, which in the U.S. wasHalloween.While it would be easy simply to complain about how terrible big publishers are, there are things you can do to mitigate the bureaucracy. Thething to keep in mind is that at some point there are decision makers involved with approving your game. Anyone who has shipped a game,especially for Nintendo, knows that even the most minor misbehavior can hold up the process. So what to do now that your game is beingsent into the hands of who knows how many random individuals? Simple: realize that there is a process."
131,Angel Studios Resident Evil 2 (N64 Version),2000,https://www.gamasutra.com/view/feature/131556/postmortem_angel_studios_.php,Resident Evil 2 (N64),console,adventure strategy,single,management-people,team," Everyone has a certain set of things that they hold dear. For some of us our work integrity is very important to us, for others it is not. As Imentioned before (and will mention again), when you show that you understand the word milestone you set yourself apart in the gameindustry. This is truer in a game where your current progress can be held up against a completed yardstick. Not everyone, and certainly noteveryone on your team, will necessarily share this understanding.In a perfect world, everyone works hard, everything works together, and no one needs supervision. However, it is the leads responsibility toidentify those tasks and people that do and to get a commitment from them stipulating what they will do in writing. Remind them of thesecommitments as often as necessary. It is equally important that the individual and the team as a whole understands that done meanscomplete, meets quality standards, requires no future adjustments or tuning, and is ready to ship. When you do this you set up both theteam and that individual for success."
132,Angel Studios Resident Evil 2 (N64 Version),2000,https://www.gamasutra.com/view/feature/131556/postmortem_angel_studios_.php,Resident Evil 2 (N64),console,adventure strategy,single,management-feature,planning,"While we achieved a tour-de-force of compression overall, we didnt anticipate all the assets that would need to be compressed. Audio andvideo received most of the attention and were pushed and squeezed until they fit. Our focus on these assets, however, caused us to neglectother areas such as the animation data. We did manage to cage these beasts, too, but on our final burn we had to shave another megabyteoff the video. This last megabyte took us under the critical point where the video suddenly went from very pretty to just a bit too obviouslycompressed. Not all the games movies were affected, but it was disappointing that we had to sacrifice some quality because we assumed theother assets would fit, rather than adhere to the apothegm assume nothing. Next time, we wont leave anything to afterthought. Wellexamine everything, to the point where we can make informed estimates (in this case, an assets uncompressed size and its expectedcompression ratio derived from some sample tests) for everything. (...)  At the beginning of the project, this was the most underestimated and underbudgeted task. We quickly realized the scope: at least 200 piecesof music, many short, but there nonetheless with each MIDI piece having its own unique samples -- a nightmare for conversion to cartridge.Angel Studios simply did not have the know-how to execute this area of the project.The tool we had developed internally required a ten-minute compilation process between the alteration of a sequence or sample and hearingthat sequence. Obviously, when you are going to be attempting to refine more than a thousand individual samples not only for correctness butalso to make them as small as possible, this system simply would not work. Fortunately, we had a connection on our team in the Germandevelopment community that used to play videogames in his basement with Chris Huelsbeck from Factor 5."
133,Raven Softwares Soldier of Fortune,2000,https://www.gamasutra.com/view/feature/131541/postmortem_raven_softwares_.php,Soldier of Fortune,console pc,roguelike shooter,multi single,production,prototyping,"Creation took longer than expected to visualize gameplay. A sure way to sell your product is to have a working prototype atan early stage in its development. Since we had decided to give the Quake 2 engine an entire overhaul, we realized that we would really haveto come together and work as a team to make sure things were completed on time. One of the major enhancements for SoF was the Ghoul modeling system, which replaced the entire Quake 2 modeling system, and turnedout to be quite the undertaking. Throughout the entire life of the project, tweaks and changes were made to Ghoul to make it more flexible andpowerful. Unfortunately, this also meant that for a substantial part of the early development, we had no game to look at - only individualcomponents."
134,Raven Softwares Soldier of Fortune,2000,https://www.gamasutra.com/view/feature/131541/postmortem_raven_softwares_.php,Soldier of Fortune,console pc,roguelike shooter,multi single,management-people,communication,"Confusion over project scheduling aside, additional technologies were developed during the course of the project that were never truly planned out appropriately, such as the terrain engine, the in-game effects editor, and the scripting system that we used. All of these technologies served to improve the game substantially, yet they could have worked better if they had been properly discussed between the team members."
135,Raven Softwares Soldier of Fortune,2000,https://www.gamasutra.com/view/feature/131541/postmortem_raven_softwares_.php,Soldier of Fortune,console pc,roguelike shooter,multi single,management-feature,feature-creep,"The single most damaging problem duringSoFs early development was that the original game lacked a truly focuseddesign. We knew what the fundamentals of the game would be, but we did not have the specifics that we needed to create a solid, cohesiveproduct. The games overall story changed five times before it was finalized - at one point we had even changed the basic game concept to ateam-based tactical shooter, similar to Rainbow Six."
136,Raven Softwares Soldier of Fortune,2000,https://www.gamasutra.com/view/feature/131541/postmortem_raven_softwares_.php,Soldier of Fortune,console pc,roguelike shooter,multi single,management-feature,planning,"Something that seemed like a great idea at the time but turned out to hurt us in the end was the decision tomake specific OEM releasesbefore the game was truly finished. The main reason for this was that we looked at the revenue that would help the bottom line instead of consideringhow much it would set back the game.Because there were both regular and low-violence versions of the game, we needed to make several different builds for the different violencelevels and test each build accordingly. In the end, we had roughly 75 QA submissions. While each OEM and demo iteration helped bringmore of the game together, it also diverted our attention from the final product. As we were tweaking and fixing the OEM versions, fullproduction would come to a standstill as we focused on getting the smaller versions out the door. (...) Originally, SoF was scheduled to ship in July 1999. Activision wanted to avoid releasing SoF in the blast zone ofcompeting FPS titles that were shipping that year, so they extended the deadlines on the game. As our competitors titles were pushed back,so was SoF. Although within these deadlines we had schedules set up and planned out, this caused a never-ending uncertainty of how muchtime we had left in the project and how much technology we could add or change within that time."
137,Treyarchs Tony Hawks Pro Skater (Dreamcast Version),2000,https://www.gamasutra.com/view/feature/131563/postmortem_treyarchs_tony_hawks_.php,Tony Hawk Pro Skater (Dreamcast),console,sports,multi single,production,tools," Neversofts El Pluggo plug-in exported a Playstation file and this was the model format that the game read in, Neversofts proprietary binarymesh format. We were given source to El Pluggo so we could modify it as we saw fit but our mistake was that we only tried exporting levelson an as-needed basis. (We already had all of Neversofts Playstation files and we were originally we were running the game with these preexported levels.)We discovered this problem the hard way when we got to one of the last levels and it didnt export correctly. It turned out we somehow hadended up with an obsolete version of the El Pluggo source. It took a couple of days to rectify this problem, because the turnaround for gettingdeliverables from Neversoft was so slow, and because we had to integrate our changes into their new plug-in. If we had tried exporting everysingle level at the start of the project we would have gotten the correct source before we started modifying it. (...)  Localizations turned out to be a slap in the face. Looking through the code at the beginning of the project we saw that they had localizationsfor various European languages, so we thought we were covered. Later on in the project we realized that for some reason when we activatedthe localizations a lot of the English text wasnt being translated. It turned out that localization code we were looking at was for Apocalypseand that the Playstation version of Tony Hawk had never been localized. It could have taken weeks to get all their text translated. The onlything we could do was to skip the localizations"
138,Treyarchs Tony Hawks Pro Skater (Dreamcast Version),2000,https://www.gamasutra.com/view/feature/131563/postmortem_treyarchs_tony_hawks_.php,Tony Hawk Pro Skater (Dreamcast),console,sports,multi single,management-people,communication," Because Activision sold the rights to Crave, to obtain assets or anything else we had to ask Crave, who in turn would ask Activision, who inturn would ask Neversoft. When we would suddenly discover we were missing something, it took forever to do anything about it. Forexample, when we needed the raw sound files it was days before we actually got a CD with the files on it, and the CD wasnt exhaustive. Wehad similar problems with tools -- we never did fully understand Neversofts Max plug-in and were limited in what we could do to improve thelevels because of it -- as well as with some of the source code."
139,Treyarchs Tony Hawks Pro Skater (Dreamcast Version),2000,https://www.gamasutra.com/view/feature/131563/postmortem_treyarchs_tony_hawks_.php,Tony Hawk Pro Skater (Dreamcast),console,sports,multi single,management-people,team," When QA begins you can measure how quickly bugs are being reported and howquickly they are being fixed. This data can be used to giveyou a rough estimate of how long it will take to finish the product. For example, you might find that QA is averaging 20 bug reports a day andyour programmers are fixing 10. If there are 400 bugs, it will take roughly 20 days to find them all and 40 days to fix them. In our case, wediscovered that we were fixing bugs faster than QA was reporting them; we had a backlog of internally reported bugs to keep us busy, buteventually we were going to catch up to QA. Greg screamed at Crave for more QA, but there were plenty of days when the programming staffwas idle while we waited for bugs to trickle in. QA became the bottleneck on our schedule; if they had found the bugs sooner we could haveshipped sooner. QA was lacking in both quantity and quality because there were not enough guys on the project and they were not coveringthe game adequately."
140,Treyarchs Tony Hawks Pro Skater (Dreamcast Version),2000,https://www.gamasutra.com/view/feature/131563/postmortem_treyarchs_tony_hawks_.php,Tony Hawk Pro Skater (Dreamcast),console,sports,multi single,management-feature,feature-creep," We tripled the number of polygons in the skater models but this ended up making the skinning at the joints look more noticeably wrong, anddidnt improve the look of the characters much. Sometimes we couldnt even tell whether we were playing with Neversofts original lowdefinition skaters or our new high-definition ones. (Although looking closely at the skateboard made it a dead giveaway; ours had nicelymodeled trucks and theirs used flatcards.) With new power comes new responsibilities, such as fully taking advantage of all those polygons byimplementing extra joints in the characters (at the shoulders and necks for example), weighted vertices, and cloth and hair systems. Our otherDreamcast games have these features but we were locked into the animations from the Playstation version of Tony Hawk so we couldnt addshoulders nor could we move pivots for more natural bends. And the skaters in Tony Hawk go into extreme poses while performing stunts.For instance, when they crouch really low on their skateboards their knees get pointy, and when they put their arms over their heads theirshoulders dip and they look like balloon animals. We did the best we could by hacking in weighted vertices on the knees but the hack madethe shoulders look even worse so we left them the way they were."
141,Postmortem: Epic Games Unreal Tournament,2000,https://www.gamasutra.com/view/feature/131569/postmortem_epic_games_unreal_.php?page=4,Unreal Tournament,pc,shooter,online single,production,documentation,"While I am a big supporter of open, cabal-style design, I have to stop and wonder how Unreal Tournament would have turned out had we a strong initial design. Its quite possible that the games weaker elements would have been much stronger if we had put together some concept art and focus material. In reviews, we have been criticized for not having enough variation in characters. If Unreal Tournament had had a library of concept art to draw from, we might have had more interesting alien warriors. The story is more or less nonexistent in Unreal Tournament, but at times we considered having in-game cutscenes as rewards for a players progress. The idea was dumped, but a design document might have made it easier to visualize those scenes."
142,Postmortem: Epic Games Unreal Tournament,2000,https://www.gamasutra.com/view/feature/131569/postmortem_epic_games_unreal_.php?page=4,Unreal Tournament,pc,shooter,online single,production,technical,"The Unreal Tournament engine uses UnrealEd as its level design and content management tool. For several years, UnrealEd has used a windowing interface written in Visual Basic. The VB code is fragile and very old. Add to this the fact that nobody at Epic except Tim Sweeney knows or cares about VB, and you have a level design team that is stuck with a tool thats not easily updated. Several interface bugs have plagued UnrealEd for some time and nobody on the team had the time or inclination to fix them. If we had a more easily extensible tool, the team would have been able to add extra features to the editor for level designers to use. As it stood, the editor was considered off limits for new features"
143,Postmortem: Epic Games Unreal Tournament,2000,https://www.gamasutra.com/view/feature/131569/postmortem_epic_games_unreal_.php?page=4,Unreal Tournament,pc,shooter,online single,management-people,communication,"Many aspects of the games timing worked against us. While the Quake 3 vs. UT hype increased our exposure, it also set a very hard deadline for completion. It was critical that we complete the game before Quake 3 was released. The media advantage belonged to id and we believed that if Unreal Tournament launched after Quake 3, we would be forgotten in the storm. At the same time, however, we were caught up in grueling contract renegotiations with GT Interactive. We did not want to deliver the completed game until we knew the contract would work in our favor. Many times during the development of the game we were promised that a resolution to the contract issue was close at hand. The team would race to reach a point where the game could be shipped, only to have negotiations drag on."
144,Postmortem: Epic Games Unreal Tournament,2000,https://www.gamasutra.com/view/feature/131569/postmortem_epic_games_unreal_.php?page=4,Unreal Tournament,pc,shooter,online single,management-people,team,"During Unreal, Epic team members flew to Canada to work at Digital Extremes offices. With Unreal Tournament, it became Digital Extremess turn to do the traveling. Unfortunately, flying and driving back and forth every couple of weeks is a very draining experience. Many of the Digital Extremes team members spent several weeks away from their wives and girlfriends. Near the end of the project, they grew increasingly frustrated with the situation. To compound this problem further, Digital Extremes and Epic were attempting an expensive merger. As Unreal Tournament came to a close, it became clear that the merger would not happen. It was prohibitively expensive for a small company to move across the border. Many Digital Extremes team members already had apartments and plans for living in Raleigh, and the news of the terminated merger process was devastating. (...) On the content side, Unreal Tournament was held back by the number of available artists. Epics artist, Shane Caudle, is a supreme Jack-ofall-trades, creating skins, models, and levels of the highest quality. He spent most of his time working on new player models and skins for those models. Digital Extremes brought a few texture artists to the table, but not enough to create the huge libraries of new textures needed for the game. In order to supplement the skin and texture production"
145,Vampire The Masquerade Redemption,2000,https://www.gamasutra.com/view/feature/131555/nihilistic_softwares_vampire_the_.php,Vampire The Masquerade,pc,rpg,multi single,production,tools," When we started developing the 3D engine for the game, which we named Nod, the 3D API landscape was quite a bit different from how it isnow. We decided to use Glide as an initial prototyping API with the belief that it would be a more stable platform and avoid the complexities ofsupporting multiple hardware through a more general API until we had solidified the engine a bit. However, once we had a basic, functionalengine running under Glide, the programmers attentions turned toward game play and functionality rather than switching the graphics engineto a more general API such as Direct3D or OpenGL.Because of this if it aint broke mindset, we expanded our support beyond Glide fairly late in development. At the first public showing of thegame at E3 in 1999, we were still basically a Glide-only game, which meant we couldnt demonstrate the game in 32-bit modes or supportsome features not present in Glide at the time. (...)  This is a fairly common problem in games Ive worked on, and Vampire was no different. The technology team typically looks at thedevelopment schedule and schedules that entire block of time to achieve a certain feature set. Often, however, new engine features getadded too late in the schedule to be utilized fully by the designers and artists. This happened several times during Vampire. Some of themore interesting special effects, for example, were added only a few weeks before the data was to be locked down for final testing. Otherfeatures that we added couldnt even be implemented extensively. For example, we added a more flexible shader language so late that onlyone to two percent of the surfaces in the game were able to take advantage of it. Some features that we had originally planned for the engine,like bump mapping and specular lighting, were cut completely from the initial release because there was insufficient time both to complete thefeature and to create art to drive it. We softened the blow somewhat by moving some of these features to a planned patch, which would addthem later if the game proved successful."
146,Vampire The Masquerade Redemption,2000,https://www.gamasutra.com/view/feature/131555/nihilistic_softwares_vampire_the_.php,Vampire The Masquerade,pc,rpg,multi single,production,technical," As the project was drawing to a close, we found that we ended up with a bit too much game, as someone put it. From the start, we decidedto author our data for a high-end platform, so wed have a good-looking game at the end of the 24-month schedule, and also because itsmuch easier to scale art down than up. Unfortunately, we never really started to rein in our art and design teams when we should have nearthe middle of the project. Instead, we continued to add more and more resources to the project, resulting in a minimum installation footprint ofabout 1GB.We authored all our textures in 32-bit color and then scaled them down at load time for 16-bit cards. Our models were also extremely detailed(1,000 to 2,000 triangles each, on average) and relied on automatic level-of-detail algorithms to scale them down for slower machines. We litour levels with relatively high light-map resolutions. All of this made the game look great on high-end systems, but it meant the game wasfairly taxing on low- to mid-range systems. In the end, the game just barely fit on two CD-ROMs. (...)  One problem we identified early in the development process was the problem of pathfinding. Navigation of variably-sized characters througha completely free-form 3D environment is one of the most difficult problems Ive had to tackle as a game programmer. Unit navigation is hardenough when you have a flat 2D plane or restricted 3D environment, but in an environment where the level designers are free to make stairs,ramps, or any other 3D construct you can imagine, the problem becomes exponentially more difficult. My natural tendency when presentedwith such a sticky problem is, unfortunately, to make it good enough for the early milestone and demo builds, and then just deal with it later.Unfortunately, later quickly became now, and now turned into yesterday."
147,Vampire The Masquerade Redemption,2000,https://www.gamasutra.com/view/feature/131555/nihilistic_softwares_vampire_the_.php,Vampire The Masquerade,pc,rpg,multi single,management-feature,scope,"In retrospect, we were in some ways our own worst enemy. Many of the team members had wanted for some time to do a really huge,ambitious role-playing game. When we actually started the project and had a budget and schedule, we probably werent realistic about howlong RPGs typically take to develop, especially one that travels to four different cities across an 800-year timeframe. We were very reluctantto make big cuts in the design, such as cutting one of the two time periods or removing the multiplayer aspect. Because of this, we eventuallyhad to make the decision to miss our first scheduled release date of March 2000. We also cut back on our plans to release an interactivedemo some months before the game and scaled back the scope of the multiplayer beta."
148,Baldurs Gate II The Anatomy of a Sequel,2001,https://www.gamasutra.com/view/feature/131493/baldurs_gate_ii_the_anatomy_of_a_.php,Baldurs Gate II,pc,rpg strategy,multi single,production,testing," Because of its immense size, Baldurs Gate II was a testers nightmare - this was compounded by the fact that we didnt do enough testing as areas were being developed. Baldurs Gate II contains roughly 290 distinct quests - some of these are very small (20 minutes long) while others are quite large (a couple hours in length). Each quest needed to be tested both in single player and multiplayer modes. The main lobby of the Hall of Wonders. During testing we adopted a very sound task and bug tracking method introduced to us by Feargus Urquhart, the Director of Black Isle Studios and Chris Parker and Doug Avery, our Black Isle producers (all of whom helped the project in many different ways). We put a number of white-boards in the halls of the testing and design area and listed all of the quests on the boards. We then put an X next to each quest. We broke the designers and QA teams into paired subgroups - each pair (one tester and one designer) had the responsibility of thoroughly checking and fixing each quest. After they were certain the quest was bulletproof, its X was removed. It took about 2 weeks to clear the board (on the first pass)."
149,Baldurs Gate II The Anatomy of a Sequel,2001,https://www.gamasutra.com/view/feature/131493/baldurs_gate_ii_the_anatomy_of_a_.php,Baldurs Gate II,pc,rpg strategy,multi single,management-feature,cutting-features," In a project as content rich as Baldurs Gate II, we didnt really have to worry about cutting content. While we shipped with nearly all the features we originally planned, we did start cutting quests and characters well before the final testing phase. We still ended up with over 200 hundred hours of gameplay. In retrospect we should have started this process many months earlier. One of the dangers of development is that game developers have a tendency to always add content if they are given time. They dont naturally spend time limiting and polishing content; instead, more time means more stuff. Its wise to use that prioritized feature list to hone the work (of course ours was informal, which made it a little difficult)"
150,Baldurs Gate II The Anatomy of a Sequel,2001,https://www.gamasutra.com/view/feature/131493/baldurs_gate_ii_the_anatomy_of_a_.php,Baldurs Gate II,pc,rpg strategy,multi single,management-feature,multiple-projects," During the development of any game, no matter how cool, there comes a time where people have been working on it for a long time and they start to tire of it. This mid-project doldrums period has to be managed very carefully, with attention paid to the individuals involved. In the case of BG2, our situation was complicated by the fact we had a shiny new project in the form of Neverwinter Nights (also with Black Isle/Interplay as publisher) in production just across the hall, and another cool new project in the form of our Star Wars RPG (with LucasArts as the publisher) also recently underway."
151,Postmortem: Lionhead Studios Black & White,2001,http://www.gamasutra.com/view/feature/131476/postmortem_lionhead_studios_.php,Black & White,pc,simulation,single,production,bugs,"Fixing the bugs. After canceling our Christmas party on December 26, 2000, we managed to hit Alpha, which as any developer knows is a very loose definition, but at least we could say that all the game features were now locked. After a well-deserved Christmas break, we came back to find that we had more than 3,000 bugs. We had six weeks to reduce this to zero, but the thing about bug-fixing is that you can solve one problem but in doing so create three more. So although we worked as hard as we could, the overall figure crept down slowly rather than dropped at the rate at which we were actually sorting out the bugs"
152,Postmortem: Lionhead Studios Black & White,2001,http://www.gamasutra.com/view/feature/131476/postmortem_lionhead_studios_.php,Black & White,pc,simulation,single,management-people,delays,"Talking about release dates. I have to admit, ruefully, that I have a reputation for being, shall we say, optimistic about when the projects Im working on will be completed. I opened my big mouth and announced that Lionhead Studios would finish Black & White and get it releasedat the end of last year. I just cant resist talking about whatever Im currently working on. This has been a problem Ive experienced with every game Ive ever developed. But the thing is, when I think something is going to be finished in December, I really do believe it. People at Lionhead were telling me that we had to build in time for bug-fixing, and I knew this was true, but the truth is that there seems to be no formula for working out how long things will take. The best thing to do, I guess, is to take the finishing date I first think of and move it twice as far away—and then not announce it until were halfway there."
153,Postmortem: Lionhead Studios Black & White,2001,http://www.gamasutra.com/view/feature/131476/postmortem_lionhead_studios_.php,Black & White,pc,simulation,single,management-people,crunch-time,"The project was too big. Black & White got to be so large that we almost felt lost within the code. In fact there are well over a million lines of code within the game. Loading up even the most simple of the smallest tools would take many minutes, and compiling the entire game tookover an hour. This meant that toward the end of the development phase even a tiny change could take a whole day to implement. Checking in changes and rectifying errors was a nightmare. We eventually decided to limit the checking-in to one machine, and we implemented a buddy system whereby nothing was done without an onlooker checking it at every stage. This put a stop to tired people checking in changes at four in the morning and finding that, instead of fixing something, theyd actually caused further problems."
154,Postmortem: Lionhead Studios Black & White,2001,http://www.gamasutra.com/view/feature/131476/postmortem_lionhead_studios_.php,Black & White,pc,simulation,single,management-feature,scope,"Leaving things out. The idea of the game didnt really change much over the course of its creation. But I do have some regrets that features we thought would be great proved unworkable. I expected this, as it happens with every project, but I thought the problems would be caused by software or even hardware limitations. In fact, it came down more to emotional issues. For example, the original idea of the Creatures was that a player could choose to make any living thing a Creature. We wanted the player to be able to select an ant and grow that, or a human being from a tribe, and raise him or her. Christian Bravery, one of the artists, spent a long time drawing concept work and sketches depicting what the Creatures could look like at various stages of their development. This of course included humans."
155,Postmortem: Lionhead Studios Black & White,2001,http://www.gamasutra.com/view/feature/131476/postmortem_lionhead_studios_.php,Black & White,pc,simulation,single,management-feature,planning,"Planning the story. We underestimated how long it would take to construct and write the story element of Black & White. The free-form nature of the game required an unfolding tale to give it some structure and lead it to a conclusion, and in October 1999 we began to work on the story. We thought it would take no more than two months, but after a while we realized that we didnt have the skill set needed to take care of this vital aspect of the game. I contacted James Leach, whod been the in-house games scriptwriter at Bullfrog and had worked on Syndicate Wars, Dungeon Keeper, Theme Hospital, and many others. He was working as a freelance ad copywriter but gladly came on board, again in a freelance capacity, and turned our ideas into a fully plotted story line, wrote hundreds of challenges and quests, and wrote all the dialogue in the game. It ended up being more than 60,000 words, the size of a novel."
156,Ngames Chop Suey Kung Fu,2001,https://www.gamasutra.com/view/feature/131881/mobile_game_postmortem_ngames_.php?page=2,Chop Suey Kung Fu,mobile,action,online,production,design,"Chop Suey Kung Fu really is a simple game, and in some respects, it’s too simple. There’s no character progression, no levels, and no real incentive for the player to keep coming back. Very shortly after launch, we started getting requests for extra features. Maybe characters could earn different belts as they got better. Maybe there could be killer moves that players could work up to. Maybe characters should get extra hit points. There is much, much more that we could have added in, but didn’t. As a result, players moaned that there wasn’t enough to do, and would stop playing if we didn’t give them something extra."
157,Ngames Chop Suey Kung Fu,2001,https://www.gamasutra.com/view/feature/131881/mobile_game_postmortem_ngames_.php?page=2,Chop Suey Kung Fu,mobile,action,online,production,technical,"Chop Suey Kung Fu was originally designed for WAP. At the time, WAP was all the rage. It hadn’t been released yet, and we really were working in the dark. However, armed with a copy of the WML spec and a Nokia WAP emulator, we designed something that could easily be done with our toolkit on the WAP platform. Unfortunately, WAP failed to take off, particularly in the US. Instead, most wireless users are still on HDML, which is basically the same, but without graphics. HDML also uses a different browser than Nokia. As a result, our first encounter with US carriers was a bit of a shock – all our graphics were gone, and we had to reformat for the HDML browser. In retrospect, we should have considered HDML much more seriously, and designed the game to have ASCII graphics. The move to Web and TV was also less well organised than it might have been. We’d talked about doing versions for these platforms, and we knew that the underlying engine would cope with multiple platforms, but we didn’t develop them in parallel. Instead, we did the wireless versions, and then started on the rest. (...) One thing we didn’t anticipate was the degree of localization that would be required. When Chop Suey was written, WAP was in its infancy (and arguably still is). We were planning on a cheap throw-away game that would get us in with American and British phone carriers. This year, Chop Suey is being translated into every major European language, and we’re having to look further afield as well. In retrospect, we should have coded to allow for multiple languages, but somehow, it just didn’t seem worth it at the time. We also found ourselves faced with a mountain of customization. Every carrier has their own style, and wants the content heavily modified. Again, if we’d known this at the time, we’d have written it differently. Instead, we’re stuck with more of a maintenance and configuration problem than we’d like, but hardly an insurmountable one."
158,Ngames Chop Suey Kung Fu,2001,https://www.gamasutra.com/view/feature/131881/mobile_game_postmortem_ngames_.php?page=2,Chop Suey Kung Fu,mobile,action,online,management-people,communication,"Chop Suey Kung Fu has been a great hit with the players. Despite all its limitations, they love it. But it doesn’t yet tell the commercial story we’d hoped for. It still has to see a truly convergent implementation. Telcos each want their own server, as do the TV companies. Instead of the global combat we were after, with any player on any device being able to play anyone else, it has fragmented into dozens of small games, where AT&T customers play AT&T customers, Sprint customers play Sprint customers, and so on. Convergence goes down well at shows and exhibitions, and everyone is keen to buy a convergent game, but nobody’s putting them out in the marketplace."
159,Ngames Chop Suey Kung Fu,2001,https://www.gamasutra.com/view/feature/131881/mobile_game_postmortem_ngames_.php?page=2,Chop Suey Kung Fu,mobile,action,online,management-feature,planning,"Our first error was immediately obvious: we’d commissioned WAP graphics, but we hadn’t commissioned colour graphics at the same time. We had to track down the freelancer who’d done the first set, and persuade him to produce more. It’s a beginner’s mistake, and one we’re not likely to repeat!"
160,Micro Forte s Fallout Tactics,2001,https://www.gamasutra.com/view/feature/131497/postmortem_micro_forte_s_fallout_.php,Fallout Tactics,pc,rpg,multi single,production,design,"The games design goals were another, more serious problem. When I joined the project I had the distinct impression that the game was going to be a turn-based RPG. As the game progressed, it became clear that this was not the case, and we started to move farther into the world of tactical combat and ultimately to real-time gameplay. The situation finally became intolerable in August 2000, when we attempted to produce our first single-player demo. The game absolutely stunk! It was obvious to all who played the game that this just was not working and at this point Brian Christian phoned my CEO and told him that the game did not play. Our CEO stepped in and worked with us to help define what the game was actually about: tactics. He worked with our lead designer in defining key tactical elements that a level designer could pick and chose from in order to help design interesting tactical situations. We realized that the RPG element had to be peripheral to the game, and we concentrated instead on setting up carefully designed tactical situations for the player to solve. We started with just the opening section from the second demo mission and worked on that until it was fun to play. We gradually expanded this to the whole level. Over a period of a few weeks, we were able to turn the demo into a fun experience. By the end of August we had a finished level that was great fun and challenging to play. But the cost was further delays in the release date. The big problem was that by this time we had already started building game levels based on assumptions about how the game would be played, so most of this work was wasted. Combining this with the fact that the text had to be ready for localization and recording of voice-overs meant that we were unable to make all the changes we wanted. Eventually, we had to completely rewrite a large percentage of the missions with a substantial cost in terms of time. (...) For example, we have something like 150 different weapons. This sounds good, but the time spent rendering them and making sure that each one had its stats set up correctly was time that would have been better spent play-testing missions. This led to another problem: we had so many objects that it was difficult to differentiate clearly between them. In fact, all of our pistols are almost completely useless in the game, as they do not do enough damage and offer no clear advantage over an SMG. The character stats were also overly complex for a tactical game. We have 18 different skills, some of which are very poorly differentiated, such as the difference between doctor and first aid (we had to change the original doctor skill completely to make it useful). In our defense, Fallout also implemented these things badly, but I think we should have played the original Fallout games in a much more critical manner, noting things that just did not work in the original and stripping them out. The golden motto should have been ""If it doesnt do something useful or if there is another thing in the game which does nearly the same thing -- take it out!"" We stripped out some stuff, such as the speech skill, but added far more than we removed. The huge selection of stuff on offer is one of the games selling points, but it has affected the quality of the finished product. In the end, I dont think we have really kept the original Fallout fans happy, and we compromised the game design at the same time."
161,Micro Forte s Fallout Tactics,2001,https://www.gamasutra.com/view/feature/131497/postmortem_micro_forte_s_fallout_.php,Fallout Tactics,pc,rpg,multi single,production,documentation,"Although our design specification gave a clear outline description of the game, it did not go into enough detail. This became very apparent in the final stages of the game when the level builders and programmers needed to know exactly what had to be done. There were problems with NPCs and PCs not being designed in sufficient detail, experience progression not being mapped out, not knowing how the quartermaster would behave, no information on how equipment should be released into the game, and other missing details. There were many areas that just were not designed at all. This meant that a lot of design had to be done on the fly by the people doing the implementation. I believe a flexible design is essential, but key design issues need to be nailed down before the programmers or scripters have to implement them. (...) We used CVS for the source code, and this worked well, but we never came up with a good system for the art assets. Artists worked locally on their machines and then uploaded the finished renders onto the server. Level designers worked directly from the server, and at times this could be very slow. We had an ad hoc series of temporary and final directories where people kept work. Sometimes stuff got overwritten; normally it didnt. The other side of this was that we ended up taking a huge amount of server space up with multiple copies of redundant data. We ended up very short on file space, but we managed."
162,Micro Forte s Fallout Tactics,2001,https://www.gamasutra.com/view/feature/131497/postmortem_micro_forte_s_fallout_.php,Fallout Tactics,pc,rpg,multi single,production,technical,"Being located in Australia did not seem to be a major problem at the beginning of the project. We were able to talk to Interplay on the phone in the mornings, and if we had a substantial amount of stuff to send we could courier it over and it would take a few nights. It was not until we were due to deliver the first demo that we began to realize just how serious the problem of getting updates to Interplay was. The fastest I could courier a disc to America was about four days. Using FTP was the only alternative, and FTPs from our location only managed speeds of about 5KB/sec. This meant it would take about two days to upload the complete game to Interplay, and that made it impractical to send the whole thing every time we produced another version. We had to send incremental updates and hope that the version that Interplay was testing had kept pace exactly with the version we had at Micro Forte. Up until a few weeks before we shipped I was still not sure how this would work. In the end, we had to lock our sprite and tile data down early and send that in the early version. Again we managed, but it was a constant source of concern for me, and we still had problems in the game that I am sure were caused by the versions getting out of sync. One of the main reasons I chose to spend the last week of the project at Interplay was to ensure that if things went badly I would be available to make sure that the version they had was sound. I made changes to voice-overs and sound effects at Interplay in parallel with those made by the development team at Micro Forte. We could have used a third-party patch program, but such programs can be very slow to execute, and towards the end of the project we were sending versions once or twice a day. (...) Another major headache for us was that Interplay wanted to ship localized versions simultaneously. From a technical point of view this was not a problem, and it actually helped us to design the game from the start so that we could plug in the voice-over and text without code changes. The problem was that in order to get everything ready in time to ship, Interplay had to start recording and translating dialogue months before the game was due to ship. With our tight deadline we still had a lot of unknowns in terms of what would and would not work right up until the game went into QA. Unfortunately, by the time we were able to focus-test and find flaws in the game, the voice-overs had already been recorded and we were effectively prevented from fixing some basic flaws in some of the missions. This was a shame, because we were very aware of how important it was to give the player plenty of guidance in the missions, and dialogue was the obvious way to do that. We also wanted all of the core dialogue to have voice-overs attached, so that made it very difficult for us to add new elements late in the development."
163,Micro Forte s Fallout Tactics,2001,https://www.gamasutra.com/view/feature/131497/postmortem_micro_forte_s_fallout_.php,Fallout Tactics,pc,rpg,multi single,production,testing,"The size of the game also made QA very difficult. The problem is, of course, that every time the game changes the only safe way to test it is to start right back at the beginning. Because of the size of the game, that would have necessitated another 40 hours of testing after the final candidate was burned before it could ship. Time restrictions made this impossible, so the only way to test it was with the cheats enabled. Most of the obvious bugs were easy to spot in cheat mode, but the more subtle balancing issues only became apparent when the finished game was played through properly after it had shipped. The result is that some of the gameplay is rather obscure, and bugs have slipped in which can make it impossible to complete certain missions under specific circumstances. There are some missions where the whole map depends on finding one key in an obscure place, which is a shame because we had a very clear plan early on not do that kind of thing. There are missions which are almost painfully difficult to complete, resources such as medical kits and ammunition are also in rather short supply. Mind you, at least we dont have any jumping puzzles."
164,Micro Forte s Fallout Tactics,2001,https://www.gamasutra.com/view/feature/131497/postmortem_micro_forte_s_fallout_.php,Fallout Tactics,pc,rpg,multi single,management-people,delays,"Our original art estimates were based on Interlay providing the model data for most of the in-game graphics, such as all the characters and creatures that had been created in the original Fallout 1 and 2. Once the project was started, Interplay informed us that it was not possible to retrieve the art from the tape backups they had. This meant that our original art schedule was blown away and we needed many more artists. We negotiated for more time and cash, but only received more money and no additional time. Fortunately, through our relationship with the Academy, we were able to hire six more artists quickly who were able to come right up to speed. Thanks to our illustrator Tariq, we were able to re-create from scratch all the creatures from the original series and the overall Fallout look. We tried to stick to the original schedule, but it became obvious that we could not possibly deliver in October. Interplay agreed to extended our deadline to February 2001. "
165,Micro Forte s Fallout Tactics,2001,https://www.gamasutra.com/view/feature/131497/postmortem_micro_forte_s_fallout_.php,Fallout Tactics,pc,rpg,multi single,management-people,team,"At this point, we had already invested in extra artists to try to meet the original deadline, so not only was our burn rate higher than we had planned, but it went on for longer. At the beginning of the project, the QA team and many of the 3D artists recruited for the project had been advised that there was no guarantee of ongoing employment after the game shipped. We tried to keep everyone employed, but ultimately we were left with a situation where we had no choice but to let half the art team and the QA team go upon completion of the game. We finally delivered the game in the first quarter of 2001, but even with the extra four months, it was a close thing. The game did come together incredibly fast in the last few weeks, but it was very tense for everyone concerned."
166,Micro Forte s Fallout Tactics,2001,https://www.gamasutra.com/view/feature/131497/postmortem_micro_forte_s_fallout_.php,Fallout Tactics,pc,rpg,multi single,management-feature,scope,"The unrealistic time limit problem was further exacerbated by the size of the game we created. Originally, 20 single-player levels and 10 multiplayer levels seemed a reasonable size for the final game. However, when we started to get flak from the Fallout fans about the game not being true to the original, we decided to link the missions together with a world map rather than a linear mission structure. This in turn led to the inclusion of random encounters and unique encounters to add extra interest while traveling between the core missions. We produced special levels for bunkers where you could reequip and change your squad. This works very well in the game but increased our workload substantially. We also hopelessly overestimated how big our maps needed to be. We ended up with some truly huge playing areas and the associated problem of having to populate them with interesting encounters. Rather than reduce the size of the maps or lose maps altogether, we decided to press on and fill them with interesting objectives. We estimate that to complete all the core and secondary objectives and see all of the multiple endings takes about 40 hours of playtime -- even for someone who knows the missions well."
167,Micro Forte s Fallout Tactics,2001,https://www.gamasutra.com/view/feature/131497/postmortem_micro_forte_s_fallout_.php,Fallout Tactics,pc,rpg,multi single,management-feature,planning,"Originally, we had 12 months from starting the design to delivering the gold master. If you take off a month for initial design and a month for QA, that only leaves 10 months for the development of the game. We made our first deadline, E3, but after that we were constantly slipping. (...) When I first joined the project I produced a Microsoft Project document for the game. The Gantt chart still hangs on the wall downstairs as a testament to the hopelessness of our original goals. Two weeks for pathfinding and six weeks for AI seem hopelessly unrealistic now, but at the time we had no choice if we were to meet our original deadline."
168,Naughty Dogs Jak and Daxter the Precursor Legacy,2001,https://www.gamasutra.com/view/feature/131394/postmortem_naughty_dogs_jak_and_.php,Jak and Daxter,mobile,action platformer racing,single,production,tools," We were plagued with audio-related problems from the start. Our first indication that things might not be going quite right was when our sound programmer quit and moved to Australia. Quickly hiring another sound programmer would have been the correct decision. We tried several other schemes, however, made some poor choices, and had quite a bit of bad luck. We didnt recognize until fairly late in development what a monumental task audio was going to be for this project. Not only did Jak & Daxter contain original music scores, creature and gadget noises, ambient sounds, and animated elements, but there are also over 45 minutes of story sequences, each containing Foley effects and speech recorded in six different languages. Our audio issues could be broken up into four categories: sound effects, spooled Foley, music, and localized dialogue. Due to the large number of sound effects in the game, implementing sound effects became a maintenance nightmare. No single sound effect was particularly difficult or time-consuming; however, creating all of the sound effects and keeping them all balanced and working was a constant struggle. We needed to have more time dedicated to this problem, and we needed better tool support. (...)  One of our greatest frustrations and loss of productivity came from our slow turnaround time in making a change to a level or animation and seeing that change in the actual game. Since all of our tools (including the GOAL compiler) ran across our network, we ran into severe network bandwidth issues. Making better use of local hard drives would have been a smarter approach. In addition, we found extreme network slowdown issues related to reading file time/date stamps, and some tools took several minutes just to determine that nothing needed to be rebuilt. When we compiled some of our tools under Linux, we noticed dramatic improvements in network performance, and we are planning on using Linux more extensively in our next project. We implemented the processing of the lengthy story-sequence animations as a hack of the system used to process the far simpler creature animations. Unfor-tunately, this bad system caused lengthy processing times, time-consuming debugging, and a lot of confusion. If we had initially hidden the processing complexity behind better tools, we would have saved quite a bit of time. (...)  We created many tools while developingJak & Daxter, but many of our tools were difficult to use, and many tools were needed but never written. We often didnt know exactly what we needed until after several revisions of our technology. In addition, we didnt spend a lot of time polishing our tools, since that time would have been wasted if the underlying technology changed. Regrettably, we did not have time to program tools that were badly needed by the artists, which resulted in a difficult and confusing environment for the artists and caused many productivity issues. Since programming created a bottleneck during game production, the added burden given to the artists was considered necessary, though no less distasteful."
169,Naughty Dogs Jak and Daxter the Precursor Legacy,2001,https://www.gamasutra.com/view/feature/131394/postmortem_naughty_dogs_jak_and_.php,Jak and Daxter,mobile,action platformer racing,single,production,technical," Because we were so busy creating the technology for our seamless world, we didnt have time to work on gameplay code until fairly late in the project. The situation caused no end of frustration to the designers, who were forced to design levels and creatures without being able to test whether what they were doing was going to be fun and play well. Eventually programmers were moved off of technology tasks and onto gameplay tasks, allowing the designers to play the game and make changes as appropriate. But without our designers experience, diligence, and forethought, the results could have been a disaster"
170,Naughty Dogs Jak and Daxter the Precursor Legacy,2001,https://www.gamasutra.com/view/feature/131394/postmortem_naughty_dogs_jak_and_.php,Jak and Daxter,mobile,action platformer racing,single,management-people,team," While its true that GOAL gave us many advantages, GOAL caused us a lot of grief. A single programmer (who could easily be one of the top ten Lisp programmers in the world) wrote GOAL. While he called his Lisp techniques and programming practices revolutionary, others referred to them as code encryption, since only he could understand them. Because of this, all of the support, bug fixes, feature enhancements, and optimizations had to come from one person, creating quite a bottleneck. Also, it took over a year to develop the compiler, during which time the other programmers had to make do with missing features, odd quirks, and numerous bugs. Eventually GOAL became much more robust, but even now C++ has some advantages over GOAL, such as destructors, better constructors, and the ease of declaring inline methods. A major difficulty was that we worked in such isolation from the rest of the world. We gave up third-party development tools such as profilers and debuggers, and we gave up existing libraries, including code previously developed internally. Compared to the thousands of programmers with many years of C++ experience, there are relatively few programmers with Lisp experience, and no programmers (outside of Naughty Dog) with GOAL experience, making hiring more difficult."
171,Cutler Creative Last Call,2001,https://www.gamasutra.com/view/feature/131490/postmortem_cutler_creatives_last_.php,Last Call,pc,simulation,single,management-people,communication," Over the course of the project, we built an adversarial relationship with the company hired by SSI to test Last Call. CutlerCreative LLC did not have the resources to test the title internally. Often, deliverables were sent to testing with see if it starts up testing. Our inability to simply delay the deliverable and to conduct half a day of testing on a stable version cost us weeks answering (and writing) angry e-mails from all parties. These are all standard beginner mistakes, but as the project spun out of control, tempers flared, pride reared its ugly head, and time was lost. A clear understanding from the outset of our publishers expectations would have helped somewhat. However, as mentioned, the scope of the project was ever-changing based on player feedback, tester remarks, and the like."
172,Cutler Creative Last Call,2001,https://www.gamasutra.com/view/feature/131490/postmortem_cutler_creatives_last_.php,Last Call,pc,simulation,single,management-feature,scope," Many reviewers remarked that the game lacked scope, and their observations were entirely valid. We concentrated 100 percent on making the game -- which consists entirely of characters approaching the bar, waiting, ordering, talking, and retreating -- interesting within the defined game world. Bar patrons become drunker as the night progresses. The bartender is able to flirt with the customers. Bad drinks can send a customer into a puking spell. All things considered, we might have benefited from spending less time on game nuances, and more time on adding some different activities, environments, level goals, and other elements."
173,Cutler Creative Last Call,2001,https://www.gamasutra.com/view/feature/131490/postmortem_cutler_creatives_last_.php,Last Call,pc,simulation,single,management-feature,feature-creep," We were continually adding features to Last Call as we refined the game in response to tester feedback. As it became increasingly clear that the game had taken on a life of its own -- exceeding our expectations, and certainly exceeding SSIs expectations -- we became perfectionists. Had the title been produced independently, working at a slower pace with a smaller team, this would have been par for the course. However, we had a deadline and milestones, and eventually had to contend with an angry publisher. Last Call was relatively complicated considering the budget for the project. Users interacted with the bar environment in ways we did not expect. Even the metaphor of drink pouring was highly scrutinized and debated -- our target customer did not play games, and was not likely to pick up strange, unnatural actions."
174,Cutler Creative Last Call,2001,https://www.gamasutra.com/view/feature/131490/postmortem_cutler_creatives_last_.php,Last Call,pc,simulation,single,management-feature,planning,In retrospect we made many classic beginner mistakes. We were not realistic about the projects timeframe. We underestimated the duration many small tasks -- culminating in a lengthy delay. We did not press for change orders when appropriate (probably because we were changing the title daily).
175,Monoliths No One Lives Forever,2001,https://www.gamasutra.com/view/feature/131478/postmortem_monoliths_no_one_.php,No One Lives Forever,console pc,shooter strategy,multi single,production,design," We were months into development before we had a signed contract for No One Lives Forever, although various publishers had green lighted the project no fewer than four times before then. During this interval, the project mutated constantly in order to please prospective producers and marketing departments. The game actually started off as a mission-based, anime-inspired, paramilitary action thriller intended as a spiritual sequel to Shogo and ended up as a 60s spy adventure in the tradition of Our Man Flint and countless other 60s spy movies and shows. The schedule fluctuated between a minimum of six months and a maximum of twenty-four, the intended feature set scaling accordingly. Needless to say, it took us a while to get a handle on exactly what we were making, which tended to be a bit disquieting. Really, though, you cant take it personally. You just have to adapt and survive, which is precisely what we did. Each time the schedule changed, we came up with an entirely new proposal instead of trying to cram a 20 month game into 11 months. It just so happened that when the roulette wheel finally clicked to a stop, we were planning to make a 60s spy adventure game. As I mentioned, we were then able to draft a mission statement and stick to it, but we bled away many precious weeks prior to that point."
176,Monoliths No One Lives Forever,2001,https://www.gamasutra.com/view/feature/131478/postmortem_monoliths_no_one_.php,No One Lives Forever,console pc,shooter strategy,multi single,management-feature,feature-creep,"Implementing in-game cutscenes inNOLF proved to be a frustrating, time-consuming ordeal, especially considering how many of them there were. As a result, I generally had to go with the easiest solution rather than the most desirable one. Due to time constraints, I also had to sacrifice many of the cutaways Id hoped to do to keep the briefings interesting. To make matters worse, wed done the motion capture based on the original script, so with the cutaways excised, I had a very limited pool of applicable animations to draw from."
177,Monoliths No One Lives Forever,2001,https://www.gamasutra.com/view/feature/131478/postmortem_monoliths_no_one_.php,No One Lives Forever,console pc,shooter strategy,multi single,management-feature,budget," It wasnt until some time after we had a signed contract until we had a stable team. Almost every aspect of the project was affected. We lost a product manager, two engineers (although, thankfully, one came back to the fold), and three 3D artists. Level designers came and went. Part of the problem owed to our publisher woes. On two separate occasions, what was effectively the cancellation of the project resulted in our not being able to hire people we were planning to bring aboard. Without funding for the game lined up, it made no sense to bring on new employees. Another source of instability for the team was the desire to provide stability for Monolith as a whole. In the aftermath of Shogo and Blood 2- which led to the restructuring of the company, the liquidation of our publishing efforts, and the resignations of a number of people either burned out by grueling development cycles or disillusioned by the problems that led to them-we had three projects entering development but only a handful of people experienced with LithTech, so we redistributed this modest wealth of experience to maximize our efficiency. In the full course of time, both Monolith and the NOLF team were better off, but it was a demoralizing, debilitating process, from which the team took months to fully recover."
178,Operation Flashpoint,2001,https://www.gamasutra.com/view/feature/131427/postmortem_bohemia_interactive_.php,Operation Flashpoint Cold War Crisis,pc,shooter simulation strategy,multi single,production,documentation," Lack of documentation is a common affliction among game developers, but some aspects of this problem were so severe in our case that they are worth mentioning. While wed never believed too much in designing the game on paper, the real problem was that we never even had documentation of the things that wed finished. This situation led to incredible problems in the final stages of development. Many tasks could only be done by one person on the whole team. In other cases, hours were spent trying to investigate how something had originally been meant to work. We recognized these problems and tried to improve them, but apart from a few instances, our effort wasnt really successful. As the development team grew, the missing documentation was becoming a more serious problem. But the final project deadlines were getting closer as well, so it was nearly impossible to find the time to address the problem."
179,Operation Flashpoint,2001,https://www.gamasutra.com/view/feature/131427/postmortem_bohemia_interactive_.php,Operation Flashpoint Cold War Crisis,pc,shooter simulation strategy,multi single,production,tools," One very concerning thing was that our final CD was still manipulated by the publisher. The publisher applied SafeDisc protection to the final code, which caused some unexpected compatibility problems that we werent able to control. The mixing of various SafeDisc versions and a serious compatibility problem with Windows 2000 that was present in the first European batch of CDs could have been avoided."
180,Operation Flashpoint,2001,https://www.gamasutra.com/view/feature/131427/postmortem_bohemia_interactive_.php,Operation Flashpoint Cold War Crisis,pc,shooter simulation strategy,multi single,production,technical," For implementation, we wanted to avoid low-level network coding and instead use a high-level API. As we were already using Direct3D for graphics and DirectSound for audio, and both suited our needs quite well, we decided to use DirectPlay as our network API. DirectPlay offered high-level handling of all network communication, including Voice Over Net capabilities. Unfortunately, our experience with this API was extremely bad. Often when trying to get some high-level functionality working, we realized it contained bugs that rendered it almost unusable. We had to implement our custom code for things we thought DirectPlay would provide, but that was sometimes very hard, as we did not have the low-level control that we needed. We also encountered many performance problems, some very strange, such as significant (particularly server-side) slowdown even with no traffic over the network. This along with the lack of documentation and a lack of stability resulted in many problems that were hard to debug. Another drawback that we didnt recognize beforehand is that DirectPlay is Windows-only, but many dedicated servers for games currently being played online run on Linux. Overall, selecting DirectPlay as our network API was one of the most unfortunate decisions in the whole games development."
181,Operation Flashpoint,2001,https://www.gamasutra.com/view/feature/131427/postmortem_bohemia_interactive_.php,Operation Flashpoint Cold War Crisis,pc,shooter simulation strategy,multi single,production,testing," We experienced various problems in communication and cooperation with our publisher. Generally, their focus and assistance in some areas of the production of the game (design suggestions, voice-overs, translation, scriptwriting) were really helpful. But in other areas, we experienced some events and circumstances that slowed down and complicated the games development rather than moving things forward. One of the most unsatisfactory areas was the way the QA procedures were managed and designed to work by the publisher. We never succeeded in achieving a common bug database, and the publisher enjoyed an illusory feeling that its QA database really covered the project. The truth was that such a database (even without any direct access for the development team) hardly said anything about the projects status because it covered just small fraction of all the problems we had tried to fix. Even when the publisher dedicated a pretty big testing team to the game, it sometimes seemed something of a waste of time for everyone involved in it."
182,Operation Flashpoint,2001,https://www.gamasutra.com/view/feature/131427/postmortem_bohemia_interactive_.php,Operation Flashpoint Cold War Crisis,pc,shooter simulation strategy,multi single,management-feature,planning," Despite some of the usefulness the extra development time offered us, in the end th cycle was probably too long, and in optimal conditions would have been at least 20 percent shorter. It may have been possible to shorten the cycle, but we experienced various external events or internal missteps that prevented us from accomplishing that. First of all, some technologies in the game were a bit outdated after more than four years. We didnt know at the outset that the game would be still in development after so long, and we hadnt left time at the end to rework parts of the engine. Some of the criticism of Operation Flashpoint addresses the amount of detail in the textures and some models - and we have to admit that these could have been better."
183,Postmortem: Raven Softwares Star Trek: Voyager -- Elite Force,2001,https://www.gamasutra.com/view/feature/131512/postmortem_raven_softwares_star_.php,Star Trek: Voyager -- Elite Force,console pc,shooter,single,production,tools,"From Ghoul models to regular models to skeletal models. It was a big decision to switch to the new skeletal models. In the beginning, we were using what was to become Soldier of Fortunes Ghoul system (see Postmortem:Raven Softwares Soldier of Fortune for more on Ghoul). When we received the Quake 3 code, we tried to integrate Ghoul into the new code, but found it to be too different. It just didnt fit in with the new optimized rendering pipeline Quake 3 provided. So we switched over to regular Quake 3 models. There was a lot of learning going on at this time. When we get new code, it doesnt come with operating instructions, and its often not complete. We went through a lot of growing pains adopting the new format and figuring out its requirements. When the option to go skeletal came up, we had to weigh the benefits of the new system versus the risks and time it would take to switch over. While we did the right thing and embraced the new technology, we had to write a new set of tools to handle the new formats and learn new procedures to get our animations out of Softimage 3D and into 3D Studio Max. (...) Adjusting to new Quake 3 technology. The biggest level design headache in working with technology that is still being developed is that its constantly changing. We started building our levels way before the Quake 3 engine was near completion, and this caused scheduling problems every time we got a new code build. We built our levels one way with the tools and knowledge we had at the time, and then when a big change was made to the Quake 3 code, the level designers had to spend a few days altering each of their levels to keep up with the changes in the code and how it handled surfaces, lights, and architecture. This happened numerous times during development, and we often went months without new code drops."
184,Postmortem: Raven Softwares Star Trek: Voyager -- Elite Force,2001,https://www.gamasutra.com/view/feature/131512/postmortem_raven_softwares_star_.php,Star Trek: Voyager -- Elite Force,console pc,shooter,single,management-people,team,"Not enough programmers. For the first half of development, there was mainly only one programmer working on scripting, enemy AI, teammate AI, pathfinding, and the animation system. This programmer was also writing all the dialogue, and it became necessary for him to relinquish other programming duties in order to finish writing. Unfortunately, we didnt have any extra programmers to help."
185,Postmortem: Raven Softwares Star Trek: Voyager -- Elite Force,2001,https://www.gamasutra.com/view/feature/131512/postmortem_raven_softwares_star_.php,Star Trek: Voyager -- Elite Force,console pc,shooter,single,management-feature,planning,"Underestimating the amount of scripting work needed. As we mentioned previously, our Icarus scripting system was a huge plus. But we also encountered a lot of problems with scripting. Not only had no one ever used this system before, none of the programmers behind it had ever written a scripting system before. The designers didnt even get their hands on the scripting system until about eight months before the game was done. They did pick it up quickly, but not without a lot of effort and time involved."
186,Lucas Arts Star Wars Starfighter,2001,https://www.gamasutra.com/view/feature/131456/postmortem_lucas_arts_star_wars_.php,Star Wars Starfighter,console pc,action shooter,multi single,production,design," Europa was always envisioned as having some sort of Star Wars: Episode I tie-in. During much of 1998, however, it was difficult to predict to what degree Lucas Licensing would allow this to happen. One of the barriers we encountered was the intense veil of secrecy that surrounded any Lucas-owned company involved with the movie property. Some of us had access to the script and the occasional rough-cut screening, but particularly during the first half of 1998 it was virtually impossible to learn the important details about the film needed to build a solid franchise title"
187,Lucas Arts Star Wars Starfighter,2001,https://www.gamasutra.com/view/feature/131456/postmortem_lucas_arts_star_wars_.php,Star Wars Starfighter,console pc,action shooter,multi single,production,technical," There is little question that in the rush to implement features and ship the game on time, performance suffered. Part of this was due to having an inexperienced staff, and part of this was due to the fact that we had ported a PC code base to the PS2, but in truth most of us were so preoccupied with one issue or another that we had little time to revisit code with an eye toward optimization. There was a pervasive attitude among many of us that we could safely ignore code problems until they showed up as hotspots on a profiling run. There is some merit to this strategy, since premature optimization efforts can be more wasteful than not fixing the code at all. But since profiling can turn up hidden problems in areas of the code that the team had previously thought complete or issue-free, its important to start profiling much earlier than we did. For example, we had severe performance problems in our collision detection systems that we would have identified immediately if we had profiled sooner. As it happened, by the time we realized that collision detection was working poorly, the best we could do was apply spot fixes instead of the large-scale reworking that the problem actually demanded. (...)  As quickly as we were able to get Europa up and running on the PS2, it took the programming team much longer to fully embrace the creed of the console programmer. Since Europa was originally intended to be a PC title and our programmers only had PC experience, its not surprising that most of the code suffered from a bad case of PC-itis. I use this term to refer to programming practices that, while potentially portable to a console, are definitely not console-friendly. Our approach to memory allocation is a perfect case in point. For starters, we relied on the STL for all of our container classes. On one hand, we benefited from a bug-free and robust set of standardized collection classes. As an integral part of the C++ Standard Library, the STL contains a powerful toolset for general application development."
188,Lucas Arts Star Wars Starfighter,2001,https://www.gamasutra.com/view/feature/131456/postmortem_lucas_arts_star_wars_.php,Star Wars Starfighter,console pc,action shooter,multi single,management-people,team," Try as we did to manage staff retention, the team experienced an alarming amount of turnover, both in the programming and art departments. This invariably made life harder for the people left behind, because the amount of work remained constant, but team members could not be replenished as quickly as they were lost. This also meant that many of the teams junior staff members missed out on valuable mentoring or experienced spotty supervision by their leads. On the programming team, senior programmers were so busy that we had little time to train new team members. This led to a stressful sink-or-swim mentality, which was difficult for new hires. Even relatively simple quality-control procedures such as code reviews were never instituted, since every moment of every day was dedicated to making forward progress on the game."
189,Lucas Arts Star Wars Starfighter,2001,https://www.gamasutra.com/view/feature/131456/postmortem_lucas_arts_star_wars_.php,Star Wars Starfighter,console pc,action shooter,multi single,management-feature,cutting-features," If there was anything about the original Star Wars Starfighter pitch that met with widespread enthusiasm, it was the idea of seamlessly transitioning from planet-side environments to the depths of space and back again. Dog fighting close to the planet surface certainly has its own appeal, but there is something about the promise of being able to pull back on the stick and blast off all the way into space that is simply very, very cool. This high concept was so exciting to the team that the original game pitch featured this idea predominantly. In fact, in many ways this single feature was to define the game. Well, its a bit of a trick to actually pull off. First, there were the technical considerations. A planet is big. I mean really, really big. Even a small planet would require dynamically creating thousands of terrain tiles. Although most of these tiles could be procedurally generated, they would still need to be created and discarded on the fly; depending on the players location, custom mission-area tiles would have to be streamed in from the hard disk, all while maintaining frame rate. Of course, since we wanted to allow the player to fly absolutely anywhere on the planet, ordering this data on the disk in a streaming-friendly format was problematic. We exacerbated the situation by requiring even our lowestresolution terrain height maps to be much higher resolution than they really needed to be. This in turn made higher theoretical demands on the streaming and resource systems."
190,Startopia,2001,https://www.gamasutra.com/view/feature/131436/postmortem_startopia.php,Startopia,pc,simulation,multi single,production,documentation,"One of the obstacles faced when developing this type of game was the way every system and element of the game interacted together in a vast and complex manner. Very few elements could be considered stand-alone, and as such the programmers began to find that they often needed to jump into someone elses code in order to get their own systems working correctly within the game. This originally began as an informal activity, as the code wasnt yet particularly complex, but as time moved on and each programmer found they had more and more individual code elements to maintain, the changes made began to creep in without everyones knowledge. This lack of communication and tracking led to several areas of code being rewritten or duplicated by different programmers, each unaware of the impact it would have on the others code. While the editing of code by someone other than the original author meant less time wasted on communicating the required changes to the original programmer and waiting for an update, in the long term it resulted in less streamlined systems, and unnecessary rewriting of some areas. If there is a bug in person As code that person B spots, A must fix it. Otherwise, if B fixes it, (a) a higher chance of bugs and (b) A now doesnt know what the code does, and will refuse to touch it again. But B doesnt completely understand the code; they just know the tiny bit they fixed. So now, no one knows what that module does. The result is chaos. Ownership of code can change, but it must be a well-defined handover, and B must be happy that they understand what the code does, and are happy to own it."
191,Startopia,2001,https://www.gamasutra.com/view/feature/131436/postmortem_startopia.php,Startopia,pc,simulation,multi single,production,tools,"The amount of work required getting animations and special effects working in the game was severely underestimated. As such, no tools were developed for the artists or designer to easily insert and tweak models, animations, or objects. Almost everything had to be coded manually for it to work as we intended it to in the game. This led to an excessive amount of programming resources being spent tweaking animations and fixing models (often with code bodges), rather than leaving it to the art team, who found themselves under-tasked during the latter half of the project."
192,Startopia,2001,https://www.gamasutra.com/view/feature/131436/postmortem_startopia.php,Startopia,pc,simulation,multi single,production,technical,"The early development stage of the game focused far too heavily on the graphical look of the game, and almost entirely avoided any thought as to how the technologies used would impact gameplay. While this proved influential in securing a strong publishing deal with Eidos, it had repercussions in the later stages of the project, resulting in unwanted game design restrictions to avoid re-writing code. And in other areas, a forced re-write of code that just didnt lend itself well to the gameplay systems we needed to make the game playable and enjoyable."
193,Startopia,2001,https://www.gamasutra.com/view/feature/131436/postmortem_startopia.php,Startopia,pc,simulation,multi single,production,prototyping,"One particular area that would have benefited from some greater forethought, would have been user-expandability. As we later found out, the system we originally coded was quite narrow in scope, and required extensive code updates whenever a new object needed to be added to the game. It made third party expansion of the game practically impossible, as well as proving a pain for us to use. Ideally, the technical aspects of the game design should have been started right at the beginning of the project, well before any models were built or code was written, and would have taken into account expandability as a primary factor."
194,Startopia,2001,https://www.gamasutra.com/view/feature/131436/postmortem_startopia.php,Startopia,pc,simulation,multi single,business,marketing,"There seemed to be little exposure of Startopia among the gaming press, and no hype surrounding its release, even though it was developing some unique and cutting edge technology, particularly in the game engine and its AI players. While in part it was the responsibility of our publisher to market and publicize the product to the consumer, the blame also rests upon us in naively believing that just developing a good, solid game would be enough to ensure sales. To our cost, weve found that the market just doesnt work that way any more. We should have been far more active in proclaiming that Startopia was the next great event in gaming, releasing snippets of information about the fantastic gaming opportunities it provided, and how it would redefine the God-sim genre. With so many games being released across so many formats, and a much broader audience to sell to, its no longer the case where the majority of gamers can seek out and decide for themselves, which titles are the best — you need to shout loudly to be noticed by the consumer. We were far too quiet, and as such were drowned out by other less accomplished games who where far more vocal about their release."
195,Frog Citys Trade Empires,2001,https://www.gamasutra.com/view/feature/131422/postmortem_frog_citys_trade_.php,Trade Empires,pc,simulation,single,production,testing," If we had done more beta testing, with a larger group and earlier on, we would have gotten the kind of outside feedback that would have helped us realize that some of the tradeoffs we were making were going the wrong way. We didnt miss some features nearly as much as other people did -- we were so used to the game that we adjusted our play style and underestimated how important the missing features were."
196,Frog Citys Trade Empires,2001,https://www.gamasutra.com/view/feature/131422/postmortem_frog_citys_trade_.php,Trade Empires,pc,simulation,single,production,bugs," The designers spent a lot of time early on thinking about scale. The conflict became clear: if the map was zoomed in close enough so that the buildings and units would look very cool, then not enough map area would be on-screen at once and the player would have to scroll to see from any market to the next. We thought about having two zoom levels on the map but we realized that wed end up with the nice zoom level for screenshots, and the zoom level that was actually good for playing on. We didnt have the time to support both at that point (we have multiple zoom levels in the new game were developing), so we opted for the better level for gameplay. But it was a shame that so many of the cool details in the art couldnt be clearly seen."
197,Frog Citys Trade Empires,2001,https://www.gamasutra.com/view/feature/131422/postmortem_frog_citys_trade_.php,Trade Empires,pc,simulation,single,management-feature,feature-creep," Pathfinding was the number one mistake in our scheduling. Over and over we failed to realize how much time the game would spend pathfinding, and how much time we would spend writing the code. We didnt realize that many things which we thought of as separate challenges were really all pathfinding and should be designed in a comprehensive way: creating a path for units who already know their destination, having the unit sprites follow the path and stay centered on their pathway art, constructing the pathways, drawing pathways."
198,Frog Citys Trade Empires,2001,https://www.gamasutra.com/view/feature/131422/postmortem_frog_citys_trade_.php,Trade Empires,pc,simulation,single,management-feature,cutting-features," Trade Empires is a good game, but it could have been better. Many of the reviewers liked the game (many three and half star or 8/10 reviews), but raves like the Imperialism games garnered were less evident. True, the budget and schedule were a lot smaller and more confining for Trade Empires, so we didnt get to lavish the same amount of detail and loving care on it. Even with those constraints, I think we could have made a better game if we had made some different trade-offs. The number one feature that reviewers missed was more feedback on how the player is doing and on the state of the world. We had a number of features in mind that would have provided this feedback. We designed a separate set of interface panels for charts and graphs. We designed a system to provide rumors of upcoming technologies, warnings and advice from the merchants. Mostly these were features that were absent from the original design, but had occurred to us during development. They would get added to the project schedule in the gravy area. Many gravy features were added. But these more time-consuming features didnt make it, as we focused our energies on robustness of the code and polishing the feature set we had."
199,Frog Citys Trade Empires,2001,https://www.gamasutra.com/view/feature/131422/postmortem_frog_citys_trade_.php,Trade Empires,pc,simulation,single,business,marketing," Our approach to interface design meant that for a long time, there was no interface art to look at. The interface was a bunch of functional gray buttons and text boxes. This made for very efficient use of the artists time, but it didnt do much to excite marketing people at the publisher. Marketing people have many projects to juggle; they shouldnt be expected to imagine art in place of gray boxes. In retrospect, time spent making mockups of the interface and special hi-res images just for the marketing teams would have been time well spent. As it was, the game flew below the radar during a time when the publisher was getting increasingly shy of PC games market. So it never got any marketing attention. Getting the support of marketing people is crucial: not only do they control the advertising budget, but their support rallies additional interest at the publisher - useful for things like extra multimedia, bigger manuals, more attention and thus more feedback from more perspectives during development. They not only help the game get in front of paying players, they can also help make the game better."
200,Poptop Software Tropico,2001,https://www.gamasutra.com/view/feature/131440/postmortem_poptop_softwares_.php,Tropico,pc,simulation,single,production,design," Because we started with an existing engine, one of the errors that we made during development was to see how far we could push the envelope with the engine, working on gee whiz enhancements that would improve the look and the technology of the game instead of features that would enhance gameplay. The biggest example of this was what we dubbed Zoom 0. As the graphics in Tropico were much more detailed thanRT2s, we looked for ways to show off these gorgeous images in the game. Allowing the engine to zoom in one level closer than it had previously been able to (Zoom 1) was one of the ways that we did this. In Tropico, players can zoom in very close and get very detailed views of the people and the buildings."
201,Poptop Software Tropico,2001,https://www.gamasutra.com/view/feature/131440/postmortem_poptop_softwares_.php,Tropico,pc,simulation,single,production,documentation," Coming off the success ofRailroad Tycoon II, we were excited to get the chance to work on something new and unique. A few company brainstorming sessions and a game or two of Junta, and we knew that we wanted to do a tongue-in-cheek political game. We couldnt jump into the project fast enough. Ideas were flying hot and heavy. Everyone was excited. Unfortunately, we failed to realize at the time that everybody was carrying a slightly different picture in his head of what the final game would be. Some were envisioning the stab-your-neighbor, laugh-a-second antics of the Junta board game. Others were seeing the close-up, detailed view of people in action that Rollercoaster Tycoon had done so successfully. Most of us were somewhere in between."
202,Poptop Software Tropico,2001,https://www.gamasutra.com/view/feature/131440/postmortem_poptop_softwares_.php,Tropico,pc,simulation,single,production,technical," One of the givens, decided before any work was even begun on Tropico, was that we would use the 3D engine from RT2. This would allow us to have working maps with many of the features we would need in Tropico almost immediately, thereby giving us a huge jump start on development. The idea was a great one and paid huge dividends in getting us working almost immediately on the game itself rather than the engine. Unfortunately, in conjunction with this decision, we started from the existing RT2 code base - not only the engine, but all the game code from RT2 as well. We were trying to morph RT2 into Tropico, which led to all kinds of problems and slow-downs. First of all, a single programmer had developed almost the entire RT2 code base. With Tropico, the staff of Poptop had nearly doubled in size. Each new programmer immediately faced the daunting task of getting a grasp of the RT2 code before he could even begin to make the modifications necessary to create Tropico. Second, there were huge chunks of the code base that became dead once Tropico was started, such as the multiplayer code. (We had decided pretty early in Tropicos development to scrap multiplayer and concentrate on the single-player experience.) Of course, multiplayer code was integrated very tightly into many areas of the RT2 code, and at first we tried to work around it. Eventually we tore it out, once we became frustrated trying to determine which areas of the code were dead and which were important."
203,Poptop Software Tropico,2001,https://www.gamasutra.com/view/feature/131440/postmortem_poptop_softwares_.php,Tropico,pc,simulation,single,management-people,communication," As I mentioned, one of the effects of essentially bypassing the design phase of this project was that there was a lack of consistent vision among team members. One of the places that this became most apparent was in the game art. Almost all of the artists at one time or another during the project worked on creating buildings for the game. They were given only a vague notion of what type of building they were to create - a paper sketch or a very crude 3D mockup - and left on their own to move forward from there. Halfway through the project, the problems with this became apparent. Scale varied wildly from artist to artist, as did level of detail. The same problems were occurring with the character animations, as the two artists working on those had taken different approaches. One artist was striving toward very lifelike figures with complex animations, while the other created more cartoonish parodies of Tropicos inhabitants with more outlandish but less complex animations. Both artists had a clear idea of what they were trying to do, and both accomplished their respective goals brilliantly, but the difference in their approaches can still be seen in the release version of the game if you compare, for example, the banker to the female luxury tourist."
204,Poptop Software Tropico,2001,https://www.gamasutra.com/view/feature/131440/postmortem_poptop_softwares_.php,Tropico,pc,simulation,single,management-feature,cutting-features," After the scenario-intense RT2 and its add-ons, we were more than happy to try creating a game in which the strengths lay in randomly generated maps and sandbox-style open-ended play. From day one we worked on Tropico with this goal in mind. A lot of effort went into creating a map generator that would create pleasing, logical, and most importantly playable maps. We modeled rainfall on what we knew and could find out about meteorology. We researched vegetation, not only to find flora indigenous to a Caribbean setting but also to find out under what conditions a particular plant would thrive and how to represent that in the game. A significant amount of time went into creating realistic mountains and series, even ranges, of mountains. We even went so far as to model the terrain under the water, so that shallow beach areas and deeper waters would be accurately created. As we realized this late in the project, we scrambled to create scenarios to include. Unfortunately, our tools in this area were underdeveloped, and time had to be squeezed out of peoples schedules even to produce what we did. The result was that Tropico included a very limited number of scenarios (eight with the game and two others included in some promotional CDs) that werent nearly as involved as they could have been, and certainly werent up to the standard that we had created in RT2."
205,Pseudo Interactives Cel Damage,2002,https://www.gamasutra.com/view/feature/131416/postmortem_pseudo_interactives_.php,Cel Damage,console,action,multi single,production,design,"Once we got our technology back online in December 2000, it began evolving very quickly. Feature sets for weapon and death effects, driving behaviors, gag functionality, and animations were growing every day. Because we were designing a game to the technology (rather than the other way around), we were throwing out design documents as quickly as they could be written. Art assets had to be revised, retextured, discarded, and rebuilt from scratch several times. As most readers will know from experience, this is a scenario for feature creep, obsolete tool sets, and blown deadlines."
206,Pseudo Interactives Cel Damage,2002,https://www.gamasutra.com/view/feature/131416/postmortem_pseudo_interactives_.php,Cel Damage,console,action,multi single,production,documentation,"While we had an established directory structure for storage at the beginning of the project, new workflows, staff, and management methods precipitated a patchwork of file-naming conventions and tracking methods. Final game meshes were inadvertently overwritten with geometric primitives. We ""lost"" assets on the server for days at a time. Other tracking problems cropped up as well. A bug in our game engine created duplicate textures that were difficult to hunt down and eliminate. Also, we had a problem with texture revisions that got wiped out on import to the game editor. To compound our headaches, objects were often used in several different levels, but if an optimization was made to one, that change was not automatically propagated through all levels. (...) Obviously, we needed a tool to track our art assets and their properties and to update content in the game. We created the robust PI_Asset for just such a use. Unfortunately, it was introduced too late in the project for full implementation. As a stop-gap measure, artists began sending out dailies through e-mail. These reports proved useful in tracking what had been accomplished in the course of a day and what should be updated in the build, but data management was still a problem. "
207,Pseudo Interactives Cel Damage,2002,https://www.gamasutra.com/view/feature/131416/postmortem_pseudo_interactives_.php,Cel Damage,console,action,multi single,production,tools," While we were able to nail down our feature set four months before shipping, our evolving engine did cause other problems. (...) We also realized we needed a way to play back our cutscenes in real time through the game engine and renderer, even through these code elements were not designed to handle the task."
208,Pseudo Interactives Cel Damage,2002,https://www.gamasutra.com/view/feature/131416/postmortem_pseudo_interactives_.php,Cel Damage,console,action,multi single,production,technical,"Our initial efforts produced large amounts of art content to show off the Xboxs power. However, evolving performance specs for the Xbox and our game engine, along with a new IP introduced early in 2001, generated several massive content revisions. These revisions were necessary for level geometry, static world objects, gags, skyboxes, cars, characters, weapons - everything. In the worst cases, we saw at least 12 major revisions to individual assets."
209,Pseudo Interactives Cel Damage,2002,https://www.gamasutra.com/view/feature/131416/postmortem_pseudo_interactives_.php,Cel Damage,console,action,multi single,management-people,team,"Due to our relatively small staff, we had to put managers in the critical path of day-to-day asset delivery. These same people held crucial, unique skill sets. As you know, this is a recipe for bottlenecks that hamper development. One example among several was the role of our art director. We made this person responsible for overseeing the game art, scheduling his staffs workweeks while developing their technical expertise, modeling, creating the games interface, producing our cutscenes, overseeing interns, and distributing hundreds of art bugs. The time needed for one person to do all these things just wasnt available every day. Fortunately, we were able to create an art lead position to handle the staff and bug tasks. However, not every instance of over-tasking could be fixed by adding a new body. (...)We switched to a new publisher halfway through development. Going from Microsoft to EA was a mixed blessing. While we were able to improve gameplay and develop our own IP, we lost both our financial backing and our internal focus at a crucial time in the project. We were also forced to reinvent all of our art assets to avoid an IP conflict with Microsoft."
210,Pseudo Interactives Cel Damage,2002,https://www.gamasutra.com/view/feature/131416/postmortem_pseudo_interactives_.php,Cel Damage,console,action,multi single,management-feature,planning,"Essentially, our strategic preplanning was stillborn. Every week, we had to revise our perceptions of what the game would really be, which frustrated our attempts to describe the game to prospective publishers at the beginning of 2001. Different staff members had different ideas of what our game would finally end up looking and playing like. Fortunately, once publishers and press played the game for themselves, the core of Cel Damages identity as a cartoon-based vehicular combat game became self-evident. (...) Our inexperience in console game development caught up with us about three months away from the end of the project. For the better part of two years, we had spent all of our efforts on developing in-game assets and gameplay. As our delivery date to EA came into focus, we realized that we still needed to get a fair bit of content underway, including a solid front-end interface, music, cutscenes, voice acting, foley sound, and sound effects. Once we had our budget in place, we scrambled to pull together a stack of contracted, out-of-house assets."
211,Mythic Entertainments Dark Age of Camelot,2002,https://www.gamasutra.com/view/feature/131418/postmortem_mythic_entertainments_.php,Dark Age of Camelot,pc,rpg,online,production,design,"The first major update we made to Camelots graphics engine to differentiate it from Spellbinder was to put in the rolling terrain system that makes the world so lifelike. We spent a long time making the outdoor areas of the game beautiful and well stocked with monster encounters. The ease with which we did this gave us a false sense of security when it came to developing our dungeon/city technology. These areas in the game required a large number of models and characters in a much smaller space than the outdoor terrain, so creating dungeons and cities proved to be a much more difficult job than we thought. Because we put off doing the technical designs for the interior spaces for so long, in the end we simply didnt get enough of them done. The game launched with only three capital cities (one per Realm) and about 15 dungeons."
212,Mythic Entertainments Dark Age of Camelot,2002,https://www.gamasutra.com/view/feature/131418/postmortem_mythic_entertainments_.php,Dark Age of Camelot,pc,rpg,online,management-people,communication,"As good as our communication with Camelots fan base was during the games design and beta periods, it began to suffer soon after the games release. The community simply grew too large to communicate with in the manner we had during beta, when we simply went out to Internet message boards and posted our thoughts and plans. With the game live, it was obvious we needed a much more coherent way to communicate with our fans, one that would not send them to numerous different fan sites to sift through literally thousands of messages. This situation grew into a big problem when players became extremely frustrated by what they perceived as a lack of communication from us. About six weeks after release, we realized that we needed to create our own web site to publish information about the game: release notes, plan files, server status, Realm War status, and many other little things that we knew but our players didnt. This web site, dubbed ""Camelot Herald"", launched the following week and so far has been a great success. Fans of the game can now go to one web site to get all the information about the game in one place and with no interference."
213,Mythic Entertainments Dark Age of Camelot,2002,https://www.gamasutra.com/view/feature/131418/postmortem_mythic_entertainments_.php,Dark Age of Camelot,pc,rpg,online,management-feature,budget,"In a great ""Why didnt they tell us about this in college?"" situation, we went into the final months of the project with no credit rating. Mythic Entertainment has been around for a long time, but we simply hadnt ever borrowed any money, and so we didnt have a credit history. This turned out to be a problem when we went out to lease our servers from Dell and were flatly denied. We pointed out that we had plenty of money in the bank, but to no avail. Dell simply wouldnt lease us the computers until we had a credit history. In the end, we were forced to purchase the servers outright from Dell, which obviously had a much greater impact on our bottom line."
214,Mythic Entertainments Dark Age of Camelot,2002,https://www.gamasutra.com/view/feature/131418/postmortem_mythic_entertainments_.php,Dark Age of Camelot,pc,rpg,online,business,marketing,"We really tried to avoid the customer service problems that are characteristic of some recently launched online games. One of the most important factors in keeping customer service reasonably effective was a smooth launch. Obviously, giving players fewer problems results in fewer calls to customer support. We did an excellent job with the launch - it went very smoothly. However, we could have better foreseen other parts of our customer service plans. First, we had a lot more players in the first week after Camelot went live than we ever could have forecast - 51,000 boxes were sold in the first four days alone. Our forecast numbers called for a much smaller number, and we hired our customer service staff based on this smaller number. Also, we put off creating customer service tools until much too late in the development cycle - some had yet to be developed when the game went live. These missing tools really hurt the customer service staff and added to the time it took to help each player with in-game problems. Eventually, wait times became much too long, and customer support as a whole suffered because of it. As I write, we still are trying to work ourselves out of this hole. (...) We went into the Camelot project with a lot of experience in developing software, but no real experience in creating a marketing plan. We got a lot of help with advertising from Abandon Entertainment, but there was no overall project plan. Basically, we took out ads in magazines that we thought were important and tried to keep on top of the Internet community. We didnt regularly issue press releases nor attempt to do a press tour or invite reporters to the Mythic offices to show off the game. Its difficult to gauge just how much this hurt us. Our focus on Internet marketing gave us strong support among fans of the genre, but our lack of commercial marketing kept our company profile low, and we never received much mainstream media coverage because of it. Fortunately, we made up for our slow start, and then some, by our successful presence at E3. Abandon funded, designed, and staffed a large booth for us at the show, complete with medieval motif and lots of giveaways."
215,Gas Powered Games Dungeon Siege,2002,https://www.gamasutra.com/view/feature/131321/postmortem_gas_powered_games_.php,Dungeon Siege,pc,action rpg,multi single,production,design," We spent too much time exploring dead ends and implementing unnecessary features. The games basic gameplay principles and aesthetic goals remained consistent from the beginning of the game to the very end. Unfortunately, although we were clear on how we wanted the game to look and feel, the technical requirements werent obvious. We were feeling optimistic, and anything and everything sounded like a good idea at the time. Design meetings felt like a shopping spree at the supermarket. We loaded up the cart and set out on a rather long road of trial-and-error punctuated with discovery."
216,Gas Powered Games Dungeon Siege,2002,https://www.gamasutra.com/view/feature/131321/postmortem_gas_powered_games_.php,Dungeon Siege,pc,action rpg,multi single,production,tools," We have created a powerful but ultimately complex engine. To our credit, the engine is stable, relatively well commented, and the source is consistent in terms of coding standards. However, the engine is sufficiently complex to make debugging and maintenance times often longer than expected. Complexity arose from several factors. First, the engine is large enough that although in the local sense things are documented, in the global sense there are implicit rules that are not. This unfortunately translated to a larger number of nonobvious bugs. The nonobvious bugs tended to be in the incorrect result category rather than in the critical program-failure category, which made them harder to track and slowed debug times. The implicit rules in the system made it more likely that a seemingly simple change might create an unwanted side effect down the road even if we did get correct behavior in the short term. The best examples of this problem were single-player changes that worked absolutely great but broke something in multiplayer or simply failed to work in multiplayer."
217,Gas Powered Games Dungeon Siege,2002,https://www.gamasutra.com/view/feature/131321/postmortem_gas_powered_games_.php,Dungeon Siege,pc,action rpg,multi single,management-people,delays," During this time, however, we werent just building a game, we were also building a company. We spent a considerable portion of our time simply learning how to be a company and learning how to make an RPG, something that we had never made before. Learning and ambition aside, our schedule first slipped considerably when three out of the six engineers left the company about a year into the project. They each had their own reasons and they didnt leave in unison, but the blow dealt to our planning put the engineering schedule into a permanent state of shock. After that first year, the turnover at the company was very low, and it certainly wasnt the only culprit regarding the slipping schedule. In order to make a competitive title that was original, we essentially had to invent new features that we would use to compete with existing games. This goal simply required a lot of research, which is inherently difficult to plan or schedule. "
218,Gas Powered Games Dungeon Siege,2002,https://www.gamasutra.com/view/feature/131321/postmortem_gas_powered_games_.php,Dungeon Siege,pc,action rpg,multi single,management-people,crunch-time," Our crunch was not your garden-variety crunch. Our crunch was not measured in months, but in years of long hours and few free weekends. It was a crunch of sheer astronomical proportions. The kind of crunch that will make you weak in the knees to think about and give you a thousand-yard stare when youre done with it. The kind of crunch that bites the top of the beer bottle off and spits it out at you before taking a drink. This kind of crunch can only take root in fertile soil, so we certainly are responsible for our own discomfort. Being the ambitious bunch that we are, not only did we want to make a great game, we wanted to make the best game we could afford, given the time and resources. This line of reasoning, taken to its limit, translated to most of us simply living for the game. Our ambition was so strong we neglected our bodies, our relationships, and our spiritual well-being. I know many of us did this past a point that most professionals would consider healthy, sane, or possibly ethical. The level of focus on our work was simply amazing, but the sheer self-neglect this fostered was simply irresponsible. We didnt crunch to make up for lost time, we crunched out of uncertainty. Since this was our first RPG, we crunched to implement all those extra features. And at some point we crunched because we could no longer remember doing anything else."
219,Gas Powered Games Dungeon Siege,2002,https://www.gamasutra.com/view/feature/131321/postmortem_gas_powered_games_.php,Dungeon Siege,pc,action rpg,multi single,management-feature,cutting-features," Extreme ambition can be empowering, but it can also bring much pain. A large portion of Gas Powered Games consists of extraordinarily ambitious people. Every-one has their own reasons, but collectively, we all want to win, and want to win badly. While this drive helped us persevere through some of the challenges we encountered during development, it also created some new ones. Our ambition translated into a number of painful symptoms such as feature creep, over-optimism, and a project scope that was ultimately larger than our ability. The problem was compounded by the fact that nobody on the team had really worked on an action RPG before. We looked at the leading brand RPG and said to ourselves, Hey, this is a fun genre. Lets make something like this except, much, much bigger, in 3D, without loading screens, and push the technology to its absolute breaking point! Clearly we couldnt have imagined the sheer amount of work required to build the kind of RPG that we wanted. And we wanted all kinds of interesting things: lip-synching, cooperative networked level editing, dual monitor support, wavelet terrain compression, deformable terrain, and many other gems. Some of these features ultimately didnt fit into the vision of our game, while others were simply extraneous. To our credit, we killed most of these before even starting development, but we were left with many others to be enthusiastic about for months."
220,Ubi Soft China Music Up Summer Rainbow,2002,https://www.gamasutra.com/view/feature/131370/postmortem_ubi_soft_chinas_music_.php,Music Up,pc,simulation,single,production,design," The original design for Music Up called for top-shelf animation that would compare favorably to the Japanese games the dominate the Chinese market. However, the work we received from the Hang Zhou studio didn’t meet our expectations and was rejected several times. They declared that they had done everything according to the contract and the quality was in line with what we had paid. If we wanted higher-level quality, we’d need to spend more money. They disagreed with our rejection of the work and claimed UBI owed extra payments for rejected art"
221,Ubi Soft China Music Up Summer Rainbow,2002,https://www.gamasutra.com/view/feature/131370/postmortem_ubi_soft_chinas_music_.php,Music Up,pc,simulation,single,management-feature,scope," Music Up marked the first time that UBI China’s designers made a game independently, and the structure was changed continuously. The designers were constantly developing new ideas and the engine studio therefore always needed to change to accommodate the growing design. This, of course, led to increasing instability. More seriously, market demands meant that the game had to be complete for summer of 2002; time had run out for such changes but the designers still couldn’t help themselves from making more improvements."
222,Ubi Soft China Music Up Summer Rainbow,2002,https://www.gamasutra.com/view/feature/131370/postmortem_ubi_soft_chinas_music_.php,Music Up,pc,simulation,single,management-feature,budget," When I came onboard in December of 2001, I noticed that 35 percent of the total budget had been spent with only a 3 minutes demo to show for it. The product needed to ship in the summer of 2002 to catch the re-broadcast of the original series in the major cities and to avoid the strong competition from Sakura III. It had also become clear that we would be seeing an additional investment in the project. A confidential sales report suggested that no single-player PC game would be sold well over the next couple of years in China, even Sakura II. Massively multiplayer games are expected to drive the market, surpassing even the popularity of pirated games."
223,Ubi Soft China Music Up Summer Rainbow,2002,https://www.gamasutra.com/view/feature/131370/postmortem_ubi_soft_chinas_music_.php,Music Up,pc,simulation,single,management-feature,planning," Obtaining the rights to Music Up consumed 25 percent of the total budget -- which conflicted with our philosophy of cutting costs as much as possible. If the money could have been spent on the engine, we would have realized more long-term benefits. The marketing effect of building the game around the property was minimal, as the airing of the series didn’t favor of the games development and marketing at all. In return, it became a serious constrain of the production. Most seriously, the music we bought with the copyright was not fully owned by the show’s film producer. The problem wasn’t found out until the production went to the final period. As a result, some music that the game designers most wanted was not available for use in the game. You can guess how disappointed the team was when we got the news."
224,Biowares Neverwinter Nights,2002,https://www.gamasutra.com/view/feature/131327/postmortem_biowares_neverwinter_.php,Neverwinter Nights,pc,rpg,multi single,production,design,"The Dungeons & Dragons rules system in NWN was implemented according to a priority system established by the leads on the project. We failed to take into account how some minor addition to the rules system could have far-reaching effects throughout the game. This forced the designers through an aggressive series of revisions to the areas and characters in the official campaign story. In the end, we were able to tune the game appropriately, but we put the level designers, scripters, and writers through a very trying period."
225,Biowares Neverwinter Nights,2002,https://www.gamasutra.com/view/feature/131327/postmortem_biowares_neverwinter_.php,Neverwinter Nights,pc,rpg,multi single,production,documentation,"Development of our new game engine was an extremely long process; as a result, some of the initial prototyping lessons were forgotten or inadequately documented. In some cases, we didnt thoroughly review our original goals when implementing features later in the project."
226,Biowares Neverwinter Nights,2002,https://www.gamasutra.com/view/feature/131327/postmortem_biowares_neverwinter_.php,Neverwinter Nights,pc,rpg,multi single,production,tools,"The delay in rules implementation caused a ripple effect with the tool development. Furthermore, we reworked the tool interface late in the project to make it more approachable to nontechnical developers. This rework had a significant effect on the ability of our designers to finish off content, since they were using the exact same tools to fix bugs and finish up the games development."
227,Biowares Neverwinter Nights,2002,https://www.gamasutra.com/view/feature/131327/postmortem_biowares_neverwinter_.php,Neverwinter Nights,pc,rpg,multi single,production,technical,"To ship a game that takes five years to develop takes a fair amount of intestinal fortitude. You really cant second-guess your decisions or youll have no chance of ever completing the project, so the leads of the project agonized over some late feature additions to Neverwinter Nights. Given that the game was in development for such a long period, we were all concerned it might look dated by release. To combat this issue we laid out a plan to add a number of high-impact but relatively easy-toimplement features late in the development cycle to improve the games visual quality. These additions resulted in constant concern among the artists who had to generate the new art required to support the late-added technologies. In the end, it all worked out because of large personal efforts by many team members."
228,Biowares Neverwinter Nights,2002,https://www.gamasutra.com/view/feature/131327/postmortem_biowares_neverwinter_.php,Neverwinter Nights,pc,rpg,multi single,production,prototyping,"A large RPG such as Baldurs Gate or Neverwinter Nights requires a similarly large amount of art, design, and programming resources. One of the problems that we encountered was what to do while the new game engine technology was being developed. Due to our schedule, we needed to start working on art and design assets right from the beginning of the project. The problem was that it took the programming team three and a half years to complete the game systems. Thus the art and design teams had to make assets based on technical specifications derived from early prototypes. As the game progressed, many of these specifications changed, requiring some assets to be rebuilt, or else workarounds had to be adapted in the game code to allow for old and newer assets to work together. In an ideal world, the length of the project would have been longer, with the programming done at the beginning with only a skeleton team of artists and designers to provide prototypes. Full production would have then gotten underway once the engine was complete. Unfortunately, this was not feasible due to schedule limitations and interproject scheduling pressures. We have found that when we are reusing or building on an existing engine framework, art and design can be completed with little risk of having to rework resources - problems like we encountered on NWN seem to occur mainly when we are creating a new engine from scratch (we encountered similar issues during the creation of Baldurs Gate, for example, but not during the various BG derivatives), and we are keeping this in mind as we schedule new projects in the future. (...) Even though we put a lot of effort into prototyping important game systems, on some occasions we completed what we thought were full-featured prototypes of major game systems only to find out later that they didnt address a number of important issues. In our haste to get into full production on Neverwinter Nights, we didnt properly analyze all of the questions that needed to be addressed by the prototypes. This resulted in spending time late in the development cycle sorting out problems with key systems of the game. (...) As with any new-engine game, there was too little time available to prototype gameplay. Our prototypes focused instead on technology and the individual features of the game. While this kind of prototyping was important, it would have been very useful to have early feedback on how the game played, particularly with regard to the interface and story line. Because NWN was a rule-based game, and rules implementation was at the end of the schedule, we were only able to test actual gameplay near the end of the development cycle. Due to our inability to prototype a number of design components, we ended up reworking them. As a result, we plan to prototype story lines in future games earlier in the development cycle. One of the ways we plan to do this is to reuse the BioWare Aurora Toolset as a rapid prototyping tool for story design, even for games with radically different interfaces and rules systems."
229,Biowares Neverwinter Nights,2002,https://www.gamasutra.com/view/feature/131327/postmortem_biowares_neverwinter_.php,Neverwinter Nights,pc,rpg,multi single,management-feature,cutting-features,"From the start, there was a strong desire to make NWN a unique game distinct from the Baldurs Gate experience. While this did lead to the development of new systems that were better than those of Baldurs Gate, it also led to an excessive amount of time spent on design and prototyping of features that ultimately could not be implemented. Wed often sink a considerable amount of research into creating an innovative system, only to fall back on a similar system that worked better in the earlier Infinity engine."
230,Biowares Neverwinter Nights,2002,https://www.gamasutra.com/view/feature/131327/postmortem_biowares_neverwinter_.php,Neverwinter Nights,pc,rpg,multi single,management-feature,planning,"A side effect of the attentionNeverwinter Nights received in the years prior to its release was that we built a number of demos for trade shows and press visits, more than typically occur for most major releases. We probably announced the game too early in its development cycle, and it took a long time to complete the game with the promised feature set. Each time we built a demo there was an impact on the team in terms of both focus as well as schedule. We felt the demos were successful overall and that the incremental PR received from these demos was helpful to the games market success, but each of these demos consumed considerable team resources. In spite of this impact, the team recognized that demos are a necessary and vital part of the development process - however, they should be part of the schedule and planned accordingly from the start. In our future projects, we are booking more time for demos in our schedules, since they always seem to take up more time than originally anticipated."
231,Factor 5s Star Wars Rogue Leader Rogue Squadron II,2002,https://www.gamasutra.com/view/feature/131402/postmortem_factor_5s_star_wars_.php,Star Wars Rogue Leader Rogue Squadron II,console,action shooter,single,production,tools," Some data conversion runs took forever. Since everybody in the team to some extent depended on the data conversion, the impact of long data conversion runs multiplied quickly. There were multiple reasons for the slow speed, most of which can be traced back to two fundamental problems. First, we did not implement a global-caching system for converted data. Because of this, multiple people would convert the exact same data on their local hard drives while the converted data was actually already distributed around in the company. For some data types, such as textures and shadow maps, we later introduced caches on the server, but a more global scheme would have helped greatly. (...)  L3D, our in-house level editor, had been around for many years when we started Star Wars: Rogue Leader. The good thing about this was that the level designers knew the tool and it had gone through a lot of iterations of improvements during the development of Star Wars: Rogue Squadron and Star Wars: Battle for Naboo. But we also knew that it wasnt exactly designed to deal with data sizes as they regularly pop up with this new generation of consoles. We simply didnt have the time to program a new tool, since level designers had to start their work early. We just hoped for the best. Some things got very slow as things got very large in terms of memory."
232,Factor 5s Star Wars Rogue Leader Rogue Squadron II,2002,https://www.gamasutra.com/view/feature/131402/postmortem_factor_5s_star_wars_.php,Star Wars Rogue Leader Rogue Squadron II,console,action shooter,single,production,technical," Little things can cause big problems when time is as much a factor as it was with this project. The method we used to add visual effects, like engine glows to the in-game craft models, introduced a high dependency between the code versions used to edit new levels and preview models, and the model data itself. A simple change to the model within Maya could trigger engine glow to appear in the completely wrong spot. This made it close to impossible for the artists to judge whether they actually did something wrong while exporting the data or whether this was just one of the cases where everything was actually in order and only the code version needed an update. This situation was truly counterproductive in the last weeks of production."
233,Factor 5s Star Wars Rogue Leader Rogue Squadron II,2002,https://www.gamasutra.com/view/feature/131402/postmortem_factor_5s_star_wars_.php,Star Wars Rogue Leader Rogue Squadron II,console,action shooter,single,management-people,communication," While we had pretty good turnaround times getting completely new sound effects into the game - as much as in-game material was concerned - the data path and the way the music was linked into the game did not allow for any fast preview cycles for streamed or MIDI-based pieces of music. Due to time constraints, we had been unable to implement tools that would have allowed adding or changing pieces of music without rebuilding the program code. Furthermore, most pieces of music are triggered from scripts designed by level designers, which meant we always had to coordinate three people in the process: a programmer, a level designer, and the musician. In the end we coped with the problem to some extent by simply setting up a schedule defining when a new music update would be done. The musician was able to audit his score without the integration into the game on a prototyping tool at any point in time and with minimal turnaround times. The schedule made the problem somewhat manageable for all parties involved, but it was still a far cry from being a good working environment."
234,Factor 5s Star Wars Rogue Leader Rogue Squadron II,2002,https://www.gamasutra.com/view/feature/131402/postmortem_factor_5s_star_wars_.php,Star Wars Rogue Leader Rogue Squadron II,console,action shooter,single,management-feature,planning," As we did in our earlier titles, we wanted to avoid using FMV for cutscenes, to avoid breaking the continuity and style of the game. The playback of these animations was handled quite elegantly by our standard run-time animation system, which we used for all types of animation throughout the game. The internal structure of this system closely resembles Mayas animation system, which made it very flexible and straightforward to control from within that tool. It also was really easy to use at run time. This is where the fun ended, however, and things started to get ugly. On the programming side, we had to spend a lot of time organizing the data flow. We wanted to make the amount of data to be loaded or kept in memory for cutscenes minimal, which meant recycling data that was present in the level data currently loaded. This sounds easier - and we fell for it, too - as it is actually was. However, our main problem was that we werent able to begin implementation of the cutscene playback until pretty late into the project, and the programmers responsible for the task were confronted with a data structure that was pretty much set in stone. This is the one area in which our planning at the beginning of the project did not quite work out."
235,Pixelogics The Italian Job,2002,https://www.gamasutra.com/view/feature/131376/postmortem_pixelogics_the_.php,The Italian Job,console pc,racing,multi single,production,technical," There is nothing worse than having to wait for a game to load, especially if the mission only lasts a couple of minutes. Our loading system before the fast loader involved having a separate executable for each mission, which had to be loaded in and executed. Once executed, the executable file had to initialise all of its variables and load all of its graphic and sound data, this proved to take too long and something had to be done to reduce the load times. The basics of the fast loading to be developed involved taking a snapshot of the memory contents once a stage had been loaded with the graphic and sound data initialised, this snapshot could then be loaded at any time and the stage would effectively be restarted. At first, this method was thought to be too complex for a simple problem, and it did not solve the problem of having separate executables for the front-end and every single stage in the game."
236,Pixelogics The Italian Job,2002,https://www.gamasutra.com/view/feature/131376/postmortem_pixelogics_the_.php,The Italian Job,console pc,racing,multi single,production,bugs," The sound code and how we added sound from our previous projects enabled any member of the team to add sound to collisions, objects, vehicles, and levels quickly and easily, however on TIJ the code structure of objects differed slightly so we lost some of the flexibility that our original sound functions gave us. More of our sound playing functions were lost as new technologies were coded such as car handling, rigid body physics, and collision code. While implementing new sound code and adding the actual sound effects to the game, problems began to occur due to lack of sound resources available, because of this some of the engines sounds ended up looping very badly. The main music tracks and basic SFX were outsourced at the start of the project but there was never a review of the ongoing work and this ended up with nobody really liking the results."
237,Pixelogics The Italian Job,2002,https://www.gamasutra.com/view/feature/131376/postmortem_pixelogics_the_.php,The Italian Job,console pc,racing,multi single,management-people,team," During the final stages, just two weeks before submitting the gold master, Robin one of our programmers had been working over the weekend tying up some loose ends. He left the office, got into his car and started on his way home, meanwhile some delinquent joyriders were screeching around a corner so fast, they had veered onto the opposite side of the road resulting in a head-on collision with Rob. The rest of the team found out about the accident on the following Monday morning, Rob was in hospital, strapped down so he couldnt move. The news from his mother was, he could have seriously damaged his spinal column and the fear of Rob being paralysed was in the air, everyone was in anticipation of the X-ray results. A call was received later that day, again from his mother, the doctors said he was in the clear but he wasnt allowed to move and had to stay in hospital until further notice, a sigh of relief was heard from everyone in the office. Luckily, after a few days he soon started to recover and was sent home to rest, we sent him cards and joked about ideas of how we considered transporting his PC from the office to the hospital and rig it so he could look at a screen and code while still being laid on his back -- we wouldnt really do a thing like that."
238,Pixelogics The Italian Job,2002,https://www.gamasutra.com/view/feature/131376/postmortem_pixelogics_the_.php,The Italian Job,console pc,racing,multi single,management-feature,scope," The inclusion FMV was discussed at the design stage ofTIJ, we planned to use our in-house scripting language known as the Mission Builder which allows us to prototype and create game content quickly without the need of programmers, so designers could create short scenes using the in-game engine and blend it to the corresponding missions for a seamless gaming experience. However, the Mission Builder was never designed to produce complex cinematic scenes and new functionality had to be added to achieve this. The process of creating in game cut scenes could be quite crude since there was a limited amount of feed-back to the designer and to create a short sequence of five seconds could take up to two days which then would have to be constantly tweaked. This involved creating paths for cameras and objects within 3DS Max, then exporting these positions to the Mission Builder where speeds and simple camera behaviors could be scripted to make the scene work. Unfortunately, the designer could not see the total outcome of their work until the stage/mission was compiled and ran."
239,Prestos Whacked!,2002,https://www.gamasutra.com/view/feature/131337/postmortem_prestos_whacked.php,Whacked,console,action,multi single,production,design," The interface in Whacked was unloved. No one really wanted to design it, build it, or program it. Perhaps it was because we were focusing on what we considered more important details like networking or level construction but in the end, it was a colossal mess. The first most serious mistake was that no one seemed to believe me when I told them how much work it was going to take. I can still remember vividly the chaos on Descent: Freespace caused by the interface system. And when Whacked got its online extension, I pushed to hire an interface programmer to take the workload but I was repeatedly told that we could not afford it. So I took the programming of the main interface on my shoulders. Thankfully, our AI programmer Andy Schatz was kind enough to take on the larger online interface. (...)  This was my second experience with having audio created outside of the company and I have come to the same conclusions. First of all, external music usually works fine especially if its just a looping WAV file as ours was. However, sound effects are extremely difficult to get right if the audio person is not in-house experiencing the creation of the title firsthand. Most of the sound effects we received from our external source were not correct for one reason or another. Whether it was something simple (yet still sloppy) such as the wrong format or something more serious like a sound having the wrong length for its use, the problems seemed endless. The lack of communication was the main cause as he would receive incomplete instructions for a given sound and then just fill in the gaps himself instead of asking for clarifications. It was a breakdown on both sides. Our contact producer should have made him come in at least once or twice a week so that he knew the levels and objects he was creating effects for. And the audio designer should have been able to identify these shortcomings in the instructions and request better details. If the producer asks for a sound to go along with the swooshing pendulum blades, you should ask how long the duration of one pendulum swing is."
240,Prestos Whacked!,2002,https://www.gamasutra.com/view/feature/131337/postmortem_prestos_whacked.php,Whacked,console,action,multi single,management-people,delays," The scheduling of resources was an endless cause of problems. Even ignoring the loss of two conceptual artists, a fundamental problem existed in the scheduling of resource delivery. The design department was always given permission to slip well beyond their internal deliverables because we had an its done when its done attitude for design -- You cannot force good ideas.For instance, we needed eight characters for Whacked and in order to help design direction we chose to use the seven deadly sins as the foundation for the characters, with the eighth being pure evil. For the sins that obviously worked into a computer game such as lust and wrath, the ideas flowed freely and we quickly found our favorites. However, after months of character design we were pretty stuck on pride and most of all envy. How do you create a likable character whose primary characteristic is that he wants to be someone else? I understand the difficulties of this especially since we were trying to create a group of licensable characters. (We had dreams of Whacked Kart and Toofs Big Day.) However, its done when its done is a luxury that we really could not afford."
241,Prestos Whacked!,2002,https://www.gamasutra.com/view/feature/131337/postmortem_prestos_whacked.php,Whacked,console,action,multi single,management-people,team," As many of you already know, Presto Studios is no more. The exact details of which can be found in the December Game Developer postmortem on Presto, but obviously the closing indicates that there were internal issues. One of those issues manifested itself in the loss of two of our three creative designers half way through the project. Their loss to another San Diego company was quite painful for Presto and the Whacked team in general. The only remaining designer was the creative director of the company, Phil Saunders. Phil is an amazing designer at the top of his craft; however, the work that remained was far more than he should have been asked to produce. This put us in a difficult situation. On one hand, the design team had always been in control over the production of resources, but now the sole designer did not have time to oversee it all. We could have handed more autonomous control to the production staff but that would often go against Phils artistic vision of the game. I completely appreciate his passion because I shared it for the Sprint engine; however, in this case it caused bottlenecks at the highest level of production, which in turn would slam the bottom level at milestone deliveries."
242,Prestos Whacked!,2002,https://www.gamasutra.com/view/feature/131337/postmortem_prestos_whacked.php,Whacked,console,action,multi single,management-feature,feature-creep," The first pitch of Whacked to Microsoft included a Winsock networking system that I wrote in about two weeks. It was a basic LAN implementation that showed networked Whacked could be done by Presto. Microsoft decided that they did not want it included in the final product. I was disappointed but they were the publisher and it was their choice. However, they returned in November 2001 to ask for not just LAN but full online support. This was about six months before our original ship date in the spring of 2002. Max and I saw this as not just an opportunity for Presto to ship a launch Live title but also a personal test of ourselves. We snapped up the chance despite the difficulty the extension would cause. Our launch date would shift to October 31 and we would be held to that like no other launch date we had ever experienced. As our product manager Thomas Zucotti put it, We broke ourselves into jail."
243,Games Kitchens Wireless Pets,2002,https://www.gamasutra.com/view/feature/131333/postmortem_games_kitchens_.php,Wireless Pets,pc,simulation,online single,production,design," One of my personal disappointments about the project is the lack of any real multi-player mode. Since everyone is playing on the same server (or more accurately, three servers), the system is set up nicely for some sort of user-user interaction. However, we had a limited timescale and budget, and we were pushing the platform as it was, so we shelved the concepts we had. The only part of the game that is in any way multi-player is the pet shows. They are very simple though; users choose to enter their pet in the shows, and at midnight on Sunday all the entered pets are compared using a weighted total of all their stats. The winner, and those within a certain number of points of the winner, get extra in-game money as prizes. Although it is multi-player, it doesnt feature any user-user interaction."
244,Games Kitchens Wireless Pets,2002,https://www.gamasutra.com/view/feature/131333/postmortem_games_kitchens_.php,Wireless Pets,pc,simulation,online single,production,tools," One of the features of operators implementing their billing systems was that we sometimes needed to change the code so that it would register billing points and so on. As new devices came out, the code would sometimes need changed. Annoyingly, future releases of UNITY were not always backwardly compatible, so on occasion we needed to change the code as the platform changed. The data was also designed to be flexible, so we could add new pets and objects in over time, which we did, including a promotional pet for the Big Brother game show."
245,Games Kitchens Wireless Pets,2002,https://www.gamasutra.com/view/feature/131333/postmortem_games_kitchens_.php,Wireless Pets,pc,simulation,online single,production,testing," Testing was something that really should have gone better. At the time, we had no way to load test the WAP version of the game. So, when the game was launched on the first operator, they load tested the game on Friday, simulating 10,000 users accessing it at once. It fell over, and whats more, the game was due to launch on Monday. Monday couldnt be pushed back as the operator had already done loads of marketing to users. Let me tell you, that was one busy weekend, but we got it done. Even the tiniest flaw adds up to big problems when there are so many users accessing the game. Now, DB have load testing tools and also better guidelines on garbage collection and preventing memory leaks. In fact, these were ready for the SMS release of the game, and we had no problems with the launch of that."
246,Games Kitchens Wireless Pets,2002,https://www.gamasutra.com/view/feature/131333/postmortem_games_kitchens_.php,Wireless Pets,pc,simulation,online single,management-people,communication," One feature of the contract is that The Games Kitchen would retain the Wireless Pets IP. To begin with, DB used the characters, logos and other materials on a number of occasions without our permission or approval. This was the cause of constant consternation, and some heated emails were exchanged. Now DB has an approval loop system in place and know where they stand when using external IP. Our disagreement with DB at the time meant that they had their system in place before they worked with IP belonging to companies who go around packing fully loaded lawyers and who arent afraid to use them."
247,Games Kitchens Wireless Pets,2002,https://www.gamasutra.com/view/feature/131333/postmortem_games_kitchens_.php,Wireless Pets,pc,simulation,online single,management-feature,feature-creep," The amount of text I had to write for this game almost killed me. There are 500 unique diary entries for each of the 6 pets in the WAP version, and 350 unique diary entries for all six pets (featuring four new pets) in the SMS game. It was insane; 50 different ways of saying Im hungry for ten different animals, each in a way that conveys a bit of personality. One solution to this would be dynamic text generation. However, when the game is translated into many languages, this is very problematic. English is fine, but other languages have new and unusual forms of sentence construction to torment you with, not to mention gender specific nouns, verbs and adjectives (not necessarily the same gender in every language). The programmers had lots to do; as well as producing the game, I was doing the art and text, and theres virtually no art. To get it out the door ASAP, I took it upon myself to complete what I did not realise would be such a monumental task."
248,Eutechnyx Big Mutha Truckers,2003,https://www.gamasutra.com/view/feature/131177/postmortem_eutechnyx_big_mutha_.php?page=3,Big Mutha Truckers,console mobile pc,racing,single,production,design," One of the main problems with Big Mutha Truckers was the fact that our content -- and allocation of staff to its development -- wasnt as efficiently distributed as it could have been. There are many spectacular, one-time events within the game which took a lot of resources to implement, but theyre not obvious and often difficult to find, so players dont often see them. Our design intention was to include a lot of replay value, so we deliberately had some elements of gameplay that required the player to do a little more work to find them or replay the game and take a different route to uncover them. For example, at one point players are given the opportunity to accept a mission that involves destroying a large suspension bridge. However, to qualify, they must be in a certain location on a certain date, having completed a certain number of missions prior to this. In other words, the criteria required to qualify to take part in this mission - and see the outcome - were far too complex. As a result, there are a number of events that most players will never encounter. (...)  Throughout the games development we discussed the primary focus of the game -- was it about trading or driving? How much of a challenge should there be in getting from city to city? Was finding the best price for your load the challenge, or did it come from on-road attacks? Were we aiming at driving gamers or strategy gamers? Our intention was always to make the games primary challenge come from the trading side of the game, with the on-road action being secondary. The idea was that players would be rewarded for making astute purchasing decisions and finding the best place to make a profit, as we felt this added an additional element of depth to the game and differentiated it from other driving games. Because the economy was dynamic, we felt this made the game more interesting and offered much greater replay value, as no two games would be identical, especially when compared to an arcade game where players can learn the patterns of the enemies. However, when we demonstrated the game to people, they often would forget what they had just bought before leaving town and why getting $100 per unit more on their truckload of cattle was such a good thing. There were more interested in outrunning the police en route to their destination. Unfortunately, we planned a lot of on-road events (such as UFO abductions, redneck feuds and more) but didnt implement them, as we felt the trading to be the differentiating factor in Big Mutha Truckers and didnt want to dilute that. It seems that we were wrong and the game would probably have benefited from the occasional alien abduction."
249,Eutechnyx Big Mutha Truckers,2003,https://www.gamasutra.com/view/feature/131177/postmortem_eutechnyx_big_mutha_.php?page=3,Big Mutha Truckers,console mobile pc,racing,single,production,documentation," The game design document for Big Mutha Truckers was excessively large. It had to cover all areas of the game, such as the gameplay mechanics of the driving sections, the trading and background economic model of the world, win/lose scenarios, special mission scenarios, character profiles, and in-depth descriptions of all of the games locations. Due to the sheer volume of descriptive text required, the design was written much more like a screenplay or game bible, and concentrated more on characters, the environments and the various scenarios within the game. The design was also written as an in-house marketing tool, to help sell the concepts. As a result, instead of concentrating on the hows and whys of the games production, it was instead focused on the whos and the wheres. This, combined with the fact that the information relevant to a particular section of game was not always contained in one area, but often spread out over the entire document, meant that staff not only had to extract the tasks from the document, but also that, because of its size, they found it difficult to take the time to fully read the document."
250,Eutechnyx Big Mutha Truckers,2003,https://www.gamasutra.com/view/feature/131177/postmortem_eutechnyx_big_mutha_.php?page=3,Big Mutha Truckers,console mobile pc,racing,single,management-people,team," At Eutechnyx we often hire graduates straight from university. Although they rarely have any commercial programming experience, we do this because not only are they highly qualified academically, they also dont bring baggage with them from previous development studios and havent picked up any bad habits. Although this means we can shape a new programmer to fit our needs and work patterns, it also means that they require more help and supervision during the early stages of their tenure at Eutechnyx. The start of the development of Big Mutha Truckers coincided with the start of the current generation of consoles and was also a time of company expansion, so Eutechnyx had just hired a number of people who were new to the industry. Unfortunately, at the start of the project the experienced programmers were working on the technology that would be required to power Big Mutha Truckers - as it was our first PS2/Xbox title - and the less-experienced programmers were assigned the task of implementing this technology and adding content - in other words, coding the game content itself"
251,Eutechnyx Big Mutha Truckers,2003,https://www.gamasutra.com/view/feature/131177/postmortem_eutechnyx_big_mutha_.php?page=3,Big Mutha Truckers,console mobile pc,racing,single,management-feature,cutting-features," Although wed never done it before, we thought that producing lip-synching would be a much easier task than it turned out to be, and as we couldnt get it working in time, it had to be dropped. We eventually cracked lip-synching for another project that was being developed concurrently with Big Mutha Truckers, but at that point in the development schedule it simply wasnt possible to implement and deliver it in the game."
252,Postmortem: Defense of the Ancients,2003,https://www.gamasutra.com/view/feature/132358/postmortem_defense_of_the_ancients.php,DoTA,pc,rpg strategy,online single,production,design,"The average length of a game of DotA was about 60 minutes, but games could last as long as 2 hours or more. This unpredictability made it extremely difficult for players to budget enough time to play an entire session, and just one player leaving or dropping from the game resulted in an unfair advantage for the team with the greater number of players. The unpredictable length of the game also hindered DotA from advancing as a competitive eSport. Tournaments are difficult to schedule if a round could last anywhere from 30 minutes to two hours, and since the game isnt quite as actionpacked as a first-person shooter, many people found it confusing to follow or boring to watch."
253,Postmortem: Defense of the Ancients,2003,https://www.gamasutra.com/view/feature/132358/postmortem_defense_of_the_ancients.php,DoTA,pc,rpg strategy,online single,production,tools,"Existing only as a modification of another game and lacking network support meant that whenever a new version of DotA was released, the entire playerbase had to somehow be notified of the change, and then provided with a copy of the latest release. New map versions were hosted on a website, but this became increasingly difficult to manage due to bandwidth consumption increasing as the number of active players grew. Players could also download from other players (joining a game hosted on Battle.net would automatically download the map if the player didnt have it), but game hosts were often reluctant to allow players to download from them. Many simply assumed these players werent good at the game because they hadnt already obtained the latest version from the official sources. (...) Between the lack of multiplayer support and matchmaking, the depth of the game content, and the difficulty of distribution and installation - it was very difficult for a new player to get into the game for the first time. If the user doesnt have Warcraft III installed, they had to first install and patchWarcraft III and The Frozen Throne expansion set to the latest version, then download the map file and place it into the correct folder, and finally get online and try to locate a game. Due to this unique combination of factors, most players couldnt even access the game unless they knew someone who could show them the ropes. The widespread success of DotA is entirely due to word of mouth and the social nature of the game. Once a new player actually installed Warcraft III, downloaded the map file, moved it to the appropriate folder, and successfully joined a game, a whole new set of challenges was presented. Because there was no game tutorial available to give beginner users some introductory guidance, players simply had to join a game(potentially with people who had been playing for years) and play. With more than 60 heroes available, it was difficult to know how to use your abilities and which abilities your opponents could use against you. Given the complex item and recipe system, new players didnt know which items to buy and in what order. Lastly, because new players typically didnt play very well andDotA is a highly competitive team game, more experienced allied players could be very critical of them. This often resulted in new or inexperienced players being goaded into quitting the game entirely -- never to return."
254,Postmortem: Defense of the Ancients,2003,https://www.gamasutra.com/view/feature/132358/postmortem_defense_of_the_ancients.php,DoTA,pc,rpg strategy,online single,management-people,team,"While the small size of the development team was advantageous in many situations, it also posed some unique challenges that many games arent faced with. There werent enough available hours between the team members to properly test each new release, so versions were sometimes released with bugs that needed to be patched immediately."
255,Stardocks Galactic Civilizations,2003,https://www.gamasutra.com/view/feature/131271/postmortem_stardocks_galactic_.php,Galactic Civilizations,pc,strategy,single,production,design," During development, we debated whether to have the game objects be displayed at an angle, or from a top-down vantage point. We ultimately went with a top-down vantage point, but one side effect of that decision was that all of the ships in Galactic Civilizations, which were modeled as 3D objects, effectively became 2D objects. In retrospect, we should have had used an angled point of view in the game, so the beauty of the ships would have been more apparent. When you play Galactic Civilizations and see flat-looking ships, youll know the irony that every single one of those ships is fully rendered in three dimensions. This was my decision and I wish I could take it back now. (...)  I actually vetoed this feature. Our development team wanted a hyperlink system for looking at all of the technologies in the game. But as a long time Civilization player, it always bugged me that in these games you could magically know how to get to a certain technology, so I axed this request during development. I was wrong. I still dont like that feature, but it should be up to the individual player whether to view the technology tree or play it blindly. I wont use the feature, but I shouldnt try to prevent others from doing it if they want. So well be adding this feature into an update now."
256,Stardocks Galactic Civilizations,2003,https://www.gamasutra.com/view/feature/131271/postmortem_stardocks_galactic_.php,Galactic Civilizations,pc,strategy,single,management-people,communication," We planned to contract out the user manual to a third party, but we never seemed to get off the ground with that project. I had written an outline of the manual some months before the game was to be released. In early December, Strategy First informed us that the manual needed to be finished within two weeks. At the time, the release date was scheduled for the end of February, so I hadnt expected such an early date on the manual. I figured either a contractor or I would write it during December and January. So instead of having two months to really flesh it out, it was written in two weeks. As a result, its far less detailed than I would have liked. When the game was delayed until March, I was surprised to discover that the manual, as late as early February, had not yet gone to manufacturing. This was just a series of miscommunications between us and our publisher. Our publisher didnt realize that we wanted more time to work on the manual. The manual provides a decent overview of the game, but I wanted to put in more details about how economics, influence, morale, and industry factor into the game so that users could see the relationship between them."
257,Stardocks Galactic Civilizations,2003,https://www.gamasutra.com/view/feature/131271/postmortem_stardocks_galactic_.php,Galactic Civilizations,pc,strategy,single,management-people,team," As a project manager, I tend to be hands-off. But early on in the development of the game, that approach nearly proved disastrous. Games need a single vision that is precisely executed. On our non-game projects like Object Desktop, I tend to just guide the development teams towards a general goal and let them go and add things they think are necessary. But in a game, that can be a real detriment. Early on, we had features sneak into builds that were buggy or wrecked the game balance. For instance, a user on our forum would suggest a feature and one of our developers would throw that feature in without telling anyone on our team, and consequently no one else would know to test that feature - including QA. Fortunately we had an open beta and we quickly learned the error of our ways. But quite a bit of energy early on was spent killing features or fixing bugs in unplanned features. So we switched to a much more disciplined system."
258,Stardocks Galactic Civilizations,2003,https://www.gamasutra.com/view/feature/131271/postmortem_stardocks_galactic_.php,Galactic Civilizations,pc,strategy,single,management-feature,multiple-projects," If you asked anyone who boughtGalactic Civilizations during the first week to name the top thing didnt like about it, it probably would have been updating the game via Stardock Central. In our original plan, Galactic Civilizations was to ship in February, followed a month later by our BonusPak -- a giant, single file containing new features and fixes for any significant bugs that managed to get by us. A month after that, in late April, we had planned release Stardock Central as a way for us to provide updates to players. But when we agreed to delay the game until the end of March, that made its release temptingly close to the Stardock Central release. We began contemplating a simultaneous release of Galactic Civilizations and Stardock Central, which would just require moving up the Stardock Central release date by a month. We were tempted by the thought of launching with impressive software updating technology that also included chat and discussion forums. Unfortunately, when the game shipped on March 26, Stardock Central wasnt quite ready. Stardock Central not only had to deal with people downloading the full 500 megabyte game from the Internet, it also had to deal with people who bought the game at retail. It had to recognize what was already installed and update only what was new. It had to handle myriad date/time formats from around the world. And on top of that, we didnt take into consideration how many inexperienced computer users wed be dealing with."
259,Blue Tongue Softwares Jurassic Park: Operation Genesis,2003,https://www.gamasutra.com/view/feature/131287/postmortem_blue_tongue_softwares_.php,Jurassic Park: Operation Genesis,console pc,simulation,single,production,tools,"Close to the end of the project, we found that it was possible to speed up compilations for the PC build significantly using Microsofts new .NET compiler. However, we deemed the risk of switching tools at that late stage too high, and stayed with the tools we were using. (...) From the beginning, the architecture and design of Toshi were kept very open. Some of the features were not ultimately used in Operation Genesis. And, in the later stages of the project, we re-engineered parts of the engine to increase its performance and improve memory usage. (...) There is a conflict between designing general, open-end technologies that can be reused in future projects, and building specialized technology for the current project. As Toshi was a new engine, there was always a tendency to give it more features, and make it the best. While this did not create any serious problems for Operation Genesis (apart from needing to re-work some parts), it may be a good idea to use prototyping even more in future projects, starting with simple versions, and adding more functionality as the requirements become finalized."
260,Blue Tongue Softwares Jurassic Park: Operation Genesis,2003,https://www.gamasutra.com/view/feature/131287/postmortem_blue_tongue_softwares_.php,Jurassic Park: Operation Genesis,console pc,simulation,single,production,technical,"While its a good engineering tool, prototyping isnt really compatible with the notion of press releases. As mentioned earlier, prototypes and placeholders were used extensively early in development. As we were developing Toshi concurrently withOperation Genesis, we organized the schedule to minimize bottlenecks and to keep development in parallel. However, this plan meant that enhancements to rendering and other aesthetic boosts were often placed at a lower The Blue Tongue team. priority. (There were some bursts of aesthetic work for events such as the E3 Xbox demo.) This meant that there were times when the game was not looking at good as it could, even though it may have only taken a day or two to make the aesthetic tweaks. As a result, we faced some criticism of rendering quality (and draw distance) based on some early incarnations of our rendering components. (...) Another challenge was dealing with the different capabilities and limitations of each platform. The differences that affected us the most were the different graphical capabilities and the different amounts of memory in each platform. While we wanted to keep the three versions as similar as possible, we also wanted to use each platform to its full potential. For example, the virtually limitless amounts of memory available to PCs enable them to support a highly detailed model set. This created some extra work as we needed to create and maintain multiple versions of the assets. However, we held off on multiple versions of assets for as long as we could to ensure that the assets created would be fairly final, avoiding the need to rework multiple versions of an asset. Developing for multiple platforms simultaneously also made some milestone days a nightmare. There were occasions when we released seven different builds for a single milestone. There were versions for each platform and versions for different languages (US, Europe and Japan). As the project progressed, we organized staggered deliveries, delivering two or three builds on a milestone day. For example, we would deliver the US builds for all three platforms, or alternatively deliver the builds for a single platform in all languages. Staggering deliveries helped reduce the load on our internal QA. (...) The size of Operation Genesis and the compilers we used meant some long waits for compilation. For PC, on some of the development machines, just linking the project could take several minutes. This led to some long debug-compile-test cycles. This was especially problematic as we were developing on three platforms simultaneously, and we wanted the team to test on all platforms before checking in. There were a few days where a large number of system changes were checked in. On these days, numerous full recompiles were required, and the team spent a lot of time waiting. Long compile times were also an issue in the days leading up to milestones as internal QA spent a lot of time waiting for new builds with the fixes needed."
261,Blue Tongue Softwares Jurassic Park: Operation Genesis,2003,https://www.gamasutra.com/view/feature/131287/postmortem_blue_tongue_softwares_.php,Jurassic Park: Operation Genesis,console pc,simulation,single,production,testing,"Because the game code was mostly platform-independent, we had one copy of the game code in version control, and used it for all platforms. (#ifdefs were used in the places that had platform-dependent code.) We did not keep separate copies of the code for each platform. This was helpful as it meant that we did not need to duplicate changes across multiple copies of the code. However, it also meant that changes to the game code would immediately affect all platforms. Because of this, there were some occasions early in development where code was tested on one platform, checked in, and broke the game on another platform. The types of problems that manifested ranged from graphical glitches to occasional crashes. (These were usually fairly easy to fix once the cause was found.) After being stung once or twice, we implemented a number of processes to avoid this problem. Although this was the procedure from the start, we became stricter with insisting that code be tested across platforms before it was checked in. While the team followed this rule for the most part, there were some hurdles that made this difficult. First, compile times were long. Just linking the PS2 or PC build would take several minutes! Second, there was an initial lack of development kits for the consoles. This lead to some contention for resources, especially access to the PS2 development kits. As the project progressed, the number of kits increased, but there never seemed to be enough. So, while we asked everyone to test on all platforms before checking in, it was sometimes difficult, especially in cases where a number of team members were waiting for a small change to be checked in before they could proceed. (The time to compile and test on the various platforms often far exceeded the time to make the change.)"
262,Blue Tongue Softwares Jurassic Park: Operation Genesis,2003,https://www.gamasutra.com/view/feature/131287/postmortem_blue_tongue_softwares_.php,Jurassic Park: Operation Genesis,console pc,simulation,single,management-feature,feature-creep,"We experimented with baby dinosaurs midway through the project. We tried schemes such as scaling the adult dinosaurs down to make them into babies. However, scaling adults down did not look right. Making baby dinosaurs that looked good required new baby dinosaur models and baby AI. This is similar to the work required for adding more dinosaur species. As a result, baby dinosaurs were dropped."
263,Blue Tongue Softwares Jurassic Park: Operation Genesis,2003,https://www.gamasutra.com/view/feature/131287/postmortem_blue_tongue_softwares_.php,Jurassic Park: Operation Genesis,console pc,simulation,single,management-feature,cutting-features,"Another example is the AI system. The systems that were built were very powerful, but there simply wasnt time to take full advantage of their capabilities. For instance, the data-driven neural net system used for the dinosaurs perception lends itself perfectly to in-game learning. However, in-game learning did not fully fit the game design, and the situations where it could be applied were very contrived. As a result, we did not use in-game learning even though it is supported. (...) As with all games, there are always features that were left out due to schedule or other reasons. With Operation Genesis, we probably had enough ideas to fill multiple games. (...)Very early in the project, we dreamed of 40 dinosaur species. However, as development proceeded, the list was reduced to 25. The ones that we miss most are the sea-dwelling and flying dinosaurs. The main reason they were lost was schedule. In some sense, it was a choice between creating fewer, more interesting dinosaurs, or a larger number of less interesting dinosaurs. (...) There were also some buildings that did not make it into the final game. These buildings include the hotel, hunting platform, and the dino-vet station. Some of these buildings existed in earlier builds of the game. Some were removed due to design decisions, and some were removed due to the memory constraints on the consoles. Having seen and played the game with some of these buildings, losing them was a difficult decision to make."
264,Oceanus Communications Legacy Online,2003,https://www.gamasutra.com/view/feature/131217/postmortem_oceanus_.php,Legacy Online,pc,simulation strategy,online,production,design," Given the fact that Legacy Online is a very deep game with many nuances, it takes new players substantial time to become experts. From the beginning, the steep learning curve became evident, and even with an easy and intuitive graphic interface, we lost a lot of players who were scared off by the games complexity. Potential publishers were often concerned that the games complexity would negatively impact newbies. Consequently, we created different tools to help new players understand the game. For instance, its made clear to all newbies before they start that they should expect to go bankrupt more than once as they begin to understand the economy in the game -- and that those bankruptcies would not penalize them moving forward."
265,Oceanus Communications Legacy Online,2003,https://www.gamasutra.com/view/feature/131217/postmortem_oceanus_.php,Legacy Online,pc,simulation strategy,online,production,tools," One of the most unusual things about Legacy Online is the language we used to develop the servers and the client. In the games early design and implementation stages we spent a lot of time discussing which language and platform to use. At the time, Java was getting lots of hype, and while we were very fond of the language, after some initial testing we decided it was not the best choice. The original team that began work on Star Peace had extensive experience with Object Pascal (the language used in Borland Delphi 3.0), which at the time was superior in terms of features when compared to most programming languages on the market -- including C++ and Java."
266,Oceanus Communications Legacy Online,2003,https://www.gamasutra.com/view/feature/131217/postmortem_oceanus_.php,Legacy Online,pc,simulation strategy,online,production,technical," As a strategy game, the main duty of Legacy Onlines servers is to simulate the games virtual worlds. The CPU is a sacred resource that the game simulation servers have to make the most of. But what happens when the players want to see what is going on? If the server running the virtual world had to respond to every single request made by players, the simulation would slow down far too much. To deal with this issue it was necessary to implement a cache system on the backend of the server application to hold copies of most of the objects in the simulation (not all of them -- just those of interest for game play). This cache is only updated when it becomes too old as compared to the one on the server. We used the well-known idea of the TTL--Time To Leave."
267,Oceanus Communications Legacy Online,2003,https://www.gamasutra.com/view/feature/131217/postmortem_oceanus_.php,Legacy Online,pc,simulation strategy,online,management-people,crunch-time," Eager to launch the game as soon as possible, a very ambitious launch date was set, preceded by an open beta that only lasted one month. We warned the publisher that more time was necessary for extensive testing, but they decided to go forward with releasing it anyway. Naturally, the launch was a disaster. The game suffered prolonged periods of downtime, with our programmers struggling behind the scenes to patch problems overnight. In hindsight one could say the launch was doomed; we were inexperienced when it came to dealing with a publisher, and Montecristo was inexperienced in the online space (Star Peace was the first online game they launched). Lets just say it wasnt a match made in heaven."
268,Oceanus Communications Legacy Online,2003,https://www.gamasutra.com/view/feature/131217/postmortem_oceanus_.php,Legacy Online,pc,simulation strategy,online,management-feature,budget," As noted at the beginning this article, Legacy Online is was made possible thanks to Canadas Pilot Visa Project for foreign IT workers. This enabled the team to set up shop in Ottawa. Ottawa is not a hub for game developers in Canada, so that presented some unique challenges (Even today, fellow Canadians are shocked to hear that we are located in Ottawa -- Ottawa is synonymous with telecommunications, not game development.) However, once we relocated to Canada, the team faced the challenge every start-up deals with: big dreams but not much money. It hasnt been easy bringing Legacy to the point it is now. We needed to assign some of the team members to outside consulting work in order to generate revenue. At times, some key developers of Star Peace had to be deployed for long periods of time in these side jobs, because it was particularly suitable to their skills."
269,Big Huge Games Rise of Nations,2003,https://www.gamasutra.com/view/feature/131242/postmortem_big_huge_games_rise_.php,Rise of Nations,pc,strategy,multi single,production,design," In the first year, both we and the publisher waffled back and forth on whether we should be doing a ""classic"" RTS game, a completely new kind of strategy game with some real-time elements, or something in-between. The prototype would swing back and forth between those two poles. Eventually, external events (such as the release of Empire Earth and Microsofts purchase of Ensemble Studios) made it clear that a straight-down-the-line ""classic"" RTS was not the right game to be working on, but not before several months of work on art and game design were wasted going back and forth. For the next game, we have a much better sense of what our style of game should encompass - epic scope, strategic depth, and large armies clashing - and hopefully we wont have to be so concerned about standing in the shadows of the other giants of the genre. Weve also got a much stronger sense about what works and what doesnt in an RTS game. (...) Partly because of the preceding problem, we took longer than usual to nail down an art look for the game. Among other issues, it took us some time to decide whether wed be fully 3D. The rest of the market was going full 3D, but we really loved the detail and crispness that 2D offered for things such as building graphics. The only engine feature we would give up to go 2D was the ability to rotate the camera, which wed never found to be very useful in RTS games anyway. However, there was also a lot of hand-wringing about whether wed be considered behind the curve graphically. (...) We were also faced with the classic dilemma of doing a history game - its hard to differentiate yourself from earlier products when you are drawing from common source material. A pikeman looks like a pikeman, no matter how radical an approach you try to take. For the most part, we attacked this issue on the marketing end. We focused on creating screenshots from the later eras of the game and highlighted the diversity in cultural art sets from nations that hadnt been covered as much in other products. Art leads Bill Podurgiel and Ted Terranova worked hard to create units and buildings that were both realistic and varied, ultimately helping to help differentiate the look from that of other products. When we started work onRise of Nations, we assumed that the single-player game would feature classic RTS style linked scenarios that followed a nations history over time. However, we started work on those scenarios and found that they just werent particularly appropriate for our subject matter - its not a lot of fun to take a game about all of history and then constrain players to a smaller canvas and scope. This approach also did not play to our strengths as developers; we are more interested in creating open-ended and infinitely replayable experiences than in making a scripted, linear campaign."
270,Big Huge Games Rise of Nations,2003,https://www.gamasutra.com/view/feature/131242/postmortem_big_huge_games_rise_.php,Rise of Nations,pc,strategy,multi single,production,tools,"Another classic blunder (comparable to getting involved in a land war in Asia) was in undervaluing single-player tool creation. We always assigned our most recent programmer hire at any time to be the ""scenario tools"" guy, meaning we not only always had our least-experienced team member doing that work, we also had no continuity since wed pass the torch each time we hired someone new. The editor also suffered grievously from several revamps of the games terrain system and other parts of the engine. Hence, we had a great deal of difficulty creating single-player scenarios, and we were very fortunate to have the Conquer the World campaign turn out as well as it did. In the last few weeks of development, programmers Ike Ellis and Scott Lewis finally whipped the editor into shape with some intense hours and smart coding, but for the next game we will have someone working on this module early and throughout the project. This task will also be easier because well be working from a more mature engine."
271,Big Huge Games Rise of Nations,2003,https://www.gamasutra.com/view/feature/131242/postmortem_big_huge_games_rise_.php,Rise of Nations,pc,strategy,multi single,management-people,crunch-time,"We underestimated the amount of coding time necessary, which resulted in an extremely overworked programming staff. We misjudged the amount of revision time that wed want for various systems. We overloaded our lead programmer such that he became the bottleneck on a number of critical systems, including multiplayer and matchmaking. Most of this could be traced back to simply not hiring enough programmers early in the project, and was compounded by lack of scheduling and technical oversight. We also never knew what was ""enough"" - since this was our first project in the RTS world, we were desperate to cram everything in that we could think of. (...) Our insistence that we could power through our bug counts at a faster-than-light clip meant that we worked our team much harder than we should have going into the final months of the project. There were a couple of modules that were going to cause us to slip by the month that we did, and recognizing reality sooner would have saved much of the team a death march that was extremely difficult for all involved."
272,Pixels Pasts SCSIcide,2003,https://www.gamasutra.com/view/feature/131302/postmortem_pixels_pasts_scsicide.php,SCSIcide,console,simulation,single,production,design," To a non-technical crowd, the concept behind SCSIcide is not exactly the most exciting and appealing one. One comment I received from a fellow gamer when I explained SCSIcide to him was You need to inspire people to play the game. By itself, being a hard drive head is not very inspiring. Being a hard drive head is not as exciting as being a cowboy or a weird gobbling creature. The world that the drive head inhabits is too sterile and lifeless. Not wanting to reinvent the wheel and fall into an overused game mechanic, I kept the SCSIcide concept as-is. Being original can have its merits, though sometimes it can be risky."
273,Pixels Pasts SCSIcide,2003,https://www.gamasutra.com/view/feature/131302/postmortem_pixels_pasts_scsicide.php,SCSIcide,console,simulation,single,production,technical," The challenges of programming for the Atari 2600 are definitely one of the reasons it has become such a popular system for homebrew gamers (see sidebar). Its beauty is also its bane, however, as simple changes in routines or a typo of a single opcode can render the game unusable and set you up for hours of debugging. The requirement to keep the code space below 4K and use only 128 bytes of RAM throws many of the typical structured programming techniques right out the window. In many cases, re-using code in-line instead of calling external functions will save precious cycles, since the time associated with saving state is avoided. I had a number of problems throughout the development cycle that were fairly quickly fixed, such as timing problems with sprite generation (drawing, positioning, and moving the individual data bits) and hexadecimal score generation (a section of the score drawing function was over a page boundary which threw off the delicate timing of the routine)."
274,Pixels Pasts SCSIcide,2003,https://www.gamasutra.com/view/feature/131302/postmortem_pixels_pasts_scsicide.php,SCSIcide,console,simulation,single,management-feature,cutting-features," Because SCSIcide is a fast-paced, intense game, quickly identifying the proper color bit to read is extremely important. Knowing right from the beginning of development that colors were an integral part of the game, I picked a visually simple color scheme and 10 unique and nonsimilar colors. I ended up with a brown background and data bits with bright colors throughout the spectrum. Gamers await the SCSIcide release at Classic Gaming Expo 2001. Sometimes the data bit colors appear very similar to each other, making it difficult to know which bit to read next. This is crucial in the later stages of the game where one false move could cause a hard drive crash, ending your game. It turns out that there are major variations in how televisions display color, so two colors that I had picked to be easily distinguishable might be displayed as similar colors. This was a design flaw in SCSIcide that was not uncovered until the final testing stages. It is really only important that the colors of the 10 data bits are easily distinguishable, not what colors actually are."
275,Pixels Pasts SCSIcide,2003,https://www.gamasutra.com/view/feature/131302/postmortem_pixels_pasts_scsicide.php,SCSIcide,console,simulation,single,business,monetization," Fifty cartridges were manufactured by hand for the initial release of the game. I didnt know what type of response Id receive at the 2001 Classic Gaming Expo. There was a slight buzz about the game being released, but the classic gaming community is very small (but growing) compared to the mainstream gaming community, so I decided to play it safe and do a small run. SCSIcide was to be released on Sunday, August 12, 2001 at 10:15am. An announcement was made at the show about 30 minutes prior to allow people to form a line to purchase a copy. I decided in advance to sell my game for only $20 complete. This price was much lower than the $30 or $40 that classic homebrew games are commonly being sold for."
276,Tom Clancys Splinter Cell,2003,https://www.gamasutra.com/view/feature/131239/postmortem_tom_clancys_splinter_.php,Splinter Cell,console mobile pc,action adventure strategy,single,production,tools," Lighting and shadows are a very important feature in Splinter Cell. While working on the prototype, we encountered a technical problem that affected the accuracy of lighting maps and characters. The engine team thought it would be difficult to solve the problem quickly, but the prototype needed to have this feature working well. So instead of waiting for the engine team to solve the problem, we asked an engineer to create a utility for the artist to adjust parameters manually. It was temporary workaround. While this was probably the best solution to complete the prototype on time, when production started on the real game, we were still using this solution on all the maps. Everyone on the art team was adjusting these parameters by hand. Later we discovered this created more problems. First, each map had its own set of parameters, making it difficult to control the overall quality. Second, because the quality of the lighting depended so much on the combination of certain parameter settings, small changes made to the tool would radically change all the setting, with disastrous results. The situation caused particularly big risks during the debugging stage."
277,Tom Clancys Splinter Cell,2003,https://www.gamasutra.com/view/feature/131239/postmortem_tom_clancys_splinter_.php,Splinter Cell,console mobile pc,action adventure strategy,single,production,technical," To deliver the highest quality game within the time constraints, we had to work on the raw data from the Xbox version of the game. That raw data consisted of 3ds max files, which were exported to the game editor to become game data.	 When we started production in October 2002, we is covered that many of these raw data files were missing from the package we received from the Splinter Cell Xbox team. Consequently work on some maps could not start as scheduled, and our art team had to check all the maps to determine the scope of the problem."
278,Tom Clancys Splinter Cell,2003,https://www.gamasutra.com/view/feature/131239/postmortem_tom_clancys_splinter_.php,Splinter Cell,console mobile pc,action adventure strategy,single,management-people,delays," Splinter Cell provides the player with so much freedom that it is difficult to hide problems, especially problems related to AI behavior. Sam Fisher, the players character, is equipped with a wide range of gadgets that players can use to observe and interact with NPCs. One major risk we constantly discussed during the making of Splinter Cell was how to debug the AI. As early as the Alpha stage we foresaw risks in debugging the AI system, and it remained risky up until the end of project. In fact we had to delay the first focus-group playtesting session because the game was full of AI-related problems."
279,Tom Clancys Splinter Cell,2003,https://www.gamasutra.com/view/feature/131239/postmortem_tom_clancys_splinter_.php,Splinter Cell,console mobile pc,action adventure strategy,single,management-people,communication," We wouldnt have completely this project on time without the help from other Ubi Soft studios. But the teams diverse composition made working together difficult. Many problems that we encountered stemmed from cultural differences. The most obvious barrier was language. Three different languages we spoken by our team: Chinese, French and Italian. We had to use English as the working language, but not everybody was fluent in the language, and some people didnt even speak it at all. The first time it became an issue was during staff training. Since all the technical documents were in English and the technical director for the graphics team spoke only Chinese and English, it was very difficult to train developers who didnt speak Englis"
280,Nayantaras Star Chamber,2003,https://www.gamasutra.com/view/feature/130567/indie_postmortem_nayantaras_star_.php,Star Chamber,pc,strategy,online single,production,design," I didnt think enough about single player, and this is, perhaps, where my focused vision backfired. I didnt think a single player element was necessary at all. Indeed, the model of giving away the client for free and only selling digital cards doesnt really support putting effort into a solid single player experience. But when we went into the beta test, it became apparent that the players wanted a single player mode, even if it didnt have a good AI. This way, the players would be able to learn the game and practice on their own, without the nuisance of having to find an online opponent, and perhaps because of pride and embarrassment issues. So while we did end up launching with a Practice Mode, allowing players to test their decks against a dumb computer opponent, not having a better single player mode probably hurt sales of the game significantly."
281,Nayantaras Star Chamber,2003,https://www.gamasutra.com/view/feature/130567/indie_postmortem_nayantaras_star_.php,Star Chamber,pc,strategy,online single,production,tools," I had to switch back-end technology ten months into the project. This hurt badly, and was the biggest impediment in trying to reach my one-year estimate of getting the game out. The back-end technology I was planning on using was the one powering Digital Addictions Sanctum. When Digital Addiction went bankrupt, it was forced to sell its assets, and the Sanctum game was bought by a group of players who formed a company called NIOGA (Non-profit International Online Gaming Association). When I first started work on Star Chamber, I had discussions with NIOGA about using the Sanctum technology, and it seemed likely, at the time, that they would be willing to let me license the technology for a relatively small fee and a small percentage of future sales. Somehow, though, over the months, after I was already building hooks into the client to use their back-end (with their blessing, assuming a deal would be worked out), the numbers that were verbally discussed changed into numbers that werent palatable to me. So not only had I wasted some time writing code to hook into their server, but now I was on my own in terms of coming up with appropriate substitute technology. However, there were several silver linings: instead of forcing my game to conform to their more limited tech, I could go on to design a server that would have more and better features, my new server would be written in a language (C++) that I could maintain and upgrade more easily, and I would own it without having restrictions"
282,Nayantaras Star Chamber,2003,https://www.gamasutra.com/view/feature/130567/indie_postmortem_nayantaras_star_.php,Star Chamber,pc,strategy,online single,production,testing," We didnt get enough of a chance to load test before Star Chambers official release, and as a result, we didnt find some crash bugs with the server when certain unlikely conditions were met. In late December 2003 and early January 2004, after we received some good press, the server started crashing erratically as the number of players online had reached an all-time high. This resulted in a lot of lost sleep and a frantic search to find and eliminate the bugs. While we did write a test client that would connect to the server, chat randomly, create games, and then quit out, our tests werent thorough enough to find all the bugs with the server - a fairly complex multithreaded application. We should have put more thought and energy into this, as the instability was a big annoyance to our players."
283,Nayantaras Star Chamber,2003,https://www.gamasutra.com/view/feature/130567/indie_postmortem_nayantaras_star_.php,Star Chamber,pc,strategy,online single,business,marketing," While try-before-you-buy is a great opportunity for certain consumers and for the company when those trial players convert into paying customers, it is arguably a bad business model, for a couple reasons. With a small player population and a multiplayer game, new trial players are likely to play not against other trial players, but against veterans. The veteran will usually defeat the newbie, and many newbies will be turned off from the experience, because they feel theyre diving into a pool of sharks. They would simply prefer to play against other newbies, or learn by themselves. I talked to a veteran producer at a games publisher after we launched, and he suggested that demos and trial play can actually dramatically lower the sales of your game. With regard to the above problem, it may be that novice players who have already paid for something will be much more likely to stick it out in a situation where they have some skill ramping to do, in order to learn how to actually play the game."
284,Nayantaras Star Chamber,2003,https://www.gamasutra.com/view/feature/130567/indie_postmortem_nayantaras_star_.php,Star Chamber,pc,strategy,online single,business,monetization," We launched with PayPal support only, and without credit card support. We were in that state for about two months, and were in the unfavorable position of losing potential customers who didnt want to use PayPal. We did have card resellers who would buy packs of cards with PayPal and then resell them to players, but many casual players dont want to be bothered going through that kind of effort in order to buy our product. When our resellers lost their ability to accept credit cards, it became critical that we implement credit card acceptance."
285,Disney Onlines Toontown,2003,https://www.gamasutra.com/view/feature/130440/postmortem_disney_onlines_.php,Toontown,pc,adventure,online,production,design," We assumed correctly that we would have to filter name choices to eliminate offensive words or phrases. We underestimated the ingenuity with which some players would approach the challenge of trying to defeat our filters, however. After refining our filter and accumulating an impressively long list of bad words, euphemisms, and other exotic uses of language, we finally resigned ourselves to the fact that we would either need to revoke the privilege of naming characters, or require a human reader to check every submission. Currently when you create your own name in Toontown, you must wait for approval from the Toon Council before you can use it. Having a human look at every name submission can be fairly expensive, however, so we developed a system intended to make name-picking fun. Our name generator can produce a wide range of Toon themed names such as Professor Skimpy Googlemuddle or Dippy Funnycorn. The name choices available to new players make it easier to begin role-playing as a Toon because they convey the humor and sensibilities of the Toon world. Also, for new players, and especially younger players, it is often a relief to not have to come up with an appropriate name from scratch."
286,Disney Onlines Toontown,2003,https://www.gamasutra.com/view/feature/130440/postmortem_disney_onlines_.php,Toontown,pc,adventure,online,production,tools," Changing scripting languages is the last thing you want to contemplate more than six months into a project like this, but by that point we had begun to realize our scripting language was not going to get the job done. The language we originally chose was terrific for rapid prototyping and we were able to make a lot of progress. As the code base grew, however, we began to experience both performance problems and code management problems. We finally made the painful, but necessary, decision to switch, and ported the game to Python. Things have been great ever since."
287,Disney Onlines Toontown,2003,https://www.gamasutra.com/view/feature/130440/postmortem_disney_onlines_.php,Toontown,pc,adventure,online,production,technical," Anyone who has worked on one of these will tell you this. We had to develop several core competencies from scratch, rewrite our development software, work for years, and are even still revising our operations plan on a regular basis. The number of skill sets necessary to produce and run an MMORPG surpasses anything we had experienced before. A good illustration of the difficulty in programming a massively multiplayer game is the Toontown battle system. We designed a turn-based combat system where players could choose their actions and then a round of the battle would play out as a short scripted sequence where the Toons do their attacks and the Cogs retaliate. These battles take place on the streets of Toontown, which are a public place. It was important for us to allow passersby to be able to observe battles and even discuss what was happening in them as a way for new players to learn how to play this part of the game. This required us to design the battle system so that players coming around a corner and observing a battle for the first time would see essentially the same thing that players in the battle were seeing at roughly the same time. In other words, the sequences generated for each round of the battle had to be distributed to everyone in sight of the battle and synchronized. In addition, these sequences needed to support arbitrary starting points in case someone arrived late. "
288,Disney Onlines Toontown,2003,https://www.gamasutra.com/view/feature/130440/postmortem_disney_onlines_.php,Toontown,pc,adventure,online,production,bugs," The Internet is very good at delivering web content. Web browsers are very forgiving when packets fail to arrive quickly (or at all). Unfortunately, an MMORPG requires a persistent, relatively low-latency connection that is reliable and sustainable for up to hours at a time. This is extremely difficult to deliver using todays Internet. We have suffered from a variety of packet loss or corruption problems that happen between our servers and client applications. These types of problems are extremely difficult to reproduce and isolate. Even when you manage to identify them, they are often impossible to fix because they dont happen in your code. For example, we eventually decided to use SSL to send game data back and forth from the clients, not only for the obvious security benefits but to prevent occasional misinterpretation of our data by various pieces of networking hardware between our servers and our players on the Internet."
289,Disney Onlines Toontown,2003,https://www.gamasutra.com/view/feature/130440/postmortem_disney_onlines_.php,Toontown,pc,adventure,online,business,monetization," Unfortunately, it is difficult to market an online-only game using means other than viral ones. As it turns out, many people today are still generally uncomfortable with the idea of buying a game that doesnt come in a box that they can hold. They also worry about what happens to their purchase if their hard-drive crashes, for example. Other people are unwilling to use their credit cards online at all. Finally, it is awkward to give an online-only subscription as a gift. As a result, we chose to distribute a CD for Toontown that can be purchased at retail. This gives us a more traditional game product around which to rally our marketing campaign, and provides a faster way for narrowband users to load the game on their computer."
290,Monoliths TRON 2.0,2003,https://www.gamasutra.com/view/feature/131219/postmortem_monoliths_tron_20.php,TRON 2.0,console mobile pc,action adventure shooter,multi single,production,tools," TRON 2.0 benefited greatly from the fact that we used the Jupiter system, which was developed and tested during the production of NOLF 2. This was true, but there were a few hurdles that also had negative impact on production. Although the Jupiter systems were extremely flexible, and even more so now, at the time they were tailored for a more realistic game like NOLF 2. To alter or add functionality for theTRON 2.0 project meant lots of tweaking. In addition, the team preferred to limit changes to game code, rather than rewriting core engine components unless absolutely necessary. (...)  Level design reached a crossroads during the production of TRON 2.0 when we began using a commercial 3D package to construct our levels. The increased power and flexibility allowed us to model and texture the unique environments found in the game. However, abandoning our game editor during this phase of construction presented gameplay-related issues later in the project. In the past, constructing the world in our proprietary game editor allowed us to bounce back and forth easily between building and testing. When working strictly in a commercial package, the testing of work required the designer to jump through a few hoops to test work. While not overly complicated, it did require time, and therefore testing was done less frequently. Consequently, levels had problems regarding scale, flow, polygon counts, and delayed functionality - all things that could have been easily checked and verified in the game editor."
291,Monoliths TRON 2.0,2003,https://www.gamasutra.com/view/feature/131219/postmortem_monoliths_tron_20.php,TRON 2.0,console mobile pc,action adventure shooter,multi single,management-people,communication," During our internal postproject evaluation, one topic that consistently cropped up was the inadequacy of our internal review process. Multiple elements drive the production of any project: an individuals task schedule, the milestone schedule with the publisher, the E3 demo and press schedule, and finally the teams internal progress evaluation. In a lot of ways the teams own evaluations can be the most critical, and it is here that TRON 2.0 suffered some bumpy times. In the beginning, we had in place a rather loose review system. It served the purpose of keeping the team on schedule to meet the necessary publisher milestones. What it failed to do was verify the projects overall quality and playability in a timely fashion. It was a strange sensation knowing that we were progressing according to the schedule but worrying deep down that we may not be hitting the mark. We eventually started to evaluate closely the work done by each team member at regular intervals, creating priority lists of subtasks that we felt were necessary to complete before the scheduled task could be crossed off. Toward the final third of the project, we had in place a very comprehensive review process that included weekly and sometimes daily reviews, a cross feedback system from all disciplines on the team, and an aggressive commitment not to falter, regardless of everyones tight schedules."
292,Monoliths TRON 2.0,2003,https://www.gamasutra.com/view/feature/131219/postmortem_monoliths_tron_20.php,TRON 2.0,console mobile pc,action adventure shooter,multi single,management-feature,multiple-projects," TRON 2.0 got off to a pretty good start. A lot of enthusiasm, ideas, and excitement flowed through the office. However, the majority of the team was still busy wrapping up other projects, and only a core team of about four or five actually began preproduction work on TRON 2.0. This is a pretty common scenario for most developers. The pacing of production usually has a small team jump-starting the next project by writing documentation, doing concept art, prototyping, and so on. Unfortunately, we failed to recognize a few issues that caused ripples later on in the production. These are lessons that we definitely plan to implement into future projects."
293,Monoliths TRON 2.0,2003,https://www.gamasutra.com/view/feature/131219/postmortem_monoliths_tron_20.php,TRON 2.0,console mobile pc,action adventure shooter,multi single,management-feature,planning," It wasnt until very late in the schedule that the team was able to experience a full, playable level. Fortunately, the gameplay came together nicely and in some cases exceeded our expectations, but it would have been a disastrous situation had it not. Why it took so long for the game to hit its stride may again be attributed to our underutilized preproduction period."
294,Chronic Logics Gish,2004,https://www.gamasutra.com/view/feature/2176/indie_postmortem_chronic_logics_.php,Gish,pc,platformer,multi single,production,technical,"Having physics-based bad guys also led us into a few more problems in the last weeks of development. We only had two base physical structures for enemies (not counting boss entities) - the Nibbler and the Bobble Head. The Nibbler was a physics-based box that could be crushed with enough force. The Bobble Head was basically a box with a round head on it - with enough force the head could be snapped off, killing the enemy. With very little time remaining, all we could do to solve this problem was to give each chapters bad guys a different skin, and slightly different movement, making them appear like different creatures, though in reality, they were staying the same. (...) Most of the interface for Gish was done in the last couple of days, and its pretty obvious that we didnt spend much time on it. Some people have told us that they recognize our games by the interface, since weve used the same one for all of our games. Part of the problem was that we changed a lot of things towards the end of development, and we didnt have the time to bring the interface up to speed. Also, I hate doing interface work. But at least the interface was still functional and working. (...) The more common term for someone downloading software for free is a software pirate, but I think that gives actual pirates a bad name. At least the original pirates had to have some courage and skill. It is frustrating to see more people leech off your game than actually buy it, with people even writing to us for tech support when their stolen keycode doesnt work with the newest patch."
295,Chronic Logics Gish,2004,https://www.gamasutra.com/view/feature/2176/indie_postmortem_chronic_logics_.php,Gish,pc,platformer,multi single,management-people,crunch-time,"Even though we didnt have a boss asking us to work 12 hours a day, we still ended up working way too much in the last few months. The main motivation for this was that we needed money, and to make money we needed a game to sell. Im not sure what we could have done differently - sometimes you get stuck in situations that you cant avoid."
296,Chronic Logics Gish,2004,https://www.gamasutra.com/view/feature/2176/indie_postmortem_chronic_logics_.php,Gish,pc,platformer,multi single,management-feature,cutting-features,"The original cast list for Gish was over 36 characters. This list was cut down to just 16, two weeks before release, due to the pressing and fixed deadline. At the time, the current frame count for the character animations was well over 900, and with only a few weeks left of development time, there was no way Edmund alone would have been able to pull that off. So regrettably, a lot of memorable baddies were cut. (...) Sound effects were basically the last thing on our list of importance, and I think thats pretty obvious to any one whos played the game. Though some might say the original (and amazing) sound track was a saving grace, the lack of obvious sound effects is still apparent. Gish was the first Chronic Logic game where sound was really a factor, so I could blame its downfall on lack of experience in the sound department. But in all reality, Im sure we could have made time for extra sound effects, if we actually had any extra development time left to do so."
297,Large Animals RocketBowl,2004,https://www.gamasutra.com/view/feature/130746/indie_postmortem_large_animals_.php,RocketBowl,console pc,sports,multi single,production,design," There were a number of areas in which the gameplay could have been improved as well. For example, weve always felt, even from the very first prototype, that each RocketBowl level is highly replayable. Each frame of each course is different, and there are a wide variety of approaches to any given frame. In real world bowling the level is always exactly the same and holds an endless appeal for countless players. What we failed to consider is how the progression of level unlocking would affect the players impression of the games replayability. Since the levels in the game are unlocked according to performance on the previous level (or in the case of tournaments, require a cash entry fee), players would play the game long enough to unlock all the levels, consider the game beaten, and email us complaining that it was too short. The free expansion pack that we just released is in part a response to those complaints. We didnt really dig into the fictional context of the game until the eleventh hour, and it shows. In the end, our presentation of the backstory of the game was boiled down to a single title screen. There are also great NPC characters in the game, created by our art director Brad MacDonald, but they were introduced late in the process, when we were reluctant to change the flow of the application too drastically. As a result, the characters dont occupy as prominent position in the game as they deserve."
298,Large Animals RocketBowl,2004,https://www.gamasutra.com/view/feature/130746/indie_postmortem_large_animals_.php,RocketBowl,console pc,sports,multi single,production,tools," The production time on RocketBowl was at least doubled as a result of our lack of experience with the Torque engine, or for that matter, with any 3D technology. Wed built dozens of 2D games using Flash and Shockwave, and even some 3D games using Director, but had never worked with a C++ 3D game engine. When we started the project in the summer of 2003, Torque had some rough edges (for example, some of the documentation was lacking at the time) which, because we were so new to this area of technology to start with, had a big impact on our work. We were also naïve about how much additional QA attention a 3D game requires. Even though we applied more QA energy to this project than any other project wed previously worked on, it still wasnt enough. Video and sound card issues that we hadnt encountered or foreseen reared their ugly heads post-launch, necessitating patches and new builds for all of our distribution partners. We didnt have a full-time QA person on RocketBowl until the last few weeks before launch and that wasnt quite enough."
299,Large Animals RocketBowl,2004,https://www.gamasutra.com/view/feature/130746/indie_postmortem_large_animals_.php,RocketBowl,console pc,sports,multi single,production,technical," In the downloadable world, its important to keep your games small, lest your risk intimidating potential customers with a lengthy download time. After all, there are plenty of other free trials to download if yours is taking too long. We knew this, but in the midst of an ad hoc project, it fell through the cracks. It wasnt until a few months before we shipped that we got serious about file size and began scrutinizing every file to see where we could trim the fat. When it came to making assets smaller, a little utility called PNG Gauntlet came through in a big way."
300,Large Animals RocketBowl,2004,https://www.gamasutra.com/view/feature/130746/indie_postmortem_large_animals_.php,RocketBowl,console pc,sports,multi single,management-feature,budget," Large Animal does not have deep pockets; in order to build our original titles, weve had to stash away the profits made from building web games for clients on a work-for-hire basis. As a result, it was nearly impossible for us to give the amount of sustained focus to RocketBowl that the game really needed. Our efforts were deeply fragmented, as most of the team would need to go off and build a game for LEGO or Cartoon Network to pay the bills. Despite what the number at the end of this article would suggest, we never had a real budget for RocketBowl since, officially speaking, we couldnt actually afford to make the game at all. We simply didnt have the money to bring in additional programmers, modelers, or other specialists."
301,Large Animals RocketBowl,2004,https://www.gamasutra.com/view/feature/130746/indie_postmortem_large_animals_.php,RocketBowl,console pc,sports,multi single,management-feature,planning," We jumped into production on RocketBowl too quickly, without a pre-production and planning phase. Prior to this project, no one at Large Animal had developed a game of this scope using a 3D engine. There was a lot of learning to do. Rather than setting aside an explicit pre-production phase in which to explore the technology, identify areas of risk, and figure out solutions, we just forged ahead and started making the game, learning as we went. As a result, we didnt always know the toolset as intimately as one would like. While working on the recently released expansion pack for RocketBowl, we uncovered a useful feature of the Torque level editor that wed never found before. And we realized late in the schedule that we should have centralized all of the editable data in the game so that the designers could make changes without consulting the programming lead. If wed had a dedicated exploration phase, we would have saved ourselves time in the long run."
302,Stardocks The Political Machine,2004,https://www.gamasutra.com/view/feature/130560/postmortem_stardocks_the_.php,The Political Machine,pc,simulation,multi single,production,design,"But to top all that off, there is the fact that no one has ever tried to make a political strategy game aimed at the mainstream (there are election ""simulator"" games out there for the hardcore, but theres nothing thats designed to be on the shelves at Wal-Mart). Would people want a game like this? Could we make a game like this ""fun""? Could we make a game like this even remotely accurate? (...) On May 1, 2004, a little over one month before being sent to manufacturing, The Political Machine sucked. It wasnt any fun. There was a cloud of despair hanging around the offices. We didnt know what we were going to do. So we started brainstorming, and lots of good ideas came out. Whats particularly startling is the fact that these ideas I mention below all were devised, implemented and bug tested in 30 days. (...) The biggest regret I have, in hindsight, was the decision to have a multiplayer mode in The Political Machine. The game features a full-blown matchmaking service, in order to make it relatively easy to play multiplayer. I love playing games multiplayer, and Ive played a lot of games online with people. That said, based on the sales statistics, and based on the server stats, less than 1% of players are playing the game multiplayer. As a gamer, I demand multiplayer in my games. It affects my purchasing decisions. But as a game developer, I recognize that people like me are an extreme minority. Outside of a handful of games, most games dont reach critical mass in online players to make a successful multiplayer community. We would have been much better off putting that time into enhancing the single player game. (...) In a political strategy game, especially in a hotly contested year such as this one with Bush vs. Kerry, we had to put a lot of effort into making sure the game was fair to both sides. People would be looking for bias in the game, and probing for any hidden agendas. We wanted the game to be accurate enough to the real world that political junkies wouldnt be turned off, but we wanted to also make sure it was a fun game. This is a strategy game, not a simulator. We think that the game is reasonably fair to both sides (or equally unfair, if you prefer). But to make it fair, we had to do a lot of research. We had to look at census data, polling data, exit polls, and watch a lot of cable TV news. I can tell you the pet topics of pretty much any cable TV host, even those not in the game. "
303,Stardocks The Political Machine,2004,https://www.gamasutra.com/view/feature/130560/postmortem_stardocks_the_.php,The Political Machine,pc,simulation,multi single,production,documentation,"Our last game, Galactic Civilizations, had mediocre documentation. The Political Machines documentation is even worse. First, it has gross errors in it, such as referring to local TV interviews and political debates. We took these features out of the game because they werent fun at all and made things tedious. But we did that after the manual had been sent to the printers. Needless to say, these are big changes to be doing at the last second. But users probably could have forgiven that if the manual was better. I wrote the manual, and as the Gamasutra editors can tell you, my writing is pretty deplorable when there are no professionals such as themselves to convert my writing into something readable. The Political Machine had little editing, since there just wasnt enough time. Next time Im going to find someone to work with me early, in order to create a good manual out of my terribly written design documents."
304,Stardocks The Political Machine,2004,https://www.gamasutra.com/view/feature/130560/postmortem_stardocks_the_.php,The Political Machine,pc,simulation,multi single,production,technical," When we decided to use DirectX 9, we assumed that was fine. We had no idea that the game would have compatibility problems with some hardware configurations. Our view was that, as long as we followed the rules, we would be fine. We were wrong. Firstly, the main reason we used DirectX 9 was to get access to easy TrueType font support. But it turns out that the older integrated Intel video cards dont support that. So essentially, we have a game that doesnt work on those machines. Theres no ""workaround"" for it, other than us scrapping TrueType fonts and going back to encoding fonts again, which we dont have the budget for (especially since this only affects one type of video card). But on a game that targets ""casual gamers"", you have a high number (in absolute terms) of people who have these low-end video cards, and who dont understand why a game that seems to have relatively mild requirements wouldnt work on their system. This results in very mad users. Unfortunately, mad users dont just return games, some of them go to review sites and take out their anger there. It only takes one angry guy giving a game a rating of 1 out of 10 on a game reviews website to really mess up the overall rating. Even though this is technically Intels fault, the user doesnt care. If I had to do it over again, I would probably have required us to put in some sort of ""fallback"" mode with basic font support, so that the game would work on those Intel machines to a certain degree. Alternatively, we could have pushed Intel to fix their drivers before the games release (the newer integrated Intel chipsets--or at least, those that are less than 2 years old - work fine). (...) This also led to people having their own styles of coding. Stardock is growing quickly, and our programming guidelines arent that specific. So we had internal battles on whether to use CString classes or just plain oh char szMyString[255];. We also had issues resolving just how functions should work. (Typically, it is against Stardock coding guidelines for functions to modify a parameter. They should always return a new value at which point a variable can be updated.)"
305,Stardocks The Political Machine,2004,https://www.gamasutra.com/view/feature/130560/postmortem_stardocks_the_.php,The Political Machine,pc,simulation,multi single,production,testing,"As if time constraints on finishing the game werent enough, there was the fact that the game had to be rock solid out of the box. So even if we wanted to take the ""well fix the game with a patch post-release"" route, we couldnt, because by the time the patch came out, the election would nearly be here. In effect, we had an AAA console-type quality requirement on a PC shareware-type schedule. (...) So, I kid you not, all of these features were added in about 30 days. But why is this in the ""what went wrong"" category? Most of it nearly didnt get play tested. The guys got so enamored playing each other at multiplayer that no one had, for example, tested to see if you could actually win the campaign. Fortunately, in one of the last release candidates, I sat down and started to play the campaign for fun. And as the guy who coded the computer AI, if I cant win the campaign, nobody could. When I got up to George Washington to play, he won every state. I didnt even win a single state. He smoked me. So over the course of that weekend we began massive play testing to make sure the game played how we wanted. We then submitted to Ubisoft a new release candidate that Monday. (...) The game succeeded because we had good personal initiative by the development team. But sometimes, developers would sneak in a feature without passing it by the rest of us. A windowed mode was added in Release Candidate 2 without anyone knowing. 4X anti-aliasing was also added without telling anyone. These were all good things, but imagine if thered been some terrible bug as a result?"
306,Stardocks The Political Machine,2004,https://www.gamasutra.com/view/feature/130560/postmortem_stardocks_the_.php,The Political Machine,pc,simulation,multi single,management-feature,cutting-features,"We had several other features in mind that we had to cut because of lack of time, time we would have had if we hadnt done multiplayer. For instance, we couldnt include multiple maps, and Id love to have had the ability to play in Canada, or the UK, or the whole of Europe, or even a worldwide map. Thats not even counting made-up maps we could have created. I think the inclusion of different maps to play on would have increased the replayability of the game a great deal. I would have also liked to have given different candidates ""special"" powers, to make each one more unique apart from statistical differences. But the time in development and testing on multiplayer eliminated those kinds of things. When gamers demand multiplayer, what they dont realize is that something has to be sacrificed for it. You have a finite budget and a finite time to use it, and so, to quote Spock: ""The needs of the many outweigh the needs of the few."" With that in mind, I wish we hadnt done multiplayer in The Political Machine."
307,Stardocks The Political Machine,2004,https://www.gamasutra.com/view/feature/130560/postmortem_stardocks_the_.php,The Political Machine,pc,simulation,multi single,business,marketing," Most of all, it was the riskiest project weve ever undertaken. In order to have the game available at retail at the exact right time (so that the first 90 days after release were during the peak interest in U.S. presidential politics: second week of August to second week of November), we would have to finish the game by June. No ""its done when its done""-type philosophy would work here. It was all or nothing. Miss the ship date and you have a very expensive coaster."
308,The Game Design of SurrealsThe Suffering,2004,https://www.gamasutra.com/view/feature/130523/postmortem_the_game_design_of_.php,The Suffering,console pc,action adventure shooter,single,production,design," Even given our best efforts and despite being granted time to iterate on the game, our puzzle and boss design was not up to the standards we wanted. Both the puzzles and bosses were flawed because of their unpredictability; they caught players off-guard by involving multiple complex mechanics that players had never used previously. Part of this was due to the fact that we redid each individual puzzle multiple times, and thus whatever puzzle progression had been planned over the course of the game was no longer applicable. Our bosses were further problematic because we tried to force platformer-style bosses into a PC shooter-style game (indeed, the bosses fit better when the game was more in the vein of DMC). This oversight was not recognized until it was too late. It was also a conceptual goal to make the bosses involve non-violent conflict to contrast with the extremely violent nature of the rest of the game. This made designing them and making them fun quite difficult since our non-violent mechanics were significantly limited and not nearly as much fun as our violent mechanics. All of our bosses and almost all of our puzzles were redone one or more times prior to shipping, and though they improved tremendously they were never anyones favorite part of the game."
309,The Game Design of SurrealsThe Suffering,2004,https://www.gamasutra.com/view/feature/130523/postmortem_the_game_design_of_.php,The Suffering,console pc,action adventure shooter,single,production,testing," After youve worked on a game for a year and a half, its easy to overlook certain glaring flaws with your title. Thankfully our publisher and gameplay testers were able to point out many of these problems and we were able to fix most of them before we shipped. Nevertheless, we spent too much of the project in denial about problems with the game. This was true across all departments, but also in design, where poor puzzles, AI, and mechanics were ignored for too long. Since we put off fixing these issues until so late in the project we often had to use shortcuts and didnt have the time to polish the new solutions. We delivered a first playable of the game seven months into development that was supposed to be shippable quality. Looking back on it now its hard to imagine what drugs we were taking to make us think it was actually close to good enough. In the future, we plan on being significantly more strict with our quality levels over the course of development and to fix problems before we become accustomed to them."
310,The Game Design of SurrealsThe Suffering,2004,https://www.gamasutra.com/view/feature/130523/postmortem_the_game_design_of_.php,The Suffering,console pc,action adventure shooter,single,management-people,communication," we shifted away from the console-style, target-lock-based shooting of DMC to the aiming-based shooting of PC first person shooters. Without a doubt this was the right decision to make. Unfortunately, though I was never a big fan of emulating DMC, we went down that road for the first third of the project and invested a significant amount of time in game mechanics that we threw out. If we had more carefully analyzed what type of game we were making from the start we could have saved six man-months of work. Also, when we finally decided to make the switch, the change was not properly communicated to the whole team, and people frequently asked me, But I thought we were trying to be like DMC? In a collaborative large-scale project, having a design vision is useless unless it is clearly communicated to the entire team."
311,Postcard From The Montreal Game Summit: Call Of Duty 2 Postmortem,2005,http://www.gamasutra.com/view/feature/2452/postcard_from_the_montreal_game_.php,Call of Duty 2,console pc,shooter,multi single,production,tools,"Finally, Collier finished by discussing the game’s budget in terms of “what went wrong,” Collier admitted that the team had encountered some issues with the reliability of Microsofts early Xbox 360 development kit. Of the 50 Xbox 360 dev kits supplied to Infinity Ward early in the project, only about 20 of them are still useable, and he explained that more than half of the kits just died."
312,Postcard From The Montreal Game Summit: Call Of Duty 2 Postmortem,2005,http://www.gamasutra.com/view/feature/2452/postcard_from_the_montreal_game_.php,Call of Duty 2,console pc,shooter,multi single,management-people,communication,"To lessen the blow of change, Infinity Ward focused on increasing communication as employment increased. Mandatory Monday meetings quickly became the forum for everyone to check in and learn what others were working on. The meetings, he said, would give people “a pipeline into management.” Layers of management were created. Roles for both associated producers and full producers were granted. Key employees from previous projects were promoted to leads in order to keep them involved in their areas of expertise (for example, architecting the systems) but empower them to portion out tasks as well. The next step is to hire an events person to organize spirit-building events, like barbecues, movie outings, and write a company newsletter. Collier hopes that more fun and more events will help the small-team culture prevail even in the larger structure. “As people know, building up a company very quickly is a very dangerous thing to do. You can be successful at a certain level, but then it quickly becomes hell in a handbasket."
313,Postcard From The Montreal Game Summit: Call Of Duty 2 Postmortem,2005,http://www.gamasutra.com/view/feature/2452/postcard_from_the_montreal_game_.php,Call of Duty 2,console pc,shooter,multi single,management-people,team,"In discussing the changes at the employment level, Collier seemed slightly wistful of the days when, with only 25 people working on one project, one common goal, the team could “turn on a dime” and had a “family atmosphere.” “Everyone wanted to be successful,” he said of the corporate culture of yesteryears. “That whole small company culture is all precious and dear, and we tried to hold onto that culture as long as we could,” but it was “impossible after 50, 60 people” were in the team, he said."
314,Mind Controls Oasis,2005,https://www.gamasutra.com/view/feature/130737/indie_postmortem_mind_controls_.php,Oasis,mobile pc,strategy,single,production,design," In creating Oasis, we were faced with the challenge of teaching the game to new players. This proved more difficult than we had imagined, as 1) There were more ideas that had to be understood than we realized, 2) We already knew the rules, and were a bit desensitized to a newcomer’s frustrations, and 3) Oasis breaks with convention in some of its rules, betraying some of our target customer’s More education before play was needed in retrospect. expectations. The game’s tutorial was extremely well crafted for its purpose. Each important idea was presented in the form of a level in the tutorial. The player would have to master a concept before they could progress to the next level. One downside to this approach is that expert players, those who need little hand-holding, did not have a straightforward rule set to learn from. Worse, the tutorial is extremely easy to play, creating the impression that levels can be won trivially. Some of these issues remain unresolved, but we did create multiple entry points into the tutorial so that players can refresh their knowledge of important rules immediately, without having to replay the whole tutorial from the start. (...)  When players migrate from Easy to Normal difficulty the game seems just as friendly because the first levels of Normal really are like the last levels of Easy. However, about halfway through a game of Normal players notice for the first time that there are mistakes that can cost them the level, and even the game. Typically, these are mistakes that they’ve been allowed to get away with while playing on Easy. Perhaps the game has trained them to play sloppily up to this point, and now they get their comeuppance. The difficulty ramp in Oasis isn’t really that different than other games, butOasis players express more shock and disbelief when their cities fall than, say, a player who loses in chess or a real-time strategy game. In fact, players have described the game as “betraying” them when multiple hordes of barbarians arrive on the playfield. What’s interesting is that multiple hordes are almost always preferable to a single, larger horde. Again, it is the shock that is so notable. It is as if the game creates a sense of comfort and contentment in its players that is betrayed on higher levels of difficulty. Some players quit when they reach this point. Others push through by tightening up their play."
315,Mind Controls Oasis,2005,https://www.gamasutra.com/view/feature/130737/indie_postmortem_mind_controls_.php,Oasis,mobile pc,strategy,single,production,tools," Oasis was originally built on a DirectX 9 framework. That seemed a safe bet because we hadn’t considered signing with a publisher that might require a lesser version. When we did sign with our first publisher, we had to migrate over to their DirectX 7 technology, which took a considerable amount of time. When we moved on to our final publisher, we had to strip out all of the previous technology and start from scratch. This was made considerably easier by the fact that Mind Control Software’s own DirectX 7-based Orbital technology had gone through two ship cycles."
316,Mind Controls Oasis,2005,https://www.gamasutra.com/view/feature/130737/indie_postmortem_mind_controls_.php,Oasis,mobile pc,strategy,single,production,testing," The inclusion of both 2D and 3D modes inOasis significantly increased the difficulty of the development and QA process. Oddball graphics cards misreport their feature sets and capriciously violate standards. This tale of woe is mentioned frequently in the What Went Wrong portion of postmortems, so we were warned, but our initial success with the graphics cards we had on hand was good enough that we didn’t start testing the less common cards until late in QA. In an attempt to fix some very obscure problems, we ended up introducing some quirks on some less problematic chipsets."
317,Mind Controls Oasis,2005,https://www.gamasutra.com/view/feature/130737/indie_postmortem_mind_controls_.php,Oasis,mobile pc,strategy,single,business,marketing," Depending upon one’s definition, Oasis is either a war-game or an empire simulator. The player builds an empire and defends it against invaders. However, unlike most games of this type, there is no micro-management, levels are played in minutes instead of hours, resolution is dramatic and fast, and the game emphasizes discovery and building more than any other element. Thus, even though Oasis plays like a beautiful game of discovery and exploration, it looks like a wargame. Well, the war-game market is not dominated by women, and Oasis is distributed through web portals that typically cater to women in their late 30s and 40s. The development team was at peace with this conclusion. There didn’t seem to be much that could be done to make Oasis more appealing to the actual market of potential female players. What we didn’t know was that many women who self-identified as hating war-games actually loved Oasis. Their claims that the game was incredibly addictive and satisfied their desire to explore and build came as a shock to us. We lost faith in targeting the female audience after listening to many women’s initial reactions to our little war-game. In retrospect, we should have worked harder to identify and fix what was causing such a strongly negative reaction."
318,Postcard from GDC Europe 2005: The First Generation of The Next Generation: A Project Gotham Racing 3 Postmortem,2005,https://www.gamasutra.com/view/feature/130807/postcard_from_gdc_europe_2005_the_.php,Project Gotham Racing 3,console,racing,multi single,production,design,"You cannot underestimate the amount of artwork youll require – and this amount of artwork requires some serious server space. Bizarre spent £80,000 upgrading theirs, with separate servers for the 20,000 photos of each city in their game, the models and so on."
319,Postcard from GDC Europe 2005: The First Generation of The Next Generation: A Project Gotham Racing 3 Postmortem,2005,https://www.gamasutra.com/view/feature/130807/postcard_from_gdc_europe_2005_the_.php,Project Gotham Racing 3,console,racing,multi single,production,technical,"In terms of process, Bizarre made a mistake of not nailing down their essentials early enough, such as memory management or vision checking. Later, they needed to rewrite the whole thing, which led to two weeks where no artist could genuinely see if their material worked in-game. "
320,Postcard from GDC Europe 2005: The First Generation of The Next Generation: A Project Gotham Racing 3 Postmortem,2005,https://www.gamasutra.com/view/feature/130807/postcard_from_gdc_europe_2005_the_.php,Project Gotham Racing 3,console,racing,multi single,production,bugs,"In terms of design, its important to remember the absolute fundamentals: you are making a game. Easily said, but its easy to get distracted by all the possibilities of the hardware. They embarrassedly reveal the bug where cars started 30 feet in the air, facing the wrong way around, which existed for months in the game, until artists found a work-around."
321,Postcard from GDC Europe 2005: The First Generation of The Next Generation: A Project Gotham Racing 3 Postmortem,2005,https://www.gamasutra.com/view/feature/130807/postcard_from_gdc_europe_2005_the_.php,Project Gotham Racing 3,console,racing,multi single,management-people,communication,"Pickford and Wilson stressed the importance of keeping open the lines of communication, both with other developers and the console manufacturer. For the latter, its essential you make SDK bug reports as quickly as possible, due to the irregularity of SDK updates. Dont expect the bug to be reported and fixed by someone else, or you could find the SDK two-months down the road still possesses it. For the former, when you hit a wall, a trip to one of the developer forums can reveal that someone else has already ran face first into that bricky surface and already found a way to chip through. In particular, the developers stressed that having the game running ahead of time, even on the Alpha kits or PCs, and having a modular development system to allow turning off whole sections when SDK fixes cause it to stop working."
322,Student Postmortem: 6mSofts Romeo and Juliet,2005,http://gamasutra.com/view/feature/130607/student_postmortem_6msofts_romeo_.php,Romeo and Juliet,pc,adventure,single,production,design," The most overwhelming issue we had with Romeo and Juliet was the gameplay. All of the technical goals we had in mind for the game were comparatively easy to accomplish. After the class had approved the high concept for the game, we had problems conceptualizing just what the gameplay be like. Our first meetings were punctuated by blank stares, and a sense of ""What have we gotten ourselves into?"" Eventually however, we were able to come up with enough of a design to get a prototype going. The player would express emotions to, and in response to, the other dancer, using the paintbrush. The other dancer would have a psychological model of their personality, which would dictate how the dancer reacted to the player, which would in turn affect the overall relationship. (...) But there was a bigger problem, after the initial few minutes of gameplay, the game quickly became boring. On a few of the critiques we got from our classmates, it was noted that the game was basically randomly scribbling with the mouse, and didnt seem very engaging. This was more or less correct. With three months left to go, we had to find a way to make the gameplay work. We quickly decided that we needed to give the game some sort of narrative. We came up with the idea of splitting the scene into ""sub-scenes"". A sub-scene would be an emotional paradox, which the player would have to work through using his emotions. For instance, Juliet would feel deeply in love with Romeo, but also would feel that the relationship was moving too fast. As Romeo, how would the player work his way through this paradox using the paintbrush? We never satisfactorily worked that part out. (...) Ballet is a very emotional art form, through dance and mime. However, getting that emotion to come through in real-time animation is a very difficult proposition. Doing realistic ballet animation is difficult enough as it is for an artist. There is a huge difference between asking an artist for a ""pirouette"", versus a ""slightly sad pirouette"". Only very recently has computer animation gotten good enough to believably convey emotion in cinema (witness the difference between the characters in Final Fantasy, and Gollum in LOTR: The Two Towers). Getting that same sort of emotion, interactively, and in real-time is at least a few years away. Our solution to expressing emotion was to have the dancers do mimes. For example, a dancer could mime ""Love"" by placing his/her hands on her heart. These mimes could be combined with other animations, so that we could have a ""sad pirouette"", in a manner of speaking. Unfortunately, this didnt really do the trick. Besides the problems with getting the dancers to convey emotion, we also had problems conveying the current state of the game. It is often times very hard to understand exactly what is going on in the game. A players understanding of the current game state is related to how connected the player feels with his/her avatar. Identifying with a character that you only see from the balcony, and that you control solely through painting, is a tough sell."
323,Student Postmortem: 6mSofts Romeo and Juliet,2005,http://gamasutra.com/view/feature/130607/student_postmortem_6msofts_romeo_.php,Romeo and Juliet,pc,adventure,single,production,technical," Many of Luas positive aspects, are also its biggest shortcomings. Lua is a very simple language, and is very quick to big up. One of the reasons for this is that it is a loosely typed language. As a matter of fact, variables dont have type, only the value that they contain does. This has its advantages. For instance, you can do things like assigning the name of a function to a variable, and then executing it by adding parentheses, for instance. It also has major disadvantages, making a typo in a variable name will create a new variable, and on top of that, Lua will not throw an error. This isnt such a big deal with a small codebase, or when the domain of Luas use in a game is limited, but when a large portion of the game is written in Luas, it can became a hassle. Often times, a member of the team would make a seemingly simple change, only to be greeted by Romeo and Juliet standing still on the stage, doing nothing, with naught a peep from Lua. Another issue we had with Lua was its reliance on tables. Just about everything in Lua is a table, including the global namespace (which is a table). By default, all variables are added to this table, unless prefixed by the ""local"" keyword. This didnt seem like a problem at first, but by the end of the project, the global namespace was so polluted that dumps of it were useless for debugging purposes. Reliance on tables hurts Lua in other ways, for instance, in implementing OOP. Yes, in theory, you can have some OOP features in Lua, but its kind of like the libraries that offer functional programming features for C++. Yes, they work, but theyre rather ugly."
324,Student Postmortem: 6mSofts Romeo and Juliet,2005,http://gamasutra.com/view/feature/130607/student_postmortem_6msofts_romeo_.php,Romeo and Juliet,pc,adventure,single,production,prototyping,"Five months is an insane amount time to try to be successfully innovative, even if you are well prepared and have done your homework. Trying to research, design, develop, and test a game as different as Romeo and Juliet turned out to be impossible to do within that timeframe. With such a short timeframe, we had very little time to research. Topics that should have been given many months of research, such as emotional agents, were given a few days. This led to us making quick, fly-by-the-seat-of-our-pants decisions that couldnt be easily backed off if they proved to be incorrect. We tended to choose easier solutions that could be implemented in less time, over solutions that would have probably ended up being more correct in the end. Many tough technical hurdles have to be passed for an interactive love story to be realized, and it just wasnt possible to hurdle them in such a short time frame. Regardless, I feel that the project yielded an interesting and educational result in the end, but with more time, I think that we could have run much further with it. (...) One of the issues we ran into is that it is extremely hard to nail any asset requirements down when you are working on a game that is experimental in nature. The only assets that we knew we needed for certain were ballet animations, beyond that, we didnt have any solid list of assets. This made it hard for the artists to schedule in time to do our assets (At Full Sail, assets for final project are often done by interns and lab instructors). It also to led to us having to ask artists to redo content multiple times, through no fault of their own. Unfortunately, I think that this just comes with the territory, when you are attempting to do something that hasnt been done before."
325,Student Postmortem: 6mSofts Romeo and Juliet,2005,http://gamasutra.com/view/feature/130607/student_postmortem_6msofts_romeo_.php,Romeo and Juliet,pc,adventure,single,management-people,team,"We knew that one of the biggest risks coming into our project would be getting the amount of assets that we needed. Although our animator was extremely capable, there was only one of him, and the one of him that there was, was working on several projects at once. Because he was spread so thin, this meant that often times, he didnt have the time to do a second pass on animations that needed tweaking/modifications. It also led to us having to cut down on the amount of assets that we needed."
326,Ty the Tasmanian Tiger 2 for the Younger Market,2005,https://www.gamasutra.com/view/feature/130600/shaping_ty_the_tasmanian_tiger_2_.php,Tasmanian Tiger 2,console mobile pc,platformer,single,production,tools," At the end of the production cycle for Ty 1 (late 2002), having just completed the PAL version of the game, it was obvious to us that there were several technological changes required for Krome to remain competitive and to be able to produce a game that contained the elements that the kids wanted. For that reason, work commenced on the Merkury2 engine (Merkury being Kromes in-house cross-platform engine). While many systems were carried across from the first version of the engine, there were significant optimizations made, including a change from being a frame-based system to a time delta system."
327,Ty the Tasmanian Tiger 2 for the Younger Market,2005,https://www.gamasutra.com/view/feature/130600/shaping_ty_the_tasmanian_tiger_2_.php,Tasmanian Tiger 2,console mobile pc,platformer,single,production,bugs," Many of the solutions we put in place to fix these problems were less than ideal. For example, the airlocks - rooms the player was sealed in until the next section was loaded - found throughout the game were just small rooms with hardly any props in them and were considered by many of us to be an eyesore. But with the amount of time left in the schedule they were an unfortunate necessity. The large overworld that was built, to connect all the different levels and missions, couldnt load and initialize fast enough without major popping, so chicanes and slow-down areas (sand and mud) were added."
328,Reflexives Wik & The Fable Of Souls,2005,https://www.gamasutra.com/view/feature/130612/indie_postmortem_reflexives_wik_.php,Wik & The Fable Of Souls,pc,platformer,single,production,tools," Post release we had a small percentage of people reporting strange rendering issues and lockups (which seemed to be related) while playing the game. Extrapolating based on the number of people reporting issues; we estimated that between 8% and 12% of people who downloaded the trial were experiencing compatibility problems. We take compatibility testing seriously on all our products, and while we had not sent this product to an external testing facility to compile a detailed report, we had tested it on the 25 machines we have in-house, which includes our development machines and two rooms full of machines of varying ages with every version of the Windows operating system we support. There were also around 20 external beta testers who played the game on their own machines, so by the time we released the game we thought we had most of the major issues resolved."
329,Reflexives Wik & The Fable Of Souls,2005,https://www.gamasutra.com/view/feature/130612/indie_postmortem_reflexives_wik_.php,Wik & The Fable Of Souls,pc,platformer,single,production,prototyping," During its third month of development, we had still not found what made the play mechanic we had in place intrinsically fun. The designers had serious concerns regarding how to build levels which were anything but visually different from one another, and none of the experiments designed to add depth and fun to the play mechanic seemed to be working out. By the end of that third month we finally decided to get radical and re-design the play mechanic from the ground up."
330,Reflexives Wik & The Fable Of Souls,2005,https://www.gamasutra.com/view/feature/130612/indie_postmortem_reflexives_wik_.php,Wik & The Fable Of Souls,pc,platformer,single,management-feature,feature-creep," A crucial element to the successful completion of levels in this product is learning how to make Wik swing effectively. To swing is king, if you do it right Wik will sing. During development, effective tongue latch swinging was something that most of the people working on the project picked up naturally, but there were a couple of people in the office who had difficulty getting a good swing action going, and then timing its release so that Wik would fly off in the direction they had intended. During focus group testing, we also noticed several people were having difficulty. We set about solving this swinging difficulty, and other issues people were having by developing an in-game tutorial system. During the first several levels in the game, we made message boxes and arrows appear which would point out locations to latch Wiks tongue to, or grab something, and describe how to manipulate the mouse to complete a very specific goal. This was done in a linear fashion, with every event pre-scripted. During subsequent focus group testing, we found that people who initially had difficulty could complete these tutorial sections, but when left to their own devices in the remainder of the game they often fell back on old habits, apparently forgetting what they had learned in the tutorial. We also noticed that those people who had previously quickly become intermediate players were now frustrated and bored by the tutorial levels"
331,Reflexives Wik & The Fable Of Souls,2005,https://www.gamasutra.com/view/feature/130612/indie_postmortem_reflexives_wik_.php,Wik & The Fable Of Souls,pc,platformer,single,management-feature,cutting-features," Our early game plan called for four boss characters which Wik would encounter and battle through the game. The Hornet Queen would appear towards the end of the forest level set, the Spider Boss would flash her fangs towards the end of the caves, a giant Scorpion would appear towards the end of the creepy vines level set, and the end of game ultimate uber-boss was the Lord Of The Grubs, a fearsome creature guarding the gates of the land where the wicked little grubs had originated. The Hornet Queen and the Spider Boss were both modeled, had basic texturing and were fully animated before the difficult decision was made to cut them and the other two boss creatures from the game. We simply did not have enough time in the development schedule to implement and balance them after taking time to re-design the core play mechanic."
332,Indie Postmortem Armadillo Run,2006,https://www.gamasutra.com/view/feature/131137/indie_postmortem_armadillo_run.php,Armadillo Run,pc,puzzle,single,production,design," Im no Michelangelo, so I decided early on to keep artistic requirements to a minimum since I would be the one doing any artwork. I decided on a clean style that didnt use many textures, partly to keep the screen uncluttered, but partly because I dont have the artistic talent to do anything better. Looking back, I think maybe I should have spent some money and hired an artist to do some work on the game, but I hadnt budgeted for this and Id overrun on my schedule, so I decided against it."
333,Indie Postmortem Armadillo Run,2006,https://www.gamasutra.com/view/feature/131137/indie_postmortem_armadillo_run.php,Armadillo Run,pc,puzzle,single,production,documentation," Seeing as its a small, technology-based game, I didnt think it was necessary to have a design document. In fact it started off just as an experiment with physics. Only when I had successfully implemented the simulation code did I build a more concrete idea of how the game would play. In retrospect, I should have taken some time away from development at this point to structure my ideas on paper and do interface design and preliminary level design. The implementation of some parts of the game was a little directionless, evolving rather than being intelligently designed."
334,Indie Postmortem Armadillo Run,2006,https://www.gamasutra.com/view/feature/131137/indie_postmortem_armadillo_run.php,Armadillo Run,pc,puzzle,single,production,technical," I dont like to write throwaway code - I think its better to take the time to do things properly the first time. But sometimes I took this too far and spent a little bit too long optimising parts of the code that were still in a state of flux. Of course, getting the simulation running efficiently was on the critical path (without this I would have had to reassess the project), so I needed to do some of the optimisations early. But once it became clear that the project was feasible, I still went back and twiddled with things to make them better. Maybe this was for the best because the ideas were still fresh in my mind, but it did push my schedule back a little. I should mention that some of my ideas for optimisations did in fact make the code run slower, which highlighted the importance of profiling - both to locate candidate code for optimisation and to test the optimisations. The book Game Programming Gems has a good article on an in-game profiler that I found helpful."
335,Indie Postmortem Armadillo Run,2006,https://www.gamasutra.com/view/feature/131137/indie_postmortem_armadillo_run.php,Armadillo Run,pc,puzzle,single,management-feature,planning," One of the first things I did was draw up a work schedule covering what I thought was the whole development. This was good - it helped organise the work and gave me short and long term targets. I was quite optimistic in my time estimates of most tasks, and for the most part achieved my self-imposed targets. However, I didnt allow enough time for the things I viewed as less important - which turned out to take significantly longer than I expected. I think this was because Im a programmer, and I thought that programming a working game engine was pretty much all you needed to do to make a game. Sound, interface design, level design, testing, gameplay tuning, menu code and the general finishing touches all got massively underestimated. Thankfully my slow but steady coding style didnt create a mountain of bugs on top of these delays. The other thing that I completely ignored was publishing the game. I did give it some thought early on, but I didnt allocate any time for it. I had assumed I would just give it to someone else to take care of that bit. In the end I decided to sell it myself through my own web site, but setting it up took some time I hadnt planned for."
336,Indie Postmortem Armadillo Run,2006,https://www.gamasutra.com/view/feature/131137/indie_postmortem_armadillo_run.php,Armadillo Run,pc,puzzle,single,business,monetization," It wasnt until I had begun playtesting that I gave significant thought to publishing the game. I had three main options: 1. Sell the game on my own web site. 2. Work with a web-based publisher on a royalty-based deal. 3. Sell the distribution rights for my game for a fixed sum. Obviously the second and third options are predicated on finding a willing publishing partner. The third option would likely be bad for me because I wouldnt have much leverage when making a deal due to my inexperience. I was initially put off from selling via my own web site for two reasons - handling payments and marketing. Fortunately there are numerous third-party payment processing options that charge a low fee. After a bit of thought, I figured the best (and cheapest) kind of marketing is word-of-mouth from satisfied customers and I asked myself what would a publisher do regarding marketing that I couldnt? So I decided on the first option - selling it on my own web site. A decision which probably should have been made earlier so I could have planned it better and built up some interest with a pre-release demo."
337,Deadine Games Chili Con Carnage,2006,https://www.gamasutra.com/view/feature/129929/postmortem_deadine_games_chili_.php,Chili Con Carnage,mobile,action,multi single,production,design,"We were too confident that players would “get” the game and our desire to make players perfect their score and combo-strings. Reading reviews and comments it’s quite obvious that the majority of players don’t have that mentality and would much rather prefer a “play once” game experience. Maybe it was something in our presentation of the levels or we didn’t make it obvious or desirable enough to increase your scores but the end result was that many players felt the game was too short. It’s also quite obvious that the additional game modes we included did not count towards extra play time and as such the time spent on those could have been spent on increasing the “story” mode of the game. (...)  As part of an attempt to prolong the game experience we added the challenge missions quite late in the process. As such they did not turn out as great as we would have hoped. The challenge missions were part teaching the players how to get better scores hopefully enticing them to go back to previously played levels to maximize their scores and part breaking up the normal levels with small mini-game like experiences. It was a difficult balance between requiring players to complete the challenges and letting the players decide whether they want to play them or not. In the end we decided to let challenge missions be optional, which I still think was the right choice, but it didn’t change the fact that they still felt tacked on. (...) We felt that we had found the ultimate control configuration for the game. In fact we have two configurations that the player can choose between, but eventually I don’t think that was good enough. The PSP ergonomics are so difficult that every player has his or her preference as to how the button layout should be and I think the game experience may have been better for a lot of gamers if we would have allowed them to customize the controls to their liking. It is something that would maybe have taken a total of two man-weeks to implement (what with the tutorial text and everything) and probably would have made the game better for some players."
338,Deadine Games Chili Con Carnage,2006,https://www.gamasutra.com/view/feature/129929/postmortem_deadine_games_chili_.php,Chili Con Carnage,mobile,action,multi single,production,technical," To reduce risk in developing a multiplayer game mode, which we hadn’t done here at Deadline Games before Chili, we decided to go for a non-synchronized ad-hoc game mode that would be easier to implement (no infra-structure mode enabling players to play over the internet). The result was the fiesta game mode where people would play on their own arenas sending enemies and “bad events” between each other to try and achieve a set score first. It was a great and fun game mode but it was a concept very different from other multiplayer game modes that players are used to and therefore it was probably misunderstood. Ultimately I think we could have spent the time better extending the single player experience instead of introducing a multiplayer mode where people had to have their own copy of the game each and be close enough together to player via the WiFi ad-hoc mode of the PSP."
339,Deadine Games Chili Con Carnage,2006,https://www.gamasutra.com/view/feature/129929/postmortem_deadine_games_chili_.php,Chili Con Carnage,mobile,action,multi single,management-feature,cutting-features," In order to reduce scope, save resources and manage to bring the game to market in a year we may have cut too many corners relying too much on the fact that the “distilled” game experience would be enough to satisfy the player."
340,Indie Postmortem FishEd,2006,https://www.gamasutra.com/view/feature/130238/indie_postmortem_fished.php,FishEd,pc,adventure platformer,single,production,documentation," I’d never really understood why companies hired dedicated Technical Writers until I actually had to sit down and create the program FishEd DEVELOPER: Andy Roberts, Scary Fish Ltd. CONTRIBUTORS: Paul Maskelyne, Mark Hennessey-Barrett, Paul Snart, Stoo Cambridge BUDGET: Approximately £2,000 LENGTH OF DEVELOPMENT CYCLE: Two years PROJECT LENGTH: 20,200 lines of code RELEASE DATE: August 1st, 2006 TARGET PLATFORM: Windows DEVELOPMENT WORKSTATIONS: 2.5Ghz PC / Win2k, 1.5Ghz Laptop / WinXP DEVELOPMENT TOOLS: Blitz+, PhotoShop, PX Binary Viewer, Nullsoft Install System, Axialis Icon Workshop documentation. After almost three weeks and two rewrites, the answer soon became clear: writing documentation that is functional, informative, and accessible for users of any proficiency, is an extremely specialized task, and a world apart from the manuals which accompany games. The first draft was an extremely basic overview accompanied by various menu and GUI details, and was naturally often lacking when it came to fine detail. I took great pains to sift through the documentation for countless other applications. My end result was a hybrid of various techniques and structures which seemed to stand out and work well, but the end result took far longer than the weekend I had originally (and rather naively) penciled-in."
341,Indie Postmortem FishEd,2006,https://www.gamasutra.com/view/feature/130238/indie_postmortem_fished.php,FishEd,pc,adventure platformer,single,production,technical," Roughly half-way through FishEd’s development, just as the project was really beginning to hit its stride, I learned that Blitz Research were releasing their latest creation, Blitz Max. While the language itself wasn’t a quantum-shift from what I was used to, the Object-Oriented approach was. Furthermore, faced with an increased schedule and thousands of lines of code to convert, it seemed like I’d already gone past the point of no return and would have to finish the project in Blitz+."
342,Indie Postmortem FishEd,2006,https://www.gamasutra.com/view/feature/130238/indie_postmortem_fished.php,FishEd,pc,adventure platformer,single,production,testing," Despite receiving a lot of interest from various programmers and friends who were interested in testing FishEd, real life usually took priority and thus the bulk of the testing fell on my shoulders. While this wasn’t particularly difficult in theory, given my past experience in QA, in practice it was often very hard to uncover bugs due to the fact that I was so close to the project and thus had written the program around my preferences. The net result was a plethora of bugs which would only show up by accident, usually when writing documentation, modifying existing code or adding new features. Though most were easily fixed, the release date was pushed back twice due to these unforeseen issues."
343,Indie Postmortem FishEd,2006,https://www.gamasutra.com/view/feature/130238/indie_postmortem_fished.php,FishEd,pc,adventure platformer,single,management-people,team," With any part-time endeavor, discipline, determination, and stamina are three vital ingredients, and what started off as a fun hobby project quickly turned into something much more serious. Though there was no shortage of ideas and the willingness to implement them, the simple fact remained that there are only 24 hours in a day, and many of those were often spent working on other projects to pay the bills. In 2005 I relocated from the UK to Canada, and as a result the project schedule lost approximately 6 months over the course of development, pushing the release date back even further than originally intended (in retrospect some of the lost time would have been particularly useful for in-depth testing and addressing bugs)."
344,Indie Postmortem FishEd,2006,https://www.gamasutra.com/view/feature/130238/indie_postmortem_fished.php,FishEd,pc,adventure platformer,single,management-feature,planning," Despite my industry experience working on hundreds of projects and meeting thousands of deadlines, I’d never been in the position where I’d had to program under pressure. All of my past programming experience had been within an extremely flexible freelance framework, and like many hobbyist programmers I was simply way too comfortable in old habits and working practices. Planning a schedule was one thing, keeping to it was entirely another, and at times I suffered severe whiplash watching the deadlines whooshing past. This lack of experience was particularly evident when bugs surfaced. The support of friends and forums can only extend so far, and the more complicated routines would be impossible to post online for evaluation. Coupled with the fact that there was simply no time scheduled in to fix bugs, addressing problems and making tweaks was left until the very last minute."
345,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,production,design,"But as we started looking at implementation, we realized that much of our design was half-assed. A cop out. What we knew we needed to do was simply something we hadnt done before -- we needed to go with a 3D engine. A 3D engine would provide us with a lot more flexibility. (...) In a board game, you read the manual and you understand the mechanics. In a simulation you play the game and you start to get a feel for how things are interlinked. I prefer the latter but I know that most gamers prefer the former. Since Im a spineless sell-out, we made GalCiv II like the former much more. Factories now produce X industrial units. Research labs produce Y industrial units. But.. we still have that Civilization ability that can be increased in a variety of ways during the game. And that is where we end up having bits of intuitive play come in because you end up having to play-balance things and you cant do it all just by ""nerfing"" modules or starting values. Sometimes you have to tweak values and the result is fun for most people. But for some people, they really dont like that. So well have to keep improving the game to try to make both camps happy. We want to keep the game from being a spreadsheet but we want to put areas in where people who want can really dig in and find out why every number is what it is if they really want to look it up."
346,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,production,tools,"License more technology. One of the things we learned is that we will likely license more of our technology in the future. For instance, GalCiv I had its own built-in sound system. This time, we used the Miles sound system that we licensed from Rad Game Tools. It was much much better and easier to work with."
347,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,production,technical,"Our game is very multi-threaded. Unfortunately, some of the latest/greatest C++ goodies are not very thread safe. This is something that would cause us quite a bit of grief. Moreover, it made debugging difficult and time consuming. The project was months behind schedule by October of 2005, just months before shipping. My job at Stardock is running the company -- the whole company. But at that point, the project was so far behind that I ended up stepping in, moving out of my office and into one of the work stations in the main lab right in the middle of the team. (...) Our websites all use technology we developed. Our forums, accounts, articles, libraries, etc. They all use the same stuff. Unfortunately, the popularity of Galactic Civilizations II put on a tremendous strain on this that we found ourselves unprepared for. Youd think that companies like us would learn from companies like Blizzard who end up having to beef up their infrastructure after their games ship. But we didnt and so we had to scramble to add more capacity."
348,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,production,testing,"And yet, within days of release it was clear that some people were having problems. We sold enough units to get a very specific numbers: 2.5%. A small number right? But on GalCiv I, that number was less than 0.25%. So thats a 10X difference. What was the problem? Had we missed something? Well it turned out that we had. For one thing, competition in the 3D hardware arena between ATI and nVidia resulted in video cards that were running a lot closer to their max capacity than previous generations. And our game made heavy use of these new features. As a result, these cards could get hot. Very hot. So what would happen is that within a few minutes or a few hours, the game would just unexpectedly crash. Wed get these debug reports and they just didnt makes sense to us. Some simple drawing function would crash. What was going on? (...) We fixed it within the first couple of days of release with a GPU throttling option. Suddenly, by magic, the game became very stable for those people. (...) The other issue we totally underestimated was how many people dont ever update their video drivers. This continues to be one of the most frustrating problems to deal with. We got a harsh lesson in customer support and the limits of it. Even though the game would pop up a dialog saying ""Your video drivers are too old to run this game, you will experience random crashes if you do not update them."" (even the 1.0 retail version had that because we knew this from testing) we still had people who would ignore this, have the game crash, go to our forums and post a big ""This game is bugggy!!111"". It was very frustrating to work through these users only to find they had a 4-year-old video driver that didnt support the new DirectX 9 functionality we were using. (...) Secondly, users wont heed warnings or readmes. Next time, the game will have a dialog that will simply not allow them to play the game until they update their drivers. (...) Bring in fresh beta testers throughout.This was a key lesson well be applying into future games. New testers play the game differently than people who know a lot about the game. The most serious bugs in QA were found by new players. (...) Play the game on low-end hardware as much as you can.Galactic Civilizations would have been a pig if it werent for some of us playing/developing the game at home on our lower-end hardware. Most of my coding was done on a ThinkPad T20 (600Mhz PIII) laptop. Probably about a third of my development time was spent rewriting the internals to improve the speed. For a 2D strategy game, it was very slow game, and I was astonished that the beta testers didnt complain about this more. On the Pentium 4s in our office, the game flew. But on the lower-end hardware, the beta versions frame rate was very slow."
349,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,management-people,communication,"And in some cases, it was personal conflict. With some of the senior level developers who came in, my style of development was in conflict with what they wanted to do. I tended to be more conservative with how I code things. I am less interested in using the latest/greatest STL techniques than I am in having readable code that is easy to look at in a debugger. This created some clashes during development as I would get frustrated when Id find a bug in something that I found difficult to read. I personally get no joy from coding. I am only interested in making the game work. So I dont care about using some cool technique. I care about algorithms that are robust, reasonably fast, easy to modify, and will still make sense 3 years from now"
350,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,management-people,team," The entire GalCiv I development team stayed for GalCiv II. Moreover, they all are still here. Thats good. But nearly every game developer we picked up between then and now we lost. So as I write this in March 2006, the GalCiv II team is a lot like the GalCiv I team except we have one additional developer. So what happened? Each loss has its own story. In some cases, its location. Were located in Plymouth Michigan. So some internal developers had a significant drive involved. For others, it was money. Contrary to what Game Developer magazine prints, the average game developer does not make big bucks. Game developers, on average, make less than developers in other industries. This is for the simple reason that its more fun to make games than it is to write some database front end. Some game developers make a lot of money, but that is not the norm. There was also a change in culture. Stardock had grown a lot and purchased a brand-new building. Our old place was a bit of a dump but it felt like a really unique small company feel. You might be working in a closet (literally) but it was your closet. The new building is very nice but its much like any other office in some respect except with nice new furnishings. Some felt we lost a bit of that small company feel. As our staff increased, so did the difficulty of managing that many people. That meant the creation of policies and guidelines that we didnt need before. Some people resented that and eventually decided to leave. (...) Dont overspecialize developers. Because we had never had anyone leave during a project before, we were unprepared for the consequences of someone leaving mid-game. While no one left suddenly (everyone gave plenty of notice), it put us in the situation of having parts of the game engine that were not well understood by anyone."
351,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,management-feature,cutting-features,Features were altered and cut. And code thoroughly debugged. But we werent ready. We thought we were. But we werent. The game wasnt buggy. But we had no idea of how finicky different computers are with 3D games. We had no idea.
352,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,business,marketing," As a publisher, especially one with oodles of marketing dollars just looking for a place to spend them, I should know this. But I dont. I still dont. And whats worse, we have the money. But we dont know. Thats something were going to have to improve on. Marketing was much the same way. We learned a lot about the media this time around that I wish I could forget. Its not corrupt. At least, its not corrupt in terms of reviews -- though if youre a big name game, youll get a heck of a lot more benefit of the doubt than an indie game. Make no mistake on that. We couldnt even get preview coverage in all the game mags even though we had AEG as our PR firm. It got consistently better over the months and I think things will continue to get better as we learn more and the powers that be outside the editorial departments realize that Stardock isnt some start-up. Weve made a lot of stuff over the years that was published by others. But we didnt do as good of a job at marketing as I would have liked. We met our sell-in numbers but I would have liked to do more promotion to help push more people to the stores."
353,Stardocks Galactic Civilizations 2: Dread Lords,2006,http://www.gamasutra.com/view/feature/131062/postmortem_stardocks_galactic_.php,Galactic Civilizations 2: Dread Lords,pc,strategy,single,business,monetization,"The unexpected success did not translate to a windfall or income, however. Publisher Strategy First filed for bankruptcy without paying a significant portion of the royalties we were owed. So for a good chunk of retail sales, we never saw a penny. In addition, because our publishers financial issues became critical in the middle of release, Stardock ended up taking on an increasing amount of the marketing and support burden. On units we were paid for, our royalty did not end up $10 per unit but closer to $7 per unit. Aspiring developers make note -- on a $39.95 game, if youre the developer, you can probably expect to make around $7 per unit at the high end if youre not the publisher. (...) For the sequel, we put together a $900,000 development budget and a $400,000 marketing budget. Like the first time around, we also reserved $300,000 for after-release updates, support, etc. to cover the entire sequels post-release life. Compared to other major retail games, our budget is tiny. But it was still over 3 times the originals budget."
354,Indie Postmortem Gibbage,2006,https://www.gamasutra.com/view/feature/131112/indie_postmortem_gibbage.php,Gibbage,pc,action,multi single,production,design," The environments fell somewhat short of my original vision. I was always really keen on the idea of trashing the arenas- I love the way theyre bloody, littered with corpses and ruined after a few minutes play. Originally, I wanted to fill them with destructible objects; floors that gave way, bricks flying about under the force of explosions, cave-ins, that sort of thing. As far as Im concerned, the more random elements you chuck into a game like Gibbage, the greater the potential for hilarious unscripted moments of fun. Unfortunately, when I started Gibbage, I knew that sort of coding wasway beyond me, and I had to limit myself. (...)  Dont get me wrong: I love how Gibbage looks - honestly I do. But if I were to go back and start again, Id most certainly make the game look more stylized and simplified. There was an over-reliance on using bitmap images where I feel working with straightforward graphics primitives instead would have enhanced the visual styling of the game. Its difficult to stand out as an indie game, and to do so I think bold, stark colors with simple, cuter characters would have worked a lot better."
355,Indie Postmortem Gibbage,2006,https://www.gamasutra.com/view/feature/131112/indie_postmortem_gibbage.php,Gibbage,pc,action,multi single,production,documentation," Originally, Gibbage was a two-player only game. This is because, like many similar titles (again likeWorms or Bomberman), its infinitely better when played against a real human being. It wasnt until some helpful soul on a game-dev forum made a comment about how Gibbage would ‘flop unless there was a single player option that I set about learning to code an AI opponent. It turns out that A* pathfinding is quite complicated stuff, isnt it? So I gave up and set about defining my own set of fuzzy-logic rules for the bot. To be fair, he plays the game really really well, but in all honesty, his intelligence is pretty much smoke and mirrors. It would have been nice to have a genuinely smart AI opponent, but to do this I should have factored elements like this in from the beginning, instead of a third of the way through development. Ive now learned the hard way how important it is to create a full design document from the beginning."
356,Indie Postmortem Gibbage,2006,https://www.gamasutra.com/view/feature/131112/indie_postmortem_gibbage.php,Gibbage,pc,action,multi single,production,technical," I hadnt a clue what I was doing when I wrote the first line of code. Beyond “Hello World”G, ibbage is pretty much the second computer program Ive ever written. If I was sensible, I would have written some smaller, less ambitious games first and started writing Gibbage when I was a relatively competent coder with a few notches on my cyber-bedpost. Sadly, Im not that intelligent, and as a result there are lines of code lurking at the back of Gibbage that are so amateurish and ghastly that Ive got half a mind to delete all my source code so no one ever finds out. Its embarrassing, really, and its a major faux-pas on my part."
357,Indie Postmortem Gibbage,2006,https://www.gamasutra.com/view/feature/131112/indie_postmortem_gibbage.php,Gibbage,pc,action,multi single,management-people,crunch-time," Im a hobbyist: during Gibbages crunch time, I was getting up at 6am to get a few hours coding in before heading off to do my day job, and working till midnight when I got home in the evening. I was physically and emotionally worn out for a large portion of Gibbages development. This state of heath doesnt lend itself well to the innovative, fresh-faced thinking typically associated with indie game development. As such, prolonged periods of mental blockage combined with a refusal on my part to switch off and stop thinking about things only served to slow the whole process down considerably. Its clear to me now just how detrimental to a project burnout can be, and that its important to walk away from time to time if only to clear ones mind."
358,Indigo Prophecy - The Nightmare of the Original Concept,2006,http://www.gamasutra.com/view/feature/131140/postmortem_indigo_prophecy.php,Indigo Prophecy,console mobile pc,action adventure,single,production,design,"Generally speaking, the scenario and characterization worked particularly well but a few glitches in the writing prevented the scenario from reaching the level of quality I was aiming for. (...) I made the mistake of not devoting enough time to the last hour of the game. I was convinced (and rightly so) that the first hour of the game would be decisive for hooking the player, but I naively thought that one hour from the end the players opinion would be made. I therefore devoted most of my time to the rest of the game in order to make it as perfect as possible. This was obviously a mistake. I was forgetting that what leaves a lasting impression on the player is often the end, and that a bad ending can change his perception of the whole game. (...) The other important point in the project specifications was that the camera should be free to provide top quality directing (so no views from behind). Finally, there was no question of providing specific interfaces for each new action scene. We therefore had to imagine a generic interface that was equally suited to a chase scene, a game of basketball or ice-skating. The result was the PAR system (japanese designer experimented something similar with his Quick Time Events in SHENMUE). The final idea of assigning controls to the analog sticks and bonding them to the movements of the character on the screen came quite late in the development, too late for the appropriate tools to be developed. The implementation was thus very largely blind, and the tuning particularly long and delicate. In addition, we failed to find an ideal visual representation for the symbols on the screen. We tested a large quantity of positions, sizes, shapes and colors and finally opted for peripheral player vision. It was an interesting option but not entirely convincing, the interface being graphically too invasive. If the player does not use peripheral vision, the eye moves from the symbols to the scene and the interface masks the scene."
359,Indigo Prophecy - The Nightmare of the Original Concept,2006,http://www.gamasutra.com/view/feature/131140/postmortem_indigo_prophecy.php,Indigo Prophecy,console mobile pc,action adventure,single,production,tools,"The graphics team did top quality work but the tools that would have facilitated the graphical production appeared much too late in the production or were not suited to the job. The heaviness of the technology always has direct repercussions for the graphical quality of the game: when a graphic artist spends more time trying to view his work than improving it, the result is a loss of quality.The burden of having to develop an internal technology on three platforms proved to be too much to afford the artists the comfort they needed. On our upcoming productions we have devoted a significant effort to developing the graphics and animation tools entirely in pre-production. More specifically, we have greatly extended our WYSIWYG philosophy enabling direct visualization on console in all tools. (...) The other classic error we committed was trying to develop generic tools with a view to possible future productions rather than tools dedicated to the experience of the game we wanted to create. The initial scripting tool was supposed to enable us to script both an FPS and a tennis game. The reality quickly proved to be different from the theory. A generic tool enables management of a great variety of cases… but none of them very effectively. The prospect of reusing a tool as is for future productions is usually a pipe dream that costs time and money in the short term with no guarantee of profitability in the long term."
360,Indigo Prophecy - The Nightmare of the Original Concept,2006,http://www.gamasutra.com/view/feature/131140/postmortem_indigo_prophecy.php,Indigo Prophecy,console mobile pc,action adventure,single,production,technical,"In spite of many positive points, the game suffered globally from an insufficient overall vision for the technology. This placed a considerable burden on the development and demanded not inconsiderable extra efforts that the team could otherwise have avoided. The first mistake occurred when changing platforms. Developing a PC game is very different from a console game, particularly in terms of memory management, loads and saves. We considerably underestimated the switch from PC to console and failed to identify the difficulties correctly (we quickly focus on the frame rate, whereas the memory and loading issues are considerably more problematic). (...) The second mistake was an insufficient analysis of the game design. It seemed to be very simple (playing animation in scripts with conditions) whereas it finally proved to require great underlying complexity. Synchronously managing several scripts playing simultaneously in several windows but capable of interacting with each other, as in the Hotel scene, is just one example of the type of cases that had to be managed. We also underestimated the needs of a game that uses few recurrent mechanics."
361,Indigo Prophecy - The Nightmare of the Original Concept,2006,http://www.gamasutra.com/view/feature/131140/postmortem_indigo_prophecy.php,Indigo Prophecy,console mobile pc,action adventure,single,management-people,communication,"Explaining the concept of an original game with no real prior references is a major difficulty that must not be underestimated. I had to deploy considerable efforts before I finally managed to generate enough excitement to sign for the project, after spending more than a year discussing it with the publisher. Developing an original project also constitutes a mass of difficulties at all levels of production. Apart from the initial difficulty of convincing the publisher to take the risk of trying something new, you then have to convince them that the project is making progress. Lots of publishers need to be reassured by the game play early on in the development and demand vertical slices (a full playable game level complete with all the features). This method is perfectly suited to shooters or car games where we can in fact produce a complete level and have a good idea of the final game play because all that remains is to duplicate the game play by changing sets. The immense difficulty of the Indigo Prophecy concept was that a large part of the fun came from involvement in the story and emotion, which were both difficult to illustrate from a single isolated scene. (...) Managing the development team constitutes the other difficulty involved in producing an original project. When working on a FPS, the team has a very clear idea of what it is doing from the very first day of development. It has outside references that enable it to judge the quality of the game. With an original project, this does not apply. The team had to have enormous faith in order to be able to produce Indigo Prophecy. Some of the team members even admitted to me that they had not really understood what Indigo Prophecy was all about until after the game was released and they heard their friends talking about it. Anyone who has already directed a project knows how essential it is to have the complete confidence of the development team. If the team has reservations or no longer believes in the project, that project will fail. For Indigo Prophecy, I made a point of never showing my doubts (which were nevertheless numerous and sometimes difficult to overcome all through the development) and made special efforts to share my vision of the project with the team."
362,MotoGP 06,2006,https://www.gamasutra.com/view/feature/130266/postmortem_motogp_06.php,MotoGP 06,console,racing,multi single,production,tools,"Our Core Technology Group had been writing our tools in preparation for the next-generation of consoles for up to 2 years previously, but most of the game team were coming from PS2 and Xbox projects with little idea of what to expect. Next-gen buzzwords were everywhere: normal maps, HDTV and HDR were all new and all being touted as the next big thing. At that stage in a console’s life cycle you have to make a lot of decisions about what’s important and what’s not – separating the technological wheat from the chaff. There’s very little information to go on and because near-launch games have to be developed in such a short space of time, there’s little chance of rectifying big mistakes made early on. (...) Now, I’m a console programmer as are most of my colleagues. It’s been 10 years since I released a PC game. This lack of PC experience led us to overlook something that would have been obvious to a PC coder. The single biggest performance drain on MotoGP’06 wasn’t the number of vertices or textures but the number of draw calls. In November 2005 our game was running at 12fps, with the render loop taking nearly 2 frames. That month news came through from Microsoft that the changes to the Xbox360 SDK that would allow us to circumvent these draw commands wouldn’t be ready in time for our launch. We were in very serious trouble indeed. Neil, one of our engineers, set about moving the render loop onto its own processor core. This was a major engineering challenge that took 6 weeks to complete, but even then the renderer was running over a frame. Another engineer, Matt, eventually solved the problem by writing an offline automatic occlusion system. It would travel round the track and take snapshots of the scene every few yards – and query the GPU to see which draw calls resulted in pixels being written to the screen. At run time it would not execute draw calls that didn’t contribute to the scene, and this cut our draw call count in half. The system has to revert back to frustum culling if you stray too far from the track. (...) It’s always difficult developing for a console that doesn’t yet exist. The development team are relying on hardware or emulators that are constantly changing and don’t really represent the final console. Decisions are made based on best guesses and features you’ve been promised get delayed and delayed. It’s always the same and an inevitable side effect of developing a game as the manufacturer is developing the console."
363,MotoGP 06,2006,https://www.gamasutra.com/view/feature/130266/postmortem_motogp_06.php,MotoGP 06,console,racing,multi single,production,technical,"All the MotoGP games by Climax have to run at 60fps. It’s a completely non-negotiable part of the project. And so when, in January 2005, we sat down and hammered out the feature set for MotoGP’06 with THQ, the requirement of 60fps was writ large. Getting launch or near launch titles to run at 60fps is always going to be challenging. You start development on hardware (or sometimes an emulator) that bares scant resemblance to the final product – and final hardware usually only shows up very late in the cycle and even then you’re lucky if you get more than a handful of kits. In the beginning we planned fastidiously to hit the magical 60 mark, but at that stage we had little idea of the final hardware so our only option was to make all our assets scaleable. We’re lucky that all our tools are built around modelling higher order surfaces and so at a touch of a button we change a bike from 1,000,000 polygons to 1,000 polygons. The same goes for the environment. And our exporters will scale the textures or vegetation to whatever limits we desire. Basically, we thought we had all angles covered. (...) The new generation of consoles have up to 8 times the memory of the previous generation and yet the DVD read speeds have increased by only about 3 times. Even assuming a perfect data read rate it would take about 32 seconds to fill 512Mb of memory. In practise you need to factor in seek times as the game loads different files, and so MotoGP’06 takes about 40 seconds to load a level. And 40 seconds is a long time. (...) There are many different ways of speeding up load time from having fully stream-able worlds to keeping as much as possible data resident in memory. The old MotoGPs employed none of these techniques. They’d never needed to. They could fill the Xbox1’s memory in 12 seconds and better than that they could dump all that data to its internal hard-drive so that next time round it loaded 10x faster. On the 360 we were aware of our shortcomings but the engineering effort required to rectify them was so huge, and the launch window so close, that they never got addressed. On our next game this will be a high priority. (...) When we started on MotoGP’06 we wrote the exporters alongside the renderer. As features were added to the game so the exporter was extended to support those features. Crucially, the exporter never went through a consolidation phase and as is all too often the case it became a second-class citizen to the game. Its code became entangled and its performance was seldom monitored. Our build machine, which was a fast piece of kit, ran the exporters. By Beta it was building 39 tracks and 40 bikes. This process took 17 hours. After the build machine finished we needed to copy the files elsewhere and delete some unused archives and manually go through the process of creating a DVD ready version and a magazine cover version. The process simply wasn’t as automated as it should have been. As we went through Beta and on towards Submission we were submitting builds more and more regularly eventually reaching 3 times a week. Soon, we knew, we would have to submit builds on a daily basis and with a 17-hour build time we were heading toward meltdown. It became clear we hadn’t fully thought through the consequences of the huge data sizes that were needed on these new consoles. A development build was 10Gb in size and our creaking 10Mbit network simply couldn’t handle it. At this juncture we accepted the help of Shep, Climax’s resident build guru. A gigabit network was hastily installed and, in double quick time, he wrote us a distributed build system that built the data on two machines and collated it on a third, file server machine, ready to be pushed out to all the development kits. It also built a DVD ready version and the magazine demo. It did all this in 9 hours which meant we could kick it off before we left in the evening and everything was ready for us when we arrived in the morning (even in crunch the team was sensible with its working hours and we seldom had staff in the office between 10pm and 7am the next day)."
364,Gamevils Nom 2,2006,https://www.gamasutra.com/view/feature/130245/postmortem_gamevils_nom_2.php,Nom 2,mobile,platformer puzzle,single,production,design," Regardless of everything else, it would have been great if the character’s movement was a bit smoother. However, this was not an easy job for us due to file size limitations, so the character’s movement had to be simple and straightforward. We had to rely on only 2-3 frames of animations for the completed game. Regular users will have no idea why Nom’s movement is stiff because they do not know about the frame limitations. As the mobile platform evolves I hope that Nom’s movement will be smoother and even see his muscles move! (...)  “Hot” is a good word that expresses the user experience of Nom. It really stimulates users with non-stop action, and once the user starts playing the game it becomes irresistible. Some people say that their eyes hurt because the game is so fast. However, this actually was all calculated while I was designing the game."
365,Gamevils Nom 2,2006,https://www.gamasutra.com/view/feature/130245/postmortem_gamevils_nom_2.php,Nom 2,mobile,platformer puzzle,single,production,technical," 2 years have passed since the launch of Nom, but game developers such as me still have to struggle with mobile hardware, because of memory size limitations. As time goes on, people will expect many more features, and new games will also have to compete with innovative games as well. Therefore, I needed to use a lot of memory on more images and sounds. Less important features had to be omitted based on an importance ranking. This happens in every project, but what makes the difference is that we need to achieve better quality than before. We have to derive a better gaming experience by omitting the less important features and emphasizing the important ones."
366,Gamevils Nom 2,2006,https://www.gamasutra.com/view/feature/130245/postmortem_gamevils_nom_2.php,Nom 2,mobile,platformer puzzle,single,production,bugs," Currently, it is difficult to have two sounds play simultaneously in different channels in Korean mobile games. What that means is that the game can only have background music or sound effects play separately, and cannot have them play at the same time. In Nom, the background music plays until Nom encounters the earthworm and defeats it, the music pauses, the sound effect plays, and then the music is resumed. Since Nom’s background music was simple and had short repeated phrases, it dealt with this issue much better. However, in Nom 2 , it was hard to cut the melody in short pieces, so we sacrificed short sound effects and just had the background music loop. Also, one of the reasons why we did it this way was because we had more obstacles and monsters in Nom 2 than in Nom. If we had the background music and sound effects repeat after one another other it might have been very awkward, and would have sounded like a scratched CD skipping. Despite that, we have maintained important sound effects that occur when Nom jumps to change the screen dimension. This was possible because the music changes when the dimension changes."
367,Naked Sky Entertainments RoboBlitz,2006,https://www.gamasutra.com/view/feature/130154/postmortem_naked_sky_.php,RoboBlitz,console pc,action puzzle,single,production,testing," Because we outsourced our testing to a professional testing company, we neglected to hire an internal QA manager, and this proved to be one of our biggest stumbling blocks. The external company did a fine job, but without a QA lead in-house to manage our own testing process and make suggestions to the outsourced team, our testing was not as directed and effective as it could have been. Halfway through the project, we hired an in-house testing intern and even recruited our art team to help with the QA process, but they faced a similar problem - without any structured guidance, they were just testing blindly. Because of it, we were still finding and fixing not-so-minor bugs up until a week before our PC release. This never would have happened had we had an in-house QA lead. In addition, we should have developed a rigorous, automated test suite. Without automated testing, every bug fix had a greater potential of introducing hidden bugs into the game, and this cost us a lot of time when regression issues werent identified until long after they were introduced. The lesson here is that we needed to have at least one experienced QA person in the company dedicated to nothing but testing, no matter how good our external testing solution was."
368,Naked Sky Entertainments RoboBlitz,2006,https://www.gamasutra.com/view/feature/130154/postmortem_naked_sky_.php,RoboBlitz,console pc,action puzzle,single,management-feature,scope," Even though we had great people on our development team, there were only a few who had gone through the full development cycle for a retail title before, and this had far reaching repercussions. On the most basic level, we were not able to accurately estimate the impact of untested technology on the time it would take for us to implement the game. Therefore, because we had tons of great ideas, we chose a scope for the game that included more features than any sane, experienced studio would dare accept given the budget and timeline. Because we underestimated the time and budget required for a game of this scale, we were understaffed right from the start. This required us all to wear several hats, sometimes leading to negative consequences. For instance, our lead programmer was also our system admin. Whenever there was an issue with the network or the bug tracker or the version control software, he had to stop programming to take care of it. Our overambitious design and understaffing sent the entire team into crunch mode for the majority of production. We had no choice but to work long hours to make deadlines, and this took a toll on our constitutions and quality of life. Luckily, every one on board was young and hearty, and in love with the project, so there were no permanent effects, but we will definitely do things differently from now on. (...)  When we started development on RoboBlitz, we jumped into the level creation process with very little pre-production. We knew the basic functionality of our robot and we knew we wanted action and puzzle oriented game play. In general, this put us in a mode of running along with whatever good ideas we had at the moment and keeping whatever worked best. This allowed for very fast, dynamic changes in the game design, which would have been fine if we were in pre-production. However, when we were adding new weapons and controls six months into an eleven-month project, it did not work out too well. The biggest problem with our lack of pre-production was that we didn’t nail down key game play mechanics and character movements before implementing the levels. Once the majority of the game was built, it became extremely burdensome whenever we had to add new features or tweak character movements. This meant we had to go back through the entire game and alter levels so that the new features didn’t break any of the existing ones. With a product that allows as much freedom of movement and game play as RoboBlitz, this was not a small task. We were left changing significant play mechanics, controls, camera angles and level features only weeks before the content complete milestone. These new changes then required retranslation of localized text, sound effects tweaks, and art adjustments, which in turn generated their own regression issues. As a result, a few areas and aspects of the game were much less thoroughly tested than we would have liked."
369,Naked Sky Entertainments RoboBlitz,2006,https://www.gamasutra.com/view/feature/130154/postmortem_naked_sky_.php,RoboBlitz,console pc,action puzzle,single,management-feature,feature-creep," Building a game based entirely on physics is difficult. Building a fun game based entirely on physics is OMGWTFBBQ difficult! The problem we encountered was that reality just wasnt very entertaining, so we were constantly balancing between real physics and fun physics. One example is the way Blitz drives - it took weeks to balance the programming and tweak the parameters so that hed drive as smoothly as he does now. He still doesnt move around like Mario, but in a game where everything is physical, thats just not possible. Blitzs grabby arms were another sore spot. We re-wrote the code 14 times until we came up with something that was user-friendly and enjoyable. The key there came down to building several A.I. heuristics into Blitzs grabby routine. Hell actually auto-adjust his alignment to pick things up better, and if something is too low for him, hell bend down just the right amount to pick it up. We decided to implement this feature because it’s just not fun for the player to have to do everything manually. We believe using A.I. to drive physical animation is going to be the future of procedurally animated games, but we didnt realize it until late in the development process and it cost us quite some time. On top of all that, building a physical simulation using an engine still in development made things a whole lot more challenging. We began development using version 2.3 of AGEIAs PhysX tool, and we found that a lot of their features just werent working the way we needed them to - usually because no one else was using those features in their games yet. AGEIA was responsive to our needs and tried hard to get things functioning the way we needed. However, every time a new build of the engine came out, we had to re-adjust and tweak all of our old settings, and work around any regression bugs in the betas. All the unexpected iteration work hurt us when trying to stay on schedule."
370,Naked Sky Entertainments RoboBlitz,2006,https://www.gamasutra.com/view/feature/130154/postmortem_naked_sky_.php,RoboBlitz,console pc,action puzzle,single,management-feature,budget," Cash flow, cash flow, cash gone! This is not a recommended scenario for any game developer, or any business for that matter. Unfortunately, this is what happened to us. The game was delayed by multiple months due to all the production and technical hiccups mentioned above. Because we weren’t willing to put out an inferior product, we just kept going until we were satisfied with the quality. This, of course, led to an empty bank account and an over-stressed management. Fortunately, we were able to borrow some money from our family members and close friends. Even so, calling up your ex-girlfriends for $20K is not something you’d want to go through, unless your skin is as thick as ours. To avoid or at least minimize such a scenario, the rule is to always raise more money than you think you need. Trust us, you’ll need it, and more. We raised several hundred thousand dollars to fund RoboBlitz, which even included a significant buffer (or so we thought), but we still ended up needing more to take the game to completion."
371,Wideload Games Stubbs the Zombie,2006,https://www.gamasutra.com/view/feature/130263/postmortem_wideload_games_stubbs_.php?page=5,Stubbs the Zombie,console pc,action,multi single,production,tools," Engine licensing is important to our model. We don’t have the staff or desire to spend years creating an engine from scratch. On Stubbs, we used the Halo engine, which was great for us because the engine kicks ass and we all knew how to use it. But, with that said, the Halo engine had never been licensed before; there was no documentation and no internet forum or third party support for it. Any training our contractors got on asset creation had to come from us. The Halo engine has its own unique asset path and idiosyncratic behaviors, so the learning curve slowed us down and wasted time. In some cases, we decided it wasn’t worth training a contractor to produce game-ready assets; we’d just bear the burden of cleaning and importing the assets ourselves. This was tremendously inefficient. In other cases, we had to devote art director time to basic training. I think in the future we’ll dedicate someone to tool training so as not to create a production bottleneck internally"
372,Wideload Games Stubbs the Zombie,2006,https://www.gamasutra.com/view/feature/130263/postmortem_wideload_games_stubbs_.php?page=5,Stubbs the Zombie,console pc,action,multi single,management-people,team," We could have done a way better job of vetting potential suppliers. We got lucky and found some incredible people to work with, but our selection process had three problems. First, not every asset class that went into production had a shippable asset reference to go with it. We made it a goal to develop the first version of every object type (character, vehicle, environment, scenery, weapon) internally and send that as the level-setting reference, but we got a little too enthusiastic in some cases to wait for that. This made it difficult to set the bar for everyone. Second, not every contractor was required to submit a test asset. This was another goal we set, but again, we jumped the gun in a few instances, which was a mistake. Omitting this step allowed incorrect expectations to emerge and caused underbidding. In the future we’ll set expectations of quality and scope for potential contractors before they submit a bid and start working. Third, we underestimated how important good management and art direction is for contractors. We worked with one art house in particular that was stretched too thin and sold us on the A team, but gave us the B team. They experienced a bad cash flow squeeze during production, which strained our relationship. Additionally, their art director was not experienced enough, which made it really difficult for us to manage quality across their team. Had we discovered all this in the selection process, we would not have had to waste time replacing the contractor during the middle of production. (...)  We underestimated just how much time was required to manage contractor submissions. We knew it would be time consuming, but even with that expectation, the combination of art directing and art production was more work than we had time to do. We were short on producers and our artists were scheduled to produce content on their own. We didn’t have enough bandwidth available for reviewing submissions in a timely manner. We realized too late that our production phase requires an intense focus on the work coming in from the contractors. Focusing our internal efforts on the contractor feedback loop should have been a higher priority for our art direction team. (...)  Our project director doubled as our producer. This was bad. We let a few aspects of production fall through the cracks and as a result ended up dealing with our scenery object build and the game shell during post-production. It’s hard to believe we didn’t have the foresight for this, but our model requires serious production management. There are tons of assets to track and multiple parties contributing to the process. To think we shipped this game without a full-time producer is nuts."
373,Wideload Games Stubbs the Zombie,2006,https://www.gamasutra.com/view/feature/130263/postmortem_wideload_games_stubbs_.php?page=5,Stubbs the Zombie,console pc,action,multi single,management-feature,feature-creep," I had this crazy idea that since the bulk of the work was being done by contractors, we would be managing them to deadline and we at Wideload wouldn’t have to work crazy long hours. This logic was used to form the basis of our “crunch avoidance system,” and it was an abject failure. We crunched for a solid three months, which isn’t too bad relative to past experiences, but is way worse than zero. Because we let some major components slip into post-production and were four months behind schedule, and we let ourselves get behind on contractor approvals, we ended up with more than post-production tasks during our post-production phase. Quality of life is a big issue for game developers. It certainly is for me, having young kids at home. I still hope to create a better work/life balance using this model. On future projects, we will endeavor to keep production phase deliverables comfortably within our production phase. For us, the key to this is good production management and timely feedback to our contractors. If we can focus on post-production during the last three months, we can avoid working double duty through the end of the project."
374,Digital Chocolate Tower Bloxx,2006,https://www.gamasutra.com/view/feature/2753/postmortem_digital_chocolates_.php?print=1,Tower Bloxx,console mobile pc,strategy,single,production,prototyping," Even though we did prototype the core game play and the rules of the city mode, we didn’t pay too much attention on how the actions like placing the building into the city would work graphically. Our artists made many of animation frames and sprites but we didn’t test them before (for example, using Flash) nor did we do any GIF-animations to see how they would work together on top of the cityscape. This cost us too much time as our city mode programmer had to implement the graphics and iterate the code multiple times before the rest of the team was happy with the results, and all this time was taken away from implementing more features into the city mode. In the end we had to drop many nice-to-have features from the city mode and from the game flow due to this."
375,Digital Chocolate Tower Bloxx,2006,https://www.gamasutra.com/view/feature/2753/postmortem_digital_chocolates_.php?print=1,Tower Bloxx,console mobile pc,strategy,single,management-people,team," In our projects we have a lead designer who is responsible for the design of the game and a producer who takes care of the whole project. In this particular project, the same person was the Producer and the Lead designer, which created some conflicts within the project. As a designer, you want to tweak the game to perfection, and as a producer you want to do it as on time/budget as possible. This is a healthy tension in any game, but the lines are a bit blurred when you have the same person making both calls. This can also be very frustrating to the team, who might come up with a new design solution and they can’t know which hat the producer/lead designer was wearing when deciding to drop a feature."
376,Digital Chocolate Tower Bloxx,2006,https://www.gamasutra.com/view/feature/2753/postmortem_digital_chocolates_.php?print=1,Tower Bloxx,console mobile pc,strategy,single,management-feature,cutting-features," Although we did get a 3D version of the game out at the same time and in a cost-effective manner as we had planned, we only managed to do it by making it as similar as possible with the 2D one. We had a few other cool features planned, but implementing those would require time we ended up not having"
377,Postmortem Sniper Studios Crazy Taxi Fare Wars,2007,https://www.gamasutra.com/view/feature/130342/postmortem_sniper_studios_crazy_.php,Crazy Taxi Fare Wars,mobile,action rpg,multi single,production,technical," The first topic to mention is the multiplayer modes of the game and specifically the Head to Head mode. We took the original Dreamcast source code from Sega of Japan and used it as our basis for porting. From a design standpoint, multiplayer was the next logical step in the evolution of the franchise, but re-engineering the original code to support two independently controlled cabs in the same space, on the same map, at the same time, proved to be a difficult challenge. The original source code layout for the collisions and physics of the cars was spread out into several areas, making the task even more technically challenging. Our engineers were perplexed by this layout and knew that it would take too long to try and completely track down all of the effects that a single change might make to either part of the code. So overall it was decided that we would not attempt to change any part of this code, both to keep the original feel of the game as true as we could and also so we didn’t accidentally create bugs that we would then never be able to track down. This isn’t a complaint against SOJ’s Dreamcast code; it’s just a fact that the original code was never intended to support two players at the same time. The first step to getting the second car working correctly was making both the cars aware of each other on the map. Next was making the AI cars correctly spawn and track to each user-controlled cab. We ran into many issues with memory and framerate problems here too, especially in CT2, where the player cars are all loaded individually, as compared toCT, where the four player cabs/characters are all loaded from the same file at the same time. One of the few limitations of porting Crazy Taxi to the PSP was having to compromise on the amount of AI traffic in multiplayer. In the single player game you’ll notice that there is much more AI car traffic around your cab compared to the headto-head mode. The PSP didn’t have enough memory to handle many more than five AI cars per player-controlled cab without severe framerate slowdowns. So if both players are within sight of each other on the map, then there should be approximately ten AI cars total in the world. These AI cars had to be made aware of their physical location in relationship not only to the cab that they were created to be around, but also the other cab and its AI cars as well. (...)  We found that using Sony’s default game state for establishing Ad hoc games wasn’t as stable inside our codebase as we had hoped for. Most of the problems that we encountered were not apparent until we started getting feedback from Sony on communication interruptions that they were encountering at their testing facilities -- that we couldn’t reproduce. Making the adjustments to handle more robust communications error checking was a bit of a stab in the dark because we weren’t ever sure of the results until we received updated feedback from Sony on these changes. It’s challenging to fix bugs when you can’t reproduce them in-house. We had been warned, and had spent a considerable amount of time on the Sony PSP developer boards trying to anticipate the scenarios under which Sony was going to test the Ad hoc communications. In the end, we made the communications more robust to handle a wider range of possible communication interruptions that we never encountered at our studio."
378,Postmortem Sniper Studios Crazy Taxi Fare Wars,2007,https://www.gamasutra.com/view/feature/130342/postmortem_sniper_studios_crazy_.php,Crazy Taxi Fare Wars,mobile,action rpg,multi single,management-people,delays," During the planning phases of the project, we wanted to getCrazy Taxi up and running before tackling the sequel. It took several months and was completed on schedule. When we turned our attention to getting the CT2 source code up and running we encountered unexpected problems that inevitably created delays in our schedule. In retrospect we should have spent time up front to do due diligence on the CT2 source code; if we had, we would have been aware of these issues months earlier. But as they say, hindsight is 20/20. The net result was a hit to our schedule and a small adjustment to our budget. In the future we will handle this differently, by purchasing longer licenses for software development packages as well as increasing the amount of time to properly evaluate any codebase we use."
379,Postmortem Sniper Studios Crazy Taxi Fare Wars,2007,https://www.gamasutra.com/view/feature/130342/postmortem_sniper_studios_crazy_.php,Crazy Taxi Fare Wars,mobile,action rpg,multi single,management-people,communication," Yes, we knew from day one that this would be key to our success. In the end, it is still tough to execute when you are dealing with teams working together but separated by half the globe and a different language. We planned on code integration between multiplayer and single player right after first playable. While that went pretty much as planned, we were not prepared for the problems that came with bug assignment. In case of Crazy Taxi, many bugs were not distinctly multiplayer or single player. That being the case, how did we decide who was responsible for fixing a bug? Would that fix impact the multiplayer/single player game? Many bugfixes worked for fixing immediate issues but would impact work being done by the other team -- when changes made were not clearly documented. Although the bug information was coming in steadily, it became a full time task to manage that data and disseminate it to appropriate team members either in Budapest or Redwood City. It became another layer to bug management that demanded a lot of communication."
380,Postmortem Sniper Studios Crazy Taxi Fare Wars,2007,https://www.gamasutra.com/view/feature/130342/postmortem_sniper_studios_crazy_.php,Crazy Taxi Fare Wars,mobile,action rpg,multi single,management-feature,planning," Another area that proved to be challenging was the fact that we had two complete games on one UMD. In the original design for CTFW we technically had four complete games with the addition of the multiplayer code for bothCT and CT2. We were going to have the multiplayer modes available from the main menu, but this quickly became a problem with load times because the entire multiplayer code is based off the single player code. If we wanted to play a CT2 head-to-head game, we had to first load theCT2 single player game code. The reality of having a multiplayer button on the main menu was that the user had to wait for the single player game to load anyway, so it seemed like it was taking forever to launch a head-to-head game. We decided to have the single player game executables on the main menu and then add the multiplayer game options to the existing GUI for each version of CT. Although we ended up not having a direct route to the multiplayer modes from the main menu, we actually slightly improved the load time of getting into a multiplayer game by keeping these modes in the game menus and off of the main menu. Streaming data off the UMD also proved to be a difficult issue for us to nail down. We were on a compressed schedule to try and finish CTFW as quickly as possible. The lead times to request and obtain testable UMDs burned from SCEA were prohibitively long, so we didn’t get any UMDs made until very late in the development cycle. The theoretical assumptions we made early on in the design of streaming the data weren’t tested until just before we were preparing to submit to SCEA for approval. What we found were long load times and decreased frame rate that we had to adjust for. You’ll notice that if you use the custom music player instead of the in-game music, the performance of the game improves a bit. This is due to the fact that the custom music player streams the data from the Memory Stick and not the UMD, thus the seek times for the rest of the game data improved."
381,Vicious Cycle Softwares Dead Head Fred,2007,https://www.gamasutra.com/view/feature/130422/postmortem_vicious_cycle_.php?page=3,Dead Head Fred,mobile,action,single,production,design,"The game mechanics also increased the scope of development exponentially. We ended up including nine different heads in the game, each of which has its own unique properties. Because you can use any head that you have available at any time, the entire game from start to finish had to be balanced for play with every head. (This diversity also increased the workload for the art department. Every head makes Fred move and act differently, so separate animations had to be created for each. For all intents and purposes, the game essentially has nine separate player characters!). (...) When sections of the game were cut or changed, story-critical dialog often had to be rewritten to reflect the changes in gameplay. This impacted not only scriptwriting time, but animation time as well. As mentioned earlier, there were also a number of re-design passes based on the results of our focus groups. Although focus groups are definitely a vital and positive part of the development process, the flaws in gameplay that they reveal need to be addressed -- and this takes time. In some cases, core game play mechanics needed to be changed, and doing that creates a ripple effect that can affect every part of the team, from the artists who have to make new combat animations, to level designers who have to change sections of their levels to accommodate new gameplay mechanics. Although all of the changes we made along the way made for a better final product, the ever-changing design definitely added to development time and made it more difficult to balance the gameplay experience."
382,Vicious Cycle Softwares Dead Head Fred,2007,https://www.gamasutra.com/view/feature/130422/postmortem_vicious_cycle_.php?page=3,Dead Head Fred,mobile,action,single,production,technical,"The PSP is truly a remarkable device, but developing on it does come with a price. First, never underestimate the value of a second thumbstick. Making 3D games in a third-person environment is very challenging if your ability to control the camera is limited. Many of us in console development don’t realize the effort that is required to implement a truly independent camera that doesn’t frustrate the player. We worked on this camera for months and came up with a system that works. There are definitely some areas that could have been better, but all in all it works quite well. Another challenge when developing for the PSP is the slower-than-advertised CPU speed. Sony has finally unleashed the full power of the CPU in a recent update, but up until the last week of development on this game we were developing on the slower mode. A device that can render almost as much as a PS2, but doesn’t have the CPU power to back it up, is truly a nightmare. In the end, we were able to optimize the engine to great effect, but there were one or two slow areas we were still concerned about. Luckily the Sony update solved those problems for us! If only we had known about the CPU upgrade sooner, we could have populated the game even more than it is now. The lack of hardware clipping is another issue that caused us numerous headaches over the course of development. While the PSP can really throw out a lot of polygons, we had to tessellate the world to a higher degree to solve clipping issues. This caused us to have more polygons than typically needed in many simple surfaces like floors and walls. We experimented with some software clipping solutions, but they took up too much processor time. On the plus side, the additional tessellation did help make our environments look great after being processed by our lighting solution."
383,Vicious Cycle Softwares Dead Head Fred,2007,https://www.gamasutra.com/view/feature/130422/postmortem_vicious_cycle_.php?page=3,Dead Head Fred,mobile,action,single,management-people,delays,"We were supposed to ship the game in early Q1 of 2007, and of course that didn’t happen. (Actually, Fred’s delayed release could help its sales. We now have the potential to sell to the new PSP owners who have bought systems due to the price reduction, and those who are planning to buy the new PSP Slim & Lite.)"
384,Vicious Cycle Softwares Dead Head Fred,2007,https://www.gamasutra.com/view/feature/130422/postmortem_vicious_cycle_.php?page=3,Dead Head Fred,mobile,action,single,management-people,team,"Adam Cogan was one of the founding members of Vicious Cycle, and helped the company launch its first product in Robotech: Battlecry. We knew that we wanted a proven, talented designer to work on Dead Head Fred, but Adam had left Vicious Cycle to pursue his own creative interests in other media. We knew that Adam was our guy, however, so we convinced him to come back to the company to work with us to create this original universe. Due to Adam’s commitments, we worked out an arrangement that we hoped would give him enough time on the project while allowing him to continue his other work. The end result was an arrangement in which Adam would be here for a portion of every week. At the beginning of the project this situation worked fairly well. As the game progressed, the time that Adam wasn’t at the office became a bigger and bigger issue. This is through no fault of his own, as Adam was very dedicated to the game and made himself available as much as possible. A problem of dependency evolved from the fact that the Lead Designer was not in the office for one fifth of the development cycle. There are only two choices available if you want to make a decision when your designer isn’t there: make a decision without him, or put the issue on hold. We found that when we put issues on hold they stacked up too quickly and began to impact progress on the game. On the other hand, making a decision without your Lead Designer present introduces confusion for the development staff. To mitigate these issues we used the help of our other designers here at VCS -- Jim Richardson, Dave Ellis, and Jeff Friedlander. They helped to take on some of the large design tasks, like mini-games, the voiceover scripts, and the boss fights (respectively)."
385,Vicious Cycle Softwares Dead Head Fred,2007,https://www.gamasutra.com/view/feature/130422/postmortem_vicious_cycle_.php?page=3,Dead Head Fred,mobile,action,single,management-feature,cutting-features,"Despite the fact that the primary game mechanic -- collecting heads and using them in different ways -- was in place before we even started development, there were a lot of changes made along the way. Some of these were a result of the large scope of the game. We ended up having to cut some of the mini-games that we had originally planned, to save development time. Unfortunately, the decision to do so was not made early in the development process, so some development time was lost to sections of the game that were ultimately cut."
386,Vicious Cycle Softwares Dead Head Fred,2007,https://www.gamasutra.com/view/feature/130422/postmortem_vicious_cycle_.php?page=3,Dead Head Fred,mobile,action,single,business,marketing,"We also firmly believed in supporting the PSP market with a new intellectual property. Many of the PSP games on the market were ports from other systems, and they didn’t show off the system to its full potential. If more publishers took a chance early on, then the PSP software lineup would have been deeper and more impactful. Of course, it turned out that PSP didn’t make as big of an impact as everyone had hoped. It’s doing well... but the DS is doing better. Looking back on it, it probably would have been a good idea to go multi-platform just for more exposure, sales potential and retail penetration. However, we ultimately don’t regret the decision. We have created a great, original game for the PSP and there aren’t too many developers that can say that. And, of course, thanks to our cross-platform technology, with a few months of work, Fred can make the jump to PS2 or even Xbox Live Arcade if D3 decides to go that route."
387,Freeverses Marathon 2: Durandal,2007,http://www.gamasutra.com/view/feature/130732/postmortem_freeverses_marathon_.php,Marathon 2: Durandal,console pc,shooter,multi single,production,documentation,"Another problem caused by this deficiency was that due to different coding styles and lack of a comprehensive design, many areas of the code could only be efficiently debugged by the person who had created them. The audio system in particular involved multiple threads and extensive use of the Xbox 360’s audio library, which no one except the coder directly responsible for it was sufficiently familiar with. As a result, it continued to produce bug reports caused by subtle race conditions throughout practically the entire project -- reports which most of the team couldn’t address. Even when singular code like this wasn’t producing bugs, it was causing coders to run into trouble and waste time wrestling with largely undocumented APIs and quirks when their work brought them into contact with another functional area."
388,Freeverses Marathon 2: Durandal,2007,http://www.gamasutra.com/view/feature/130732/postmortem_freeverses_marathon_.php,Marathon 2: Durandal,console pc,shooter,multi single,production,tools,"The sometimes strange organization of the engine led to one particularly thorny problem with the weapon-in-hand animations. For a long time after the functionality was ported, the feel of the weapons was slightly off. Guns would fire too quickly or not quickly enough, and animation glitches and timing problems were rampant, but there was no clear data corruption or logical error to be found. The animation of the weapons was all correctly loaded, as was the ""physics model"" file that defined the rest of their behavior, but the two data sets were inconsistent and had always been. It was eventually discovered that there was a preprocessing function that synchronized the two that had been left out entirely -- its only invocation was in an obscure area of initialization that had been superseded by an Xbox 360-specific rewrite. The question of why one set of conflicting data wasn’t chosen to be canonical and used in its original loaded form was never answered."
389,Freeverses Marathon 2: Durandal,2007,http://www.gamasutra.com/view/feature/130732/postmortem_freeverses_marathon_.php,Marathon 2: Durandal,console pc,shooter,multi single,production,technical,"Many of the required features of the Xbox 360 platform were implemented hastily after-the-fact only after their absence was discovered, rather than being integrated into the original design of the code. Guest support on Xbox Live is a good example of this. When a player joins a split-screen multiplayer game, he must be able to bring players who do not have personal Live accounts with him. By the time we realized this feature was not working correctly, a very strong relationship had been established between player accounting in the network game UI, player representation in the game world, and player profiles on the Xbox. Supporting players who did not have matching profiles required a significant overhaul of that accounting system. An extra wrinkle came from the fact that profiles have privileges associated with them that may require a player with a profile to be treated as a guest anyway under certain circumstances -- in other words, game developers must themselves implement the difference between Xbox Live Silver and Gold accounts. The system used by the final game relies on the persistence of data in partially re-initialized structures, an unfortunate compromise that should have been avoided. The performance requirements of the platform also had a huge influence on our design. A smooth, stable framerate is important to a good presentation, and to the proper functioning of the Xbox Guide, so no blocking could occur when dealing with files or the network. As the Xbox 360 uses polling for most asynchronous operations, this necessitated the use of state machines in many places. The most egregious example of this is the game saving and loading screen, which is running two separate state machines at the same time -- one to update the UI, and one to perform the file I/O. (...) For our network code, we hired an experienced programmer who provided us with his pre-existing network library. We expected that adding it to the project would take minimal effort. Unfortunately, this was not the case. Despite being a very flexible and powerful system, it had still been built with certain expectations in mind and made assumptions about the code it would interact with. It relied on constructors and destructors to perform much of its work, while our game used statically allocated arrays of objects to build the game world. The first time we attempted to invoke the network code while running the game, it simply exploded. Determining why this happened took several days, since the flaw was in such a fundamental area. The eventual solution was to establish a system of proxy objects whose creation and deletion followed the rules the network library expected, and which manipulated the static arrays to control entities in the world. This was far from an ideal solution, as innumerable bugs appeared in the synchronization between the two objects, and it removed a major advantage of the static array design -- a completely predictable memory layout. Overhauling very old code is difficult. Marathon was written in straight C, which does not lend itself to good software engineering (and that’s not even considering the requirements of high-performance 3D graphics in 1994). Most interaction between different functional areas was accomplished by direct manipulation, not accessors. The life cycle of particular parts of the world was quite difficult to puzzle out in many cases. Quite often, the limitations of the original 68K Macintosh platform had been worked into the gameplay in subtle ways. Multiplayer scoring was a particularly hairy section to overhaul. The original game had used a pure peer-to-peer network architecture that only transmitted raw user input -- usually passable in a LAN environment, unworkable on the internet. Since the game did not differentiate between remote and local players in any meaningful way, scorekeeping was implemented simply by giving each player a table of which opponents they had beaten or fallen to and having each player grant points to the appropriate enemy (through a direct write to his internal table, naturally) when dying. When the model was changed to transmit absolute states over a client-server network, this had to be replaced with a message-passing system that informed remote players of their earned kills -- more accurately, it informed a remote player of his kill and then propagated his updated score to every other client in the game, to satisfy Xbox Live’s requirements for verifying game coherence. (...) Fixed-point arithmetic was used throughout the original game, and it was sometimes reflected in the gameplay in unexpected ways. Marathon has two features that were fairly unique for its time: liquid volumes with variable height and currents that push the player around, and wall panels that can be used to recharge health. We received a bug for a level late in the game -- there was an underwater recharger that could not be used, since the liquid would push the player away from it. Why didn’t the liquid push the player away in the original game? The answer lay in the fact that the liquid current was now stored in a float rather than a fixed-point integer. The exact value of the liquids force was applied to the player at reduced strength (the full value was used to animate its flowing surface); a division by 4 for a float, a right shift of 2 bits for a fixed. Most of the time, these gave similar results, but what if the current flow was already less than 4? The fixed-point math drops it all the way to zero; the float leaves it at a very small positive value. The underwater recharger worked because of this inaccuracy; once it was manually restored the player could recharge again."
390,Freeverses Marathon 2: Durandal,2007,http://www.gamasutra.com/view/feature/130732/postmortem_freeverses_marathon_.php,Marathon 2: Durandal,console pc,shooter,multi single,production,bugs,"Sometimes the requirements for certification diverged from the functionality provided by the system libraries. The mute feature, for example, must enforce muting in both directions -- when a player mutes another, neither the muter nor the mutee may hear the other. The catch is that the list of muted players is only available for local players; it is not automatically propagated. The mutee doesnt know he has been muted until the game implements a method of notifying him. Once this was done, a bug was found (in our game code) by which a user could force another user to un-mute him by using his own mute button. The was so late in the project that rather than redesign the mute system additions, a ""countermand"" message was created so that different consoles could order each other to re-mute players when necessary, wasting network traffic and complicating the related code. And it’s still not perfect -- while it passed cert, weve heard several reports of players being unable to communicate when appropriate."
391,Freeverses Marathon 2: Durandal,2007,http://www.gamasutra.com/view/feature/130732/postmortem_freeverses_marathon_.php,Marathon 2: Durandal,console pc,shooter,multi single,management-people,communication,"Communication between team members was infrequent, the master design document was never fully fleshed out, and many functional areas of the game were laid out by individuals working in a virtual vacuum. The audio system was the work of a single coder, as was network session management, the menu interface, and user profile data. As these largely complete units began to be integrated, poor communication led to duplication of effort and an inability to keep up with changing spheres of responsibility. Many hours were lost when it was discovered that two programmers had been working on the same code -- optimizing the Shapes loader cost nearly an entire extra man-day for this reason."
392,Black Rock Studios MotoGP07,2007,https://www.gamasutra.com/view/feature/130388/postmortem_black_rock_studios_.php,MotoGP 07,console mobile pc,racing,multi single,production,technical," The pre- and post-race cutscenes were something our studio hadnt tackled before. A decision we made early on was that we wanted hundreds of people on the grid -- so we were going to concentrate on quantity rather than high polygon count. At the time we didnt have the technology to render perfectly featured faces and hair, so we wanted to keep the camera cuts quick and the character count high. We had 18 races each with pre- and post-practice, pre- and post-qualify and pre- and post-race cutscenes. Thats 108 different scenes. We needed to use the in-game engine for the scenes rather than recording them, so that wed be able to correctly represent the players place and team on the grid. We also didnt want a load screen between cutscene and race, so all the assets had to be loaded up front."
393,Black Rock Studios MotoGP07,2007,https://www.gamasutra.com/view/feature/130388/postmortem_black_rock_studios_.php,MotoGP 07,console mobile pc,racing,multi single,production,bugs," One thing that the game development community is learning is that that building the volume of assets required for 360 and PS3 games is a tough problem. We made a serious effort to engineer a good build system forMotoGP07. A system that could check out the code and assets, build the code and assets across multiple build machines for multiple SKUs, run unit tests on the code, run a series of tests on the game to make sure it was operating correctly, email us a status log, build DVD discs, archive a build environment (an archive of all the data, code and tools which was everything you need to build assets and run the game) and if the data was good (i.e. the automated tests had passed) it pushed the new version of the game out to all available devkits. It did this in less than five hours at the push of a single button. Sounds quite good, doesnt it? Unfortunately it wasnt quite what we had hoped. Fundamentally our build system is built on top of Scons (a replacement for make) and Cygwin (a Linux-like environment for Windows) and it stressed them beyond their limits. In order to get the build time to less than five hours we issue tens of thousands of build commands over a large number of CPUs, and we exposed two rare bugs in the third party software. Every few thousand times the fork command in Cygwin would fail and similarly Scons would hang. We spent weeks debugging the problem but never managed to solve it, and instead ended up with an unsatisfactory tangle of error-catching and retrying in the hope of getting some good data."
394,Black Rock Studios MotoGP07,2007,https://www.gamasutra.com/view/feature/130388/postmortem_black_rock_studios_.php,MotoGP 07,console mobile pc,racing,multi single,management-people,crunch-time," Our Core Technology Department is solving the problem by rewriting the build system using Python rather than Scons and eliminating the need for Cygwin. Fortunately for us we had an enthusiastic build engineer who was happy to baby-sit the build, often after-hours, tinkering with it until it gave good results. As you can imagine this was far from satisfactory (especially for him!) A poorly-operating build system compromises the quality of the game and costs the team late nights and weekends and it is, therefore, inexcusable."
395,Audio Postmortem: Scarface: The World is Yours,2007,https://www.gamasutra.com/view/feature/130109/audio_postmortem_scarface_the_.php,Scarface: The World Is Yours,console pc,action,single,production,technical,"Improvements to the dialogue system soon became evident when we realized the huge amount of content we had to manage. A simple, dedicated database system would need to be developed to enter, sort, organize, print, edit and debug all the dialogue. We used Microsoft Excel to manage the entire dialogue on this project, which although workable, proved very hard to manage and debug, making dialogue management a full-time job. It also proved inflexible later on in development when we needed to re-appropriate lines of dialogue to be used in new situations, as our naming convention dictated the use of dialogue in the game to a great extent, and meant we had to duplicate and rename content in order to get it used in new places in the game. The development of a flexible system, which treats functionality independent of filename and which packages the files needed per character only at the build process, would help tremendously on similar scale projects."
396,Audio Postmortem: Scarface: The World is Yours,2007,https://www.gamasutra.com/view/feature/130109/audio_postmortem_scarface_the_.php,Scarface: The World Is Yours,console pc,action,single,management-people,delays,"Though unavoidable and clearly for the greater good of the game, the change of direction for the project midway through development brought about by a six month extension to our Alpha date, and presented challenges for the dialogue system and for the flexibility of the content we had already recorded."
397,Audio Postmortem: Scarface: The World is Yours,2007,https://www.gamasutra.com/view/feature/130109/audio_postmortem_scarface_the_.php,Scarface: The World Is Yours,console pc,action,single,management-feature,cutting-features,"These changes meant that many scenes that had been written for the story were cut completely, and although some scenes were reappropriated they did not make as much coherent sense as the full scenes they used to be. Many characters were also cut from the game, as well as many side missions for which very specific characters had been created, cast and recorded. Those characters now were only to appear in the game world as pedestrians, which made them seem a little odd without their context. With all the ripples that the extension gave us, these changes led eventually to a much more streamlined and solid product. The extension in the amount of time we had also allowed us to plan and execute the post-production mixing, and thus gave us a huge gain in terms of final audio quality."
398,Audio Postmortem: Scarface: The World is Yours,2007,https://www.gamasutra.com/view/feature/130109/audio_postmortem_scarface_the_.php,Scarface: The World Is Yours,console pc,action,single,management-feature,planning,"Production of the huge amounts of cinematics that we have in the game was eventually cut off around two weeks before we went off-site to Skywalker to mix the game’s audio. This gave us a mere two weeks to work on Foley performance, recording and editing for those scenes. Due to the huge amount of cinematic cut-scenes in the game, we had to prioritize the more important ones to receive the attention of full Foley, as there simply was not enough time to perform Foley for all the cut scenes we had. Our internal Foley team, Scott Morgan, Cory Hawthorne and Roman Tomazin, worked for a solid week in performing the Foley, and then a further week editing and bouncing down the Foley mixes for integration into the sessions which contained SFX and dialogue. This practically left no time to do mix-downs of the final sessions including dialogue and sound effects, so the team were put under a great deal of pressure to bounce out and mix all the cinematics for the game in both Pro Logic II encoded versions and in Dolby 5.1 six channel mixes. These were all bounced out over the course of two or three long evenings and the intention was not to touch these mixes once we got to Skywalker. However, once arriving on the stage we found we needed to add more sounds and balance the sounds in some of the cinematics, so as we came to them we re-bounced them on the mix stage. A dedicated month for Foley and premixing the cinematics is a must for future productions of this scale."
399,Wolverine Studios Total Pro Golf 2,2007,https://www.gamasutra.com/view/feature/129951/indie_postmortem_wolverine_.php,Total Pro Golf 2,pc,simulation sports,single,production,design," Our initial decision on the demo of the game was not well received. We offer a fully playable, three-day demo, but there was no walkthrough, and some people who play a demo want a more guided path than we gave them-they wound up not being sure what to do in the game and never got fully immersed."
400,Wolverine Studios Total Pro Golf 2,2007,https://www.gamasutra.com/view/feature/129951/indie_postmortem_wolverine_.php,Total Pro Golf 2,pc,simulation sports,single,management-feature,cutting-features," We also had to leave a feature or two on the cutting room floor as well. They weren’t features we had announced, but we’d still hoped to get them into the game. Hopefully there will be enough interest in the title to continue its development, because the game world still has rich opportunities for expansion."
401,Wolverine Studios Total Pro Golf 2,2007,https://www.gamasutra.com/view/feature/129951/indie_postmortem_wolverine_.php,Total Pro Golf 2,pc,simulation sports,single,business,marketing," By far, the biggest thing that went wrong with the game was lack of publicity. It’s very difficult for an indie developer to draw attention to their game, and given our tight development schedule, there was even less time to devote to marketing than normal. Not only did we not get any pre-release buzz going, but also there wasn’t much post-release buzz either. The lack of pre-release press information meant that game reviewers weren’t even aware that the game had been released. That situation will come around and the game will get reviewed, but most of those reviews will be a month or more after release of the game or later. (...)  The biggest thing that went wrong is that we’re still an indie development company that nobody knows about. It’s very difficult to get noticed, and awareness only builds very slowly over time. It’s the same grind that every good indie developer is in."
402,Blue Fangs Zoo Tycoon 2 Marine Mania,2007,https://www.gamasutra.com/view/feature/130165/postmortem_blue_fangs_zoo_tycoon_.php,Tycoon 2: Marine Mania,pc,simulation,single,production,tools," Build times were relatively long while we were developing Zoo Tycoon 2. When we did the first expansion pack, Zoo Tycoon 2: Endangered Species, they got a bit longer. And by the time we were working on Marine, they were longer still until ultimately it took more than 4 ½ hours to complete all the builds that were needed for our milestone delivery. Although we’d looked in ways to improve the situation, a clear solution didn’t present itself. We mitigated the situation by becoming creative about when we kicked off builds and we did nightly builds religiously, but it was still a hassle, particularly during milestone weeks. It was clear that no one on the team actually liked how long they took and it would be a regular topic of complaint and discussion. Yet in spite of investigating various options, a method to speed them up didn’t materialize. To compensate, we established a scheme to do only one of our required builds on milestone day, test it and only once it was confirmed “good” would we kick-off the other builds. After discussing it with our Program Manager at Microsoft, we also had the OK to fall back on sending only the one build and uploading the remainder later over the weekend if necessary. Ironically, we never needed to actually use this scheme as we always had the full builds ready to go sometime on the Friday when they were due. Close to the end of Marine, our IT manager took up the challenge. After he did some experiments with various hardware options we ultimately cracked open the piggy bank to buy some tremendously serious hardware, and migrated our build scripts to the new environment. Voila! About three weeks out from our Zero Bug date, our IT manager successfully solved our build time problem and our build times dropped to under two hours. This was incredibly helpful as we kicked off a lot of builds between then and when the product was released for manufacturing. And it goes without saying that he was quite the “hero on campus” for quite a while after that!"
403,Blue Fangs Zoo Tycoon 2 Marine Mania,2007,https://www.gamasutra.com/view/feature/130165/postmortem_blue_fangs_zoo_tycoon_.php,Tycoon 2: Marine Mania,pc,simulation,single,production,bugs," We were building Marine on top of the original Zoo Tycoon 2, along with the previous expansions of Endangered Species and African Adventures and the premium downloadable content released in the Dino Danger pack, not to mention the previously released free downloads. So the test matrix for what the player could have installed was enormous. Some of the changes that were made in Marine actually required that changes be made to ALL the animals. This meant that every animal (oh, and that number is just shy of 100) needed to be retested to ensure that nothing was broken along the way. At one point we realized that one of the system changes that we were making was going to result in edits to more than 1700 files! This made our QA manager very nervous, and rightly so! After evaluating the risk, we found another way to implement that change without changing the core system. We also felt that in general, team members should have played Marine more. As a developer, you’re often so busy getting your work done, and fixing the bugs that are assigned to you, that it can be hard to just find time to sit down and play the game. At the very end of Marine, we wanted to keep team members on hand and available in case any issues cropped up and did not want to release them to work full-time on other projects. But at that point we had really locked down changes, so we had these developers spend time playing the game; and when they tested their own functional areas, it was amazing the things that they were able to zero in on simply because they knew what should be happening. We wish we had done a lot more of that sooner! Some problems were found pretty late which led to some stressful periods when we had to quickly make changes, some of them reasonably serious. It was unsettling, but all in all it was simply a huge job for QA between the new content and various expansion packs. In spite of some of these 20/20 hindsight moments, we’re impressed at the level of testing that was done and some of the amazingly creative things that our testers found."
404,Blue Fangs Zoo Tycoon 2 Marine Mania,2007,https://www.gamasutra.com/view/feature/130165/postmortem_blue_fangs_zoo_tycoon_.php,Tycoon 2: Marine Mania,pc,simulation,single,management-people,team," We introduced a concept that we called “Feature Groups” in Marine, and really the idea was to simply formalize the way people tended to work anyway… that is, by forming small groups of people from art, engineering and design who worked closely together to implement features. The idea was that feature design, task analysis, implementation quality review, etc. would all be performed by this group. But the groups ending up including anyone who might ever work on that feature, so they ended up being quite large. These large meetings often felt inefficient and poorly focused. Instead of zeroing in on the tasks at hand, they’d often turn into brainstorming sessions, and one thing we didn’t have at that point was a lack of ideas! We did end up reining them in, and it took everyone’s effort to keep them on an agenda and stop them from going down the inevitable tangents that would come up. In the end, we fell back onto the way we always tended to work and the groups went back to being smaller groups comprised of the key people working on the feature. In a way though it wasn’t all bad because we did draw some good ideas from the unexpected brainstorming, and the team members who participated ultimately had a much clearer idea of the product we were building."
405,Blue Fangs Zoo Tycoon 2 Marine Mania,2007,https://www.gamasutra.com/view/feature/130165/postmortem_blue_fangs_zoo_tycoon_.php,Tycoon 2: Marine Mania,pc,simulation,single,management-feature,scope," We had actually done a lot of design work on Marine while Zoo Tycoon 2: Endangered Species was still in development. In fact we delivered our first Marine milestone, which was all of our documentation (functional spec, tech spec, schedule, etc…) to Microsoft within four weeks of delivering Endangered Species to manufacturing. Needless to say there’s a lot of work in creating these documents and a few things were overlooked. For instance, although our initial schedule accounted for the fact that we needed to create animations for the guests sitting in the grandstands to react to marine shows, we overlooked the fact that the young guests needed their own specific animations for these actions as they would be unable to share those adult size animations. Oops! The technical spec and the schedule were probably the most impacted by this and fortunately we were able to revise our plans and absorb the things that fell through the cracks relatively painlessly (notice I did not say “pain-free”). We also underestimated some of the difficulty in transitioning to 3D movement through water. We knew it would be hard of course but it proved to be even more challenging than we expected. A lot of time was spent in this area to smooth out the pops, deal with obstacle avoidance, transition between land and water, etc. We expected it, we just didn’t expect quite as much of it."
406,Blue Fangs Zoo Tycoon 2 Marine Mania,2007,https://www.gamasutra.com/view/feature/130165/postmortem_blue_fangs_zoo_tycoon_.php,Tycoon 2: Marine Mania,pc,simulation,single,management-feature,multiple-projects," I can’t think of any project that I’ve worked on where I haven’t wished for a little more time… and this one wasn’t an exception. Because we had established a clear project vision statement at the beginning of development, we were able to deliver all of the things that we felt were essential to the product. And we’re extremely pleased with our results. But even still, there are always the little things that you wish you could do, or the easter eggs you think of that you could add and we certainly had our share of those. We also faced some serious pressure on resources…the human kind that is. Some members of the team were actually working on three different projects under the Zoo Tycoon 2 franchise simultaneously in areas that were notoriously hard to “schedule.” Not only did it stress some of the people who were in this situation but these multiple simultaneous Zoo projects also put a lot of pressure on QA…more on that a little later."
407,2K Boston/2K Australias BioShock,2008,https://www.gamasutra.com/view/feature/132168/postmortem_2k_boston2k_.php,Bioshock,console mobile pc,shooter,single,production,design,"Part of the reason for the late course change came from not having our internal product message clear from the beginning. BioShock had initially been positioned as a hybrid RPG FPS. The decision to reposition the game as a focused FPS came later, after our initial production phase in summer of 2006. Had we been working with an FPS mentality earlier, we could have made better use of our time. (...) We had many drafts of the story over the course of development, but the final draft turned out to be an almost complete rewrite. To make matters worse, we failed to fully exercise the narrative production path in early versions, so once the final draft was complete and recorded, many implementation and pipeline problems appeared for the first time that should have been caught and resolved earlier. The core issue was that a giant pile of content came online well past beta, and the team had to scramble to get that content correctly installed while also fixing bugs. Competing demands for time and resources meant that, unfortunately, some of the important narrative details of the game werent created until the final rewrite, and therefore required quite a bit of work to retrofit them into an existing game. To add to our woes, the first focus test feedback on the narrators voice came back extremely negative. People found the character extremely off-putting, so we recast the part at the last possible moment. On the positive side, this allowed us to refine several areas of the game (including the intro sequence) to ensure that the player knew what to do at the right time. On the other hand, it was difficult to get all the content in, debugged, and polished in the remaining timeframe."
408,2K Boston/2K Australias BioShock,2008,https://www.gamasutra.com/view/feature/132168/postmortem_2k_boston2k_.php,Bioshock,console mobile pc,shooter,single,production,technical,"Many of the processes and tools we used to develop BioShock were inefficient or confusing in implementation, leading to slow iteration cycles and bugs. Using a modified version of the Unreal engine, which the team had already used to ship two previous games, gave us a huge head start in developing BioShock. The gameplay team was able to mock up a playable version of the core game mechanics in just a few months, and the teams familiarity with the tools allowed us to get new gameplay spaces up and running quickly. However, the ease and familiarity of the workflow often led us to accept a solution that was faster to implement but slower to use rather than taking the time for a more efficient implementation. For example, there was no good convention for how to name script actions. Depending on the system, one script action might be called Change <SystemProperty> while another would be called Set <SystemProperty> or Modify <SystemProperty>. With hundreds of scripting actions available, designers often spent way too much time searching for the right tool to use. This could have been avoided with a scripting code standard. The content baking process for the console was time-consuming and difficult to troubleshoot. Frequently the only way to either identify or resolve a bake problem was to re-bake at the cost of up to an hour of work, and if the tools were actually broken in some way, it would take at least another bake cycle to be able to work effectively again. Once we reached crunch time, it was extremely painful to have to wait for the bake process to complete when people could have been working productively instead. We should have put more energy and time into speeding up the bake process sooner."
409,2K Boston/2K Australias BioShock,2008,https://www.gamasutra.com/view/feature/132168/postmortem_2k_boston2k_.php,Bioshock,console mobile pc,shooter,single,production,testing,"One of the most frustrating things about our decision to be more data-driven in tuning the game was the lack of actual good data to base that tuning on. Our game log system was barely adequate to analyze single play-throughs and became completely unwieldy when trying to analyze a single log file containing data from multiple play-throughs. We had no good methodology to define what information was logged and at what level of detail, so the job of parsing out the logs into understandable gameplay metrics was painful, slow, and ended with inadequate results. To further complicate the problem, most people in the office used shortcuts or cheat codes at the start of a level rather than playing from the beginning of the game, which caused us to base a tremendous amount of early tuning on a shaky set of assumptions about how players would choose to build their characters."
410,2K Boston/2K Australias BioShock,2008,https://www.gamasutra.com/view/feature/132168/postmortem_2k_boston2k_.php,Bioshock,console mobile pc,shooter,single,management-people,crunch-time,"The final crunch period on BioShock was long and hard. People who had been pacing themselves for six more weeks of work had to reset to three more months of work rather suddenly. Had we understood our polish cycle requirements sooner, or had known about the additional time earlier, we could have paced ourselves better."
411,2K Boston/2K Australias BioShock,2008,https://www.gamasutra.com/view/feature/132168/postmortem_2k_boston2k_.php,Bioshock,console mobile pc,shooter,single,management-feature,planning,"We knew from the start that wed have to make late changes to really bring the game to life-we had even built our original schedule to allow for six months of finalizing-but the amount of change that we ended up needing seriously exceeded our remaining schedule. Ultimately, we were very lucky to get an extension in the eleventh hour. (...) Our goals and vision pretty consistently overreached our production capacity. Ideas that started out small turned out to require a tremendous amount of coordinated support to reach a polished state. Although we were able to add resources regularly and make some cuts late in the game, our ability to plan for how much work it would take to bring any single idea or space from concept to completion was poor. In addition, we didnt have an effective internal review process set up until very late in the development cycle. We would work on levels to the definition of a milestone, get feedback, and then set it all aside for a while or leave it in the designers hands to polish. It wasnt until we created a more regular review cycle, where all the key players sat in one room and watched the gameplay session and someone logged all the bugs, that we were really able to define the amount of remaining work to bring a feature or level to completion."
412,Brothers in Arms Double Time,2008,https://www.gamasutra.com/view/feature/132198/postmortem_brothers_in_arms_.php,Brothers in Arms,console,action shooter,multi single,production,design," The Wii controls have such flexibility that you have to be careful not to overdo it. You dont want the players to need to do acrobatics in order to succeed -- unless, of course, youre making an acrobat game. From the first day of the project, we were brimming with ideas on how to use controls, the UI, and all the features that separate Wii from other platforms. In fact, we couldnt turn off the ideas. We didnt set a feature lockdown date, and as a result we were still tweaking the control scheme long after we should have. This left a lot of pieces feeling chaotic and unfinished right down to the wire. The user tests ultimately helped us finalize; however, we started them too late in development, so all of the best data was arriving late to the party. User testing was not planned from the beginning of the project, but rather was a thankful realization that we needed clean, external input in order to settle on a well-informed decision. The lesson there was to plan user testing from the start so that there are set periods earlier in the process where the team is prepared to show the game and react to the feedback. Without setting a firm lockdown date, we allowed the user testing and subsequent tweaks to continue too long. The realization that a variety of play styles would be better captured for players in two separate control schemes was positive, but it came with a cost. We had to scramble at the end to get UI, balance, and all of the other items that hinge on the controls updated and finished. Had we properly set a feature lockdown date, we would have been forced to conduct user tests earlier, secure the control scheme earlier, and then take the proper amount of time to get the UI and balancing worked out to each control scheme. Once again, we succeed because our talented team pulled through."
413,Brothers in Arms Double Time,2008,https://www.gamasutra.com/view/feature/132198/postmortem_brothers_in_arms_.php,Brothers in Arms,console,action shooter,multi single,production,technical," The number one development mistake we made was to create a build process that took longer than a few hours to complete. The build machines generated custom asset loading lists and memory maps for each level. The level was played on the NDEV by a bot while instrumented systems sent profile data back to the PC. The data was then analyzed and used to construct an optimal level package. This means that customers will experience short load times, dense levels, and smooth gameplay -- but the resulting build time was nearly 16 hours for the games 37 levels and five languages. This was acceptable early in the project when we were delivering builds two or three times per week and wanted to focus on gameplay features. However, the turnaround time was a painful delay during the final stretch when we needed to respond quickly to minor requests from Nintendo or Gearbox. We employed two build machines, but we would have come out ahead had we spent another week upfront to further parallelize and optimize the entire process."
414,Brothers in Arms Double Time,2008,https://www.gamasutra.com/view/feature/132198/postmortem_brothers_in_arms_.php,Brothers in Arms,console,action shooter,multi single,management-people,team," Having small development teams means everyones time is in high demand. We had managed to keep the team intact up until the end of the project, when we made the mistake of ramping down too quickly. As soon as we submitted to Nintendo, we reduced the team size. The result was that members of the team ended up bouncing between projects towards the end of Brothers in Arms: Double Timeas the game came back from submission and required more work. We had to shift resources to make sure we had the coverage we needed, which added to the distraction of submitting and then regaining the staff to respond to results. We took the gamble and lost here, and the lesson we learned is to give the project lifetime its proper due in all aspects, including submission and staffing."
415,Brothers in Arms Double Time,2008,https://www.gamasutra.com/view/feature/132198/postmortem_brothers_in_arms_.php,Brothers in Arms,console,action shooter,multi single,management-feature,planning," The last few weeks of any project are difficult. The end is close and everyone wants to see the game on the shelves. Weve seen a number of projects try to rush this stage and each one has been kicked to the curb by either the publisher or the console manufacturer. Being bounced invariably causes delays for the developers as everyone takes an interest in the issues and is distracted by the result. It might create ill-will within the lot check trenches too, since receiving anything but someones finished product is bound to be frustrating. But we ignored what we knew from experience when we heard that test turnaround times at Nintendo were getting longer due to the holiday rush. So we submitted early and entered the bounce-house for a few cycles. Eventually we emerged on the other side with a stamp of approval. But it was more like the nod of consent youd get from a border guard than the warm hug from your mom after school. (...)  The overall development effort went right, but from a scheduling and planning perspective, the development production staff got lucky. This project was fueled by excitement about bringing the Brothers in Arms property to the Wii. The pre-production technical due diligence was in the spirit of relax, everything will be juuuuust fiiiiiine. There was never an itemized list of the technical hurdles that the team would need to overcome. Its almost as if we were lulled into complacency by the cute white controller and that mustachioed muscleman in yellow at WarioWorld.com. After a couple of months, when the engineering team was staffed up to full strength, the scope of what was required on the optimization front became clearer. At that point, rescheduling to accommodate optimization is more art than science. A team can make huge strides in a short amount of time while that last little bit of performance to bring the game up from 27 to 30 FPS could require major changes. We managed to work through a host of platform specific and optimization complications: a byte-swapped platform, slow IO connection between the PC and NDEV, an elf that was 4x too large, excessive (and minor) memory allocations, a new and untested rendering pipeline, slow physics/ragdoll simulation, in-game IO hitches, and a seemingly endless stream of miscellaneous framerate hits. In the end, the consensus was that we could have done more pre-production planning or risk assessment to better set expectations with our publisher."
416,Torpex Games' Schizoid,2008,https://www.gamasutra.com/view/feature/132190/postmortem_torpex_games_schizoid.php,Schizoid,console,action,single multi,production,design,"So we experimented with a bot wingman, knowing that it wouldn't be as fun as the co-op: either the wingman would be too good, ruining the fun for you, or not good enough, becoming a frustrating liability -- and that's what we found. On easy levels the wingman bot practically wins for you (in the level Scorpio Dawn, for example, you don't even have to touch the stick) but on the harder levels, where strategy matters, the bot -- who is, after all, just a bot -- does some boneheaded things. Although we kind of enjoyed those later bot levels -- it became a game of figuring out how to windespite the bot -- the comparative weakness of the single-player mode was confirmed in focus tests, where they would give the co-op game four or five stars but the single-player game only three, or fewer if they were frustrated. (...) It's conventional wisdom in the industry that games thatonly have multiplayer don't sell. (...) Although we gave a nod to the single-player with our bot and uber modes, for the most part, we willfully ignored that conventional wisdom, hoping the sacred cow would make good steaks -- surely, we thought, Xbox Live Arcade, where most of its users are already hardcore and wired, is a place where the no-multiplayer-only rule can be broken. (...) Some can't talk their friends into playing; some have friends they would play with, but finding time in their busy schedules is tough. It's as if most gamers are a little... schizoid."
417,Torpex Games' Schizoid,2008,https://www.gamasutra.com/view/feature/132190/postmortem_torpex_games_schizoid.php,Schizoid,console,action,single multi,production,technical,"As has been discussed to death at various GameFests, there are various performance gotchas when using XNA Game Studio. A lot of times the natural expressions you'd want to use when programming in C# will cause unseemly hitches when garbage collects on the 360, and you're probably going to want to multithread what would, if you had written in C++ in the first place, probably run fine entirely on one core. The end result is the time you save prototyping and getting up-and-running in the first place can be lost in working around performance later"
418,Torpex Games' Schizoid,2008,https://www.gamasutra.com/view/feature/132190/postmortem_torpex_games_schizoid.php,Schizoid,console,action,single multi,production,testing,"Having made many console games before, we thought we were old hands at getting through TCR. There were many reasons why TCR this time was Worse Than Ever: Although J Allard claimed at the GDC Microsoft Keynote a few years ago that they'd 'streamlined' the TCR list for the Xbox 360 to a short list of 130 items, and that TCR would be easier to pass than ever before, this was somewhat deceiving: the previous TCR for the original Xbox was long, but it was effectively a list of test cases. There's still a test case document for the Xbox 360 TCR, and it's HUGE. I suggest you skip the short list of 130 items and go straight to the big one. All the console games we'd worked on before are single player. The number of TCR corner cases that crop up once you include local and online multiplayer in your game are huge. Even though XBLA games are smaller than their disc-based counterparts, they get a whole extra set of TCR cases they have to pass. The biggest and least necessary of these is having to be able to display leaderboards while the game is paused. This means your front-end-shell leaderboard displaying code better be compatible with your playing-the-game code. Being able to play the game from a memory card while still having it load fast is another fun one. When making a disc-based game you have a much larger budget and much more resources -- the end result is, for a low-budget game, TCR consumes a much more significant portion of your development."
419,Torpex Games' Schizoid,2008,https://www.gamasutra.com/view/feature/132190/postmortem_torpex_games_schizoid.php,Schizoid,console,action,single multi,management-feature,budget,"Well into development, we received two offers from publishers for the right to publishSchizoid -- no strings attached. We'd get to keep the IP and everything. We knew that if we took the money, we'd probably never sell enough to see a single royalty check (as with 95% of publisher-developer deals), and we'd probably -- looking at median sales on Xbox Live Arcade -- make more in the long run if we didn't take it. But we're a startup! We should have just taken the money and started to share the risk -- we had lived off our savings for long enough."
420,Ironclad/Stardocks Sins of a Solar Empire,2008,https://www.gamasutra.com/view/feature/132039/postmortem_ironcladstardocks_.php,Sins of a Solar Empire,pc,strategy,multi single,production,design,"Both Stardock and Ironclad recognized the need for one, but the budget and time to do something of equal creativity and quality to the core game was simply not there. With Ironclads team, Stardocks game team produced the opening cutscene that introduces players to the Sins of a Solar Empire universe. But from there on, players play random maps and scenarios rather than going through a story-driven campaign. This was the most widely raised criticism in reviews; on a game that averaged almost a nine out of 10, one can only imagine what the scores would have been with a campaign."
421,Ironclad/Stardocks Sins of a Solar Empire,2008,https://www.gamasutra.com/view/feature/132039/postmortem_ironcladstardocks_.php,Sins of a Solar Empire,pc,strategy,multi single,production,technical,"On the PC, there is no standard way for games to interact with other users over the Internet. As a result, users inevitably have to configure routers to port forward. Stardock and Ironclad hoped to make this experience as seamless as possible. Even with a six month long multiplayer beta, there were still users who had a hard time dealing with personal firewalls and their routers (99% of users have no problem but 1% of thousands of users is still a lot of people). The good news is version 1.1 will include groundbreaking new network technology that should eliminate this problem altogether."
422,Ironclad/Stardocks Sins of a Solar Empire,2008,https://www.gamasutra.com/view/feature/132039/postmortem_ironcladstardocks_.php,Sins of a Solar Empire,pc,strategy,multi single,production,testing," Vocal public beta testers were able to convince us to change features that would have been better left untouched. For example, the beta allowed the AI to take over for dropped players in multiplayer. However, beta testers complained that with the save/restore option, players could just restart the game and having an AI player get involved interfered with the experience. As a result, the feature of allowing computer players to pick up after dropped players was removed in the retail release (it was added back in 1.03). (...) Sins of a Solar Empires retail release had computer AI that was as good if not better than most RTSes, but it was considerably weaker than what is commonly found in turn-based 4X games. This was simply a function of time and lack of opportunity to test it against live human opponents."
423,Ironclad/Stardocks Sins of a Solar Empire,2008,https://www.gamasutra.com/view/feature/132039/postmortem_ironcladstardocks_.php,Sins of a Solar Empire,pc,strategy,multi single,management-feature,planning,"Most of the ""what went wrong"" with Sins of a Solar Empire are tied to budget and time. Could Sins have gotten higher scores if it had waited another six months and incorporated a single player campaign, stronger AI and more content? Probably. Would it have sold better? A release date of August 2008 would have put it 30 days out from the release of Spore as well as other major titles."
424,Ironclad/Stardocks Sins of a Solar Empire,2008,https://www.gamasutra.com/view/feature/132039/postmortem_ironcladstardocks_.php,Sins of a Solar Empire,pc,strategy,multi single,business,marketing,"In the fall of 2007, it was difficult getting the general PC gaming media to give Sins of a Solar Empire the time of day. Only physical trips by the CEO of Stardock to particular game magazines secured any serious game coverage in some cases. (...) Stardock failed to get Impulse, its next-generation digital distribution platform, completed in time for release with Sins of a Solar Empire. Impulse takes all of Stardocks first-party applications and all of the games it sells (both first and third party) and combines them into a single platform. It was hoped that Impulse would be ready for release by Sins launch and included in the retail package. Instead, Impulses release was pushed back to this month."
425,Fizz Factors The Incredible Hulk,2008,https://www.gamasutra.com/view/feature/132227/postmortem_fizz_factors_the_.php,The Incredible Hulk,console,action,single,production,tools," With our studio having developed numerous DS games, we had engines to support a variety of game genres for the platform in both 2D and 3D. Since none had tackled fully destructible environments, however, we had to undertake extensive engineering work up front to prepare. The benefits of achieving this goal did not end up outweighing the costs. While the engine changes were underway, the art and design team could not develop on target. This affected our relationship with the client since it was relatively late into production before we had a solid build to show."
426,Fizz Factors The Incredible Hulk,2008,https://www.gamasutra.com/view/feature/132227/postmortem_fizz_factors_the_.php,The Incredible Hulk,console,action,single,production,technical,"The tile-based system we devised called for artists to create three tiles for each square of gameplay. While this wasnt three-times the overall amount of art we would have created for other side-scrollers, it was a considerable art hit and technical challenge. We were fortunate to have a great environmental artist with excellent tech problem-solving skills. Working with the programmers, he devised a system for implementing the tiled elements within the memory constraints in a way that kept them from looking tiled. He also created a first pass on all of the tiles. However, the chore was immense, stressful, and is not anticipated to be repeated. Because the environmental art demands were far more than we anticipated, we had to add two additional artists to the backgrounds from alpha till the end. Taking the placeholder tiles created by the initial artist, they shaped them up and extended the blurring effect between the tiles to occlude any checkerboard effect."
427,Fizz Factors The Incredible Hulk,2008,https://www.gamasutra.com/view/feature/132227/postmortem_fizz_factors_the_.php,The Incredible Hulk,console,action,single,management-feature,cutting-features,"Again, the upfront tech investment limited our polish time. Rather than work at a measured pace from the start, we were pushing hard to get all content in the game and be feature complete by alpha and beyond. While our client was enthusiastic about the fully destructible aspect of our design, the detracted polish time that resulted from its implementation was a warranted source of frustration on both sides."
428,Saber Interactives TimeShift,2008,https://www.gamasutra.com/view/feature/132007/postmortem_saber_interactives_.php,TimeShift,console pc,shooter,multi single,production,tools,"Sometimes the issues were known and there were pre-existing workarounds or fixes available, but every once in a while we were stumbling upon an untested piece of code, or an unanticipated use of a subsystem, or a lack of a vital piece of documentation which made some concepts unclear to our engineers. What came as a surprise, though, was that whenever an issue arose with any of these components it oftentimes required massive efforts to nail it down. Conference calls were scheduled, mini-apps that demonstrated the problem in a testbed scenario were built and sent to the providers, and support trips were set up to bring the engineers on-site to address the issues ""right on the spot"". All of that slowed down the development somewhat and was always a ""scare factor"" to the senior management. What if an engineer from one of these middleware providers would not be available for a quick trip to our offices? (...) The lesson learned is that its certainly a great idea to utilize third-party solutions, but because those providers dont work for you they may have other priorities, so enough time needs to be allocated to deal with the possible issues. Its also crucial to integrate and test all third-party components as early in the dev cycle as possible to be able to accommodate to any contingencies. (...) As the engine side of the technology was slowly becoming available, the artists had to start working on textures and materials right away, using our previous-gen tools. The entire texture set for the game and supporting materials had to be reconverted many times to keep up with the changes the tech team was doing. However when the system was finally ready and the supporting shaders were written another major problem arose. We could not play the game at reasonable framerates because we did not have a shader-precompilation system. Because shaders were compiling at run-time, the game was chugging every other frame at any decent visual quality setting (it takes up to 30 seconds to compile an average shader in TimeShift on PC, and we had thousands of those shaders). In other words, all we could do was to switch to shaders 2.0, position the camera, then switch to shaders 3.0 -- and then after a five minute pause a beautiful picture appeared. The problem was massive. We assigned Victor Streltsov, one of our most seasoned and creative programmers, to address the issue. We hired another senior programmer, dedicated to helping Victor with that assignment. Four months later, our ShaderCache tool was born. Think of a huge distributed computation system which is installed on all 100+ workstations we have in the office, governed by a server-based app which farms out individual shader compile tasks to the clients. Even with a system like this it took us over 12 hours to build a complete shader database for all platforms (by the time we finished, it took no more than an hour to complete this task, thanks a number of optimizations we did). While this system was being built, however, the life of texture artists was pretty miserable. They could work with test scenes just fine, but seeing the results of their work in the full scenes was nearly impossible. (...) Unfortunately, even once we were able to pre-compile all the shaders for our scenes, another pretty big issue emerged. We had a few thousand unique shaders per scene, and because they were very complex -- it took over five minutes to create them all during level loading on PC. Obviously, having the user wait five minutes for a level load was unacceptable. Also, for some hardware configurations the game was crashing while creating all those shaders. Our lead rendering engine designer Anton Krupkin was working out a solution with NVIDIA and ATI engineers. It was another external dependency which we identified pretty late in the process. Another set of custom builds had to be made and delivered via secure channels to the hardware vendors. Some of the problems that we saw could never be reproduced on their end because we used some specific combination of graphics cards and the drivers -- so we brought their engineers to our New Jersey office. Ultimately, thanks to the unparalleled support of NVIDIA and ATI staff, the issue was resolved and driver updates were issued on time for the release of the game."
429,Saber Interactives TimeShift,2008,https://www.gamasutra.com/view/feature/132007/postmortem_saber_interactives_.php,TimeShift,console pc,shooter,multi single,production,technical,"We had minimal time to spend on preproduction and feature testing in the early stages. We had to be working on assets at the same time as the technology to support those assets came online. Obviously, we were stumbling upon unforeseen issues all the time. One of the biggest technical challenges we had was with our ShaderCache system (see Wrong #4) -- but thats not the only example. ShadowMap technology only became functional at the time we were at Alpha, so Olga Cheremisova and our other lighting artists had a very limited time to go through all the levels and set up proper lighting. Sometimes we did not have the time to properly upgrade the tools to accommodate the volume of new assets. Our lightmapping tool was developed two years ago, but it was never tuned to handle the very large scenes that we were coming up with. In the worst cases, it was taking up to 45 minutes to calculate lighting for some of the larger scenes, which is obviously totally unacceptable and made the life of our lighting artists even tougher. The only viable option we had was to continually upgrade hardware and give multiple computers to the key lighting artists. Another issue we faced was production speed due to constantly evolving technology. Although our engine was highly optimized in time for ship, we were not able optimize the engine fully during development, which affected the work of artists and scripters who unfortunately had to struggle with the game running at sub-optimal framerates. It was only at the end of production that we had time to get the engine running fast. Had we been able to do this earlier, the design department would have had an easier and more efficient time scripting our levels. Finally, because the final dev schedule was so compressed, most assets were coming online late -- even though everybody involved was pushing as hard as possible, the sheer volume of new assets was mind-boggling. This included delivery of mocap, VOs, localization data, FMVs, and other components. (...) It was not much easier with VOs and localization assets. VOs were recorded and localized at the same time, even before integration of English-language VOs in the game was complete. Anna Naleushkina, Sabers AP responsible for those production tracks, was frantically coordinating from our St. Petersburg office the movement of those tens of thousands of assets between the recording studio in LA, the processing house in Vancouver, and localization team in Dublin. Surprisingly, nothing was ""lost in translation"". To be honest, we dont know if theres a good solution to handle this -- other than add more time and make the project more sane. That clearly wasnt an option for our team, though. When you have such a massive number of assets coming in and you need to do the integration very quickly, it simply creates a project-wide havoc, and it feels as if the skies are falling. There was never enough time to fully update the tools or pipelines, so all we could do was to clench our teeth and plow forward. (...) Even though we nearly shipped a game with a decent networking code a year ago and had an understanding of what it takes to get it done -- we still underestimated the complexity of the task. We set a high quality bar, which was to create a robust multiplayer engine rivaling those in the best products -- and we did not want to settle on anything less than that. Our multiplayer mechanics were very strong and fun to play, so we had to support them with proper tech to allow 16 players to play online. In order to reach the mass-market we established pretty low bandwidth requirements, and to achieve this goal we had to do a pretty major rearchitecturing of the networking engine. Once the commitment was made and the work started -- there was no going back. Our old networking code was no longer compatible with the rest of the engine, but the new system was insanely complex and needed to be properly debugged. Normally, you want to stay away from ""insanely complex"" systems because they are hard to develop, debug and maintain. But it looks like its the nature of the business when it comes to multiplayer. All the issues we had in single player were now multiplied by a factor of 16 (the maximum number of players TimeShift supports). (...) Even though we finally succeeded, this entire experience was scary, and worked totally against our normal planning. "
430,Saber Interactives TimeShift,2008,https://www.gamasutra.com/view/feature/132007/postmortem_saber_interactives_.php,TimeShift,console pc,shooter,multi single,production,testing,"You want to test stability? Performance? Bandwidth handling? Great! All you need to do is to find 16 people that are available at request, ideally sitting in different offices (St. Petersburg, NJ and LA), make sure they all have the same build, and do the test. Then repeat as needed. The amount of testing we had to go through was absolutely insane. We came up with a concept of mini-builds, which allowed us to distribute builds faster. We ran dozens of tests on a daily basis assembling bandwidth handling stats, trying to provide the multiplayer team with enough information to do the analysis. A dedicated multiplayer QA team in LA was running daily tests with their counterparts in India, running multiple 16-player matches with different settings on various bandwidths. But a week before release we were still unhappy with the results -- even though our lead multiplayer engineer, Stas, was leaving the office at 5 AM nearly every day of the week. It still remains a mystery how he pulled it off -- but he did. (...) A lesson we learned was that we underestimated the massive scope of testing required to bring the multiplayer component to the quality level we wanted. Also, multiplayer coming together so late in the process did not allow us to have any beta testing of this component of the game."
431,Saber Interactives TimeShift,2008,https://www.gamasutra.com/view/feature/132007/postmortem_saber_interactives_.php,TimeShift,console pc,shooter,multi single,production,prototyping,"Certainly the last extension was an exception to this and allowed us to bring the game to the level of quality it deserved, piecing the elements together. It worked out for the most part, but the story came out relatively weak. We were constrained by the fact that we could not really take the game through a proper preproduction and planning phase, and could not change a lot of levels to accommodate to the final creative vision. Certain members of the gaming press criticized us sharply for that."
432,Saber Interactives TimeShift,2008,https://www.gamasutra.com/view/feature/132007/postmortem_saber_interactives_.php,TimeShift,console pc,shooter,multi single,management-people,delays,"A total of four executive producers, two writers, and a large number of creative people worked on the game. By the time we finished, we were operating under Amendment 17 of our initial contract. An insane number of piecemeal two to four month extensions never allowed us to neither bring the game to the finish line, nor make a big enough overhaul. The game as it was in September 2006 was a mishmash of way too many creative visions."
433,Saber Interactives TimeShift,2008,https://www.gamasutra.com/view/feature/132007/postmortem_saber_interactives_.php,TimeShift,console pc,shooter,multi single,management-people,crunch-time,"Because of the extension, our team had to spend two summers in a row in the office. Sabers senior management knew that crunch was coming, and it was inevitable. We also knew that the last thing we wanted to happen was to burn the team so much that somebody would snap in the middle of the project and quit -- so the goal was to make this crunch feel reasonable. We also had to come to terms with a few over-zealous people at our publisher, who ""expected"" the team to go into crunch ideally sometime in January, knowing that the project wouldnt end until mid-October. That certainly wasnt an option. Mandatory 55-hour work weeks for most people at the team were finally established starting in May. The primary tools we had at our disposal were proper planning and established production processes. We knew that our primary ""peopleware enemy"" was the frustration factor, and we tried hard to minimize it. (...) Working exceptionally long hours, dealing with unexpected technical hurdles, managing multiple SKUs, and adapting to ever-changing business requirements, working on TimeShift was a very trying experience for everyone involved, both at Saber and at Sierra. We could have never anticipated what it would take to put together a AAA product under such tight deadlines, but we were determined to make it to the finish line and to create a great game."
434,Saber Interactives TimeShift,2008,https://www.gamasutra.com/view/feature/132007/postmortem_saber_interactives_.php,TimeShift,console pc,shooter,multi single,management-people,team,"It was our first attempt to use mocap, and probably because of that, it took us over a month to get the first mocapped animation in the game and nail down the pipeline (of course, when we finally got that first animation in we lost Ruslan Vizgalin, our lead animation programmer, for three weeks -- he was in the hospital fighting pneumonia). This whole process was wreaking havoc on our lead AI programmer Sergey Mironov, the scripting team and the producers -- most animations and animation transitions were not working for about a month, the game was not playable, and it was impossible to easily tell what the source of a bug was -- was it one of the many animation glitches, or a scripting issue, or an AI navigation problem?"
435,Saber Interactives TimeShift,2008,https://www.gamasutra.com/view/feature/132007/postmortem_saber_interactives_.php,TimeShift,console pc,shooter,multi single,business,marketing,"Another negative effect of the game being so long in production, and being close to the finish line so many times, was that by the time it was getting close to being released it had already been shown to the press over and over again. How many exciting stories can you tell to the same journalists whove seen the title three or four times already? The surprise factor was totally lost, and Sierras PR staff had to overcome a lot of skepticism. Because the game was shown primarily to the U.S. press, PR efforts were easier to carry out in Europe where the game was fresher. Thats probably one of the reasons we are getting consistently higher review scores in that region."
436,Naughty Dogs Uncharted Drakes Fortune,2008,https://www.gamasutra.com/view/feature/132203/postmortem_naughty_dogs_.php,Uncharted Drakes Fortune,console,action adventure,single,production,design," Although we took a lot of the right steps in our approach to developing a realistic story and character, we seriously underestimated the impact that realism would have on our game design. A major example of this was the difficulty we faced while we were tuning the health of the enemies. We initially set up the enemies to take a bunch of hits before dying, so that each enemy felt like a formidable opponent. However, we soon started getting feedback from players that it seemed incredibly unrealistic for the enemies to take more than a couple of shots before going down. This meant that we had to constantly retune our setups and spawn additional enemy waves to compensate for the change. At the last minute we also implemented an injured state for the enemies which changed their animation when they were hurt, so that they could react to getting shot in the arm or the leg. A different kind of struggle between reality and game design happened when we tried to visually differentiate between the different enemy classes. We initially approached their character designs with the same subtle approach that we applied to the main characters, but because the enemies are usually some distance away from the camera on the screen, and hence are quite small, these subtle differences werent noticeable by the player."
437,Naughty Dogs Uncharted Drakes Fortune,2008,https://www.gamasutra.com/view/feature/132203/postmortem_naughty_dogs_.php,Uncharted Drakes Fortune,console,action adventure,single,production,tools," Partly driven by a desire to share technology, we developed all-new tools for Uncharted, including a new asset-management system, our first GUI build tool, and a shader and material editor. But in June of 2006, about halfway through the games development cycle, the team faced a big crisis. Creating our first E3 teaser trailer exposed numerous problems with our new tools, and people were very frustrated. We realized that wed bitten off too much with our tools approach -- wed tried to be too clever, coming up with convoluted approaches that were intended to solve every last problem that anyone had ever had with each kind of tool. To make it worse, wed gotten distracted by our lofty aspirations, and had left it very late to implement a build pipeline that let people actually run and play levels. To solve these problems we moved back toward our familiar Jak and Daxter method of doing things for many of the tools. From then on things got better and better, and we began to get really good traction on building out the game."
438,Naughty Dogs Uncharted Drakes Fortune,2008,https://www.gamasutra.com/view/feature/132203/postmortem_naughty_dogs_.php,Uncharted Drakes Fortune,console,action adventure,single,production,technical," We had a very mixed-media approach to level layout for Uncharted. Basically, whatever worked well for the designer of the level was okay with us. Some designers started with plan-view pencil sketches or detailed layouts on squared paper. Most of us used Adobe Illustrator and simple prototype geometry built in Maya, which let us iterate on our level designs more easily. Sometimes we would move back and forth between both applications, annotating screen captures of Maya geometry in Illustrator, and then making more changes to it. If we hadnt been so pressed for time, we would have iterated each level many more times before we moved on to the stage of creating finished environment art. We found that the more we could polish a level while it was still simple from an art point of view, the less time we wasted redoing work on the environments later on."
439,Naughty Dogs Uncharted Drakes Fortune,2008,https://www.gamasutra.com/view/feature/132203/postmortem_naughty_dogs_.php,Uncharted Drakes Fortune,console,action adventure,single,management-people,communication," When we first started developing ideas for Uncharted, we explored a lot of different directions. Although we always knew that we wanted to make a third-person character-action game set in a load-free world, the rest of the gameplay, story, and settings changed a lot in our early discussions. For a variety of reasons, it took us a while to settle on the final concept of the game. And, because we were very focused on creating technology in the early part of the project -- the engine, the rendering pipeline, and tools -- we didnt have the programming support to prototype our gameplay ideas. This slow start put a dent in the teams morale, but once we focused the design, communicated it to the team, and began implementing against it, everyones spirits lifted and we began to move forward with great speed."
440,Naughty Dogs Uncharted Drakes Fortune,2008,https://www.gamasutra.com/view/feature/132203/postmortem_naughty_dogs_.php,Uncharted Drakes Fortune,console,action adventure,single,management-feature,scope," Having held ourselves up by not getting a good build pipeline in place early on, we were then playing catch-up throughout the project. A recurring theme in our postmortem discussions for Uncharted has been that, in many cases, we wished that wed started building out the game with the simple tools that became available early on, rather than waiting for the technologies or gameplay code we thought we needed to support our sometimes overly complex design or production ideas. This problem has some similarity to the tools problems we faced -- we set our goals too high, and had to bring ourselves down to earth in order to be able to move forward. For example, we had wanted to use a system of interchangeable body and clothing parts for our enemies in order to get a huge apparent variety of enemies and reinforce the reality of the world. We wanted the player to have the feeling that each enemy character was unique. The problem was that this held up our whole enemy implementation process. We couldnt start finalizing the enemies until we finally realized we didnt have time to create our parts system, and simply got on with making the enemies that are in the shipped game."
441,NinjaBees A Kingdom for Keflings,2009,https://www.gamasutra.com/view/feature/132314/postmortem_ninjabees_a_kingdom_.php,A Kingdom for Keflings,console pc,simulation strategy,multi single,production,technical," One problem with an open sandbox world is that we dont directly control the complexity of the scene being shown to the user. Almost the entire tech tree can be unlocked and built in one world. Add in the multi-texture effects in the terrain, support for user-painted roofs and walls, and season-specific building and ground textures, and texture management gets pretty complicated. We knew it would be an issue, but we underestimated the painful impact this would have on total memory usage and we planned poorly from the start. It would have been harder to arrange, but we should have been more aggressive in making building assets share common elements (roof materials, wall materials, etc.), and we should have been more consistent in building design."
442,NinjaBees A Kingdom for Keflings,2009,https://www.gamasutra.com/view/feature/132314/postmortem_ninjabees_a_kingdom_.php,A Kingdom for Keflings,console pc,simulation strategy,multi single,production,testing," Sure, we extensively playtested the early experience. But it was a long time before we had a stable build that let us play through the game. That plus too much focus on the early game and not enough on the middle and the end resulted in balance and quality issues. We played through to the town hall what feels now like a thousand times, but played the mid-to-late games far less. There are some confusing points mid-game where its easy for players to get stuck. Theres a bit of a late-to-mid-game grind that I wish we had eliminated. Theres a general lack of balance in some of the late game when it comes to time between accomplishments for the user. And there are crashes later in the game that more thorough testing would have uncovered."
443,NinjaBees A Kingdom for Keflings,2009,https://www.gamasutra.com/view/feature/132314/postmortem_ninjabees_a_kingdom_.php,A Kingdom for Keflings,console pc,simulation strategy,multi single,management-feature,feature-creep," I know were far from the first developer to tell this sad story. The original design called for a flexible dynamic music system, avoiding the monotony of the standard music loop by using a system of layered, changing riffs and variations. We put huge amounts of time into this from designers and programmers and audio people. We rewrote the code several times, spent many hours massaging the music assets, and wrote pages and pages of scripting. But... While there were moments where it seemed like it was going to work great, the final results were ultimately not acceptable. At the very end of the project we scrapped the dynamic flow of music and rewrote the system one more time, keeping only a simplified version of the dynamic layering of tracks based on city complexity. And even that is a subtlety that was easily not worth the effort we put into it."
444,NinjaBees A Kingdom for Keflings,2009,https://www.gamasutra.com/view/feature/132314/postmortem_ninjabees_a_kingdom_.php,A Kingdom for Keflings,console pc,simulation strategy,multi single,management-feature,budget," Our pockets are not deep. We had only the money we had saved up and additional cash borrowed from friends to make this game. Budget pressure meant cutting a few corners here and there, not fixing a lot of things we would loved to have fixed at the end, and cutting features we would loved to have added, like local multiplayer. On top of this, we need to keep everyone at the company gainfully employed, so as team members came off other projects we had them help out with this one even when the timing was wrong. Designers were working on particle effects before the game-specific technology really let them see what the results would look like. Artists were doing production work when the leads werent available to work with them on direction. All of this meant less efficiency and more pressure on the pocketbook. We went over budget and way over schedule, risking damage to the company. As a consequence of playtesting and an evolving design, we felt there were certain features that had to be included, and felt it was critical to scrape up the resources necessary and delay release to get them in. We dont regret this decision, but we certainly will consider these lessons when planning future budgets."
445,Bionic Commando Rearmed,2009,https://www.gamasutra.com/view/feature/132305/postmortem_capcomgrins_bionic_.php,Bionic Commando Rearmed,console pc,platformer,multi single,production,design," The original game ends with a classic image of last boss Master Ds head exploding. The money shot. It had to be in there or the fans would be extremely disappointed. But at what cost? The cost was a censored version. I cant think of any other game that would be a teen-rated game with the exception of three seconds at the end. Had we not included the over-the-top head popping last scene, then we would have only needed one version, and could have saved bugchecking an entire new version of the game. This is another area where I wonder if the amount of time and money we put into creating a censored version was really equivalent to the sales that version achieved. It could also be said that not including the final scene would have been the right financial choice... But as many people in this industry will tell you, sometimes making a game is about doing something you love and doing it because you think it will be fun. This was the one part of the game that I allowed the gamer within to make the final call. Yes... we need to see that head explode! ...and it still puts a smile on my face."
446,Bionic Commando Rearmed,2009,https://www.gamasutra.com/view/feature/132305/postmortem_capcomgrins_bionic_.php,Bionic Commando Rearmed,console pc,platformer,multi single,production,technical," As with everything in this industry, you have to take the negatives with the positives. So, while the announcement trailer was definitely one of our brightest moments, it also created a major problem. Im a big proponent of presenting something fully translated. Maybe its due to my localization roots, but at any rate, for the trailer we decided to create versions for every language the game was going to be released in. Thats six. Unfortunately, that means submitting six different versions. Add to that the fact that you need an ESRB rating on the North American version, shouldnt have it on the European version, and that there is a different logo for the Japanese version and you end up having to encode lots of trailers. Submitting the various metadata was also no easy task. Although Im proud of the end result, when I think about the amount of work we put into it, I dont think the end-result necessarily justified all the extra work for all involved. From now on, Ill stick with English and Japanese only."
447,Bionic Commando Rearmed,2009,https://www.gamasutra.com/view/feature/132305/postmortem_capcomgrins_bionic_.php,Bionic Commando Rearmed,console pc,platformer,multi single,management-feature,scope," This is probably a trap that many other publishers have fallen into as well. There is a tendency to think of digital titles as much smaller than their packaged brethren but in the end, they can be just as much work. The initial schedule we started out with was quite aggressive but something we thought was manageable. In the end we underestimated the submission process, number of bugs, and multiple versions that needed to be submitted and missed our mark by about four months. That wouldnt have been so bad if I hadnt opened my big mouth and stated that we were releasing in May... something that could also easily be listed as another big mistake... fortunately, we only have to list 5."
448,Bionic Commando Rearmed,2009,https://www.gamasutra.com/view/feature/132305/postmortem_capcomgrins_bionic_.php,Bionic Commando Rearmed,console pc,platformer,multi single,management-feature,feature-creep," In the end, text is a slippery slope. The amount of localization, planning, and programming is no easy task. I know the programmers on the title thought this was a bad idea from the start, and certainly its not the type of feature that will sell a lot of additional units, but we went forward with it anyways. It created a lot of page break mistakes and of course the Japanese localization was a colossal headache. Its funny, but even though I worked in localization for several years, I never did it the other way around (English into Japanese). All of the games I worked on were Japanese into English. With Japanese you basically have to code in where each line breaks by hand. English and other Western languages allow for automatic line breaks quite easily, but Japanese is incredibly time consuming. Capcom is a Japanese publisher, so we needed to have a Japanese version, but what a huge amount of work to put into a single language when compared to the other languages!"
449,Bionic Commando Rearmed,2009,https://www.gamasutra.com/view/feature/132305/postmortem_capcomgrins_bionic_.php,Bionic Commando Rearmed,console pc,platformer,multi single,business,monetization," The dilemma with this one had to do with the process we took when deciding the release price. Lets just say that I should have crossed my Ts and dotted my Is before opening up the price poll for BCR. After the fact, I was told that several internal and external people thought that $10 was too cheap. While I stand by the decision in price, I should have definitely done some more internal groundwork before moving forward with the decision. Being a producer is a political game, and you need to have people that support you internally. In the end, I think this choice may have burned some bridges for me that may not be easily fixed."
450,Gaijin Games BIT.TRIP BEAT,2009,https://www.gamasutra.com/view/feature/132432/postmortem_gaijin_games_bittrip_.php,Bit.Trip Beat,console mobile pc,action,multi single,production,design,"In the original design, there were no boss battles. Why there werent seems silly in retrospect, because as a gamer I love boss battles. Regardless, I chose not to include them in the design. The more we played the game, the more we realized that we needed something. However, this realization came quite late in the project, after all of our other tasks had already been scheduled. And due to the small scope of the game, as acting producer, I didnt want to cut anything in the schedule to make time for the new work wed have to do to implement bosses. So, we piled them right on top of the crunch that we were already doing. Because we were so far along in the development process, each boss had to be done in roughly two to three days. As you can imagine, that doesnt lead to well thought out design, nor does it lead to enough tuning or difficulty balancing. In the end, the bosses were rushed, and while I think they ultimately add value to the game, they definitely feel rushed when I play it."
451,Gaijin Games BIT.TRIP BEAT,2009,https://www.gamasutra.com/view/feature/132432/postmortem_gaijin_games_bittrip_.php,Bit.Trip Beat,console mobile pc,action,multi single,production,technical,"However, after completely neglecting any sort of localization pipeline whatsoever, towards the end of the project, as we started doing our Lot Check audit, we realized that error messages needed to be localized. These are the messages that tell you that the save data is corrupt, etc. This threw a huge monkey wrench into our process, because early on when we decided not to localize anything, we chose a font that had no special characters in it. Furthermore, our engine had no localization support in it. In the end, we used a different font for the error messages and crammed a localization pipeline into the game and rushed the error messages. Had we thought of this at the beginning, our error messages could have used our in-game font, and since we have so little text in the game anyway, we probably would have just localized the whole thing from the get go."
452,Gaijin Games BIT.TRIP BEAT,2009,https://www.gamasutra.com/view/feature/132432/postmortem_gaijin_games_bittrip_.php,Bit.Trip Beat,console mobile pc,action,multi single,management-people,delays,Forgetting about localization until the very end of the project somewhat diminished the games accessibility worldwide due to all in-game text being in English only. It also delayed our project by about one week.
453,Gaijin Games BIT.TRIP BEAT,2009,https://www.gamasutra.com/view/feature/132432/postmortem_gaijin_games_bittrip_.php,Bit.Trip Beat,console mobile pc,action,multi single,management-people,crunch-time,"When we started this project, we decided to do whatever we could to avoid crunch mode, the plague of the video game industry. Yeah, that didnt go so well. About two-thirds of the way through the project, we realized just how much work it takes to run a company as well as make a game -- especially if youre making your first game. The newness of everything compounded upon itself and overburdened each of us. Just to stay on top of everything, we found that we had to work more hours. And then more hours. And then more. Contributing factors to the crunch included do, do, do mode, running a new company, not having a producer, learning the new toolsets, setting up our development environment... The list goes on. Each of these things is necessary for a development studio to run but they have little to do with one specific product. Finding the time to juggle all these responsibilities led to crunch. Is the project better because we crunched? In this case, I think it is. But our quality of life certainly was not. And a poor quality of life can lead to resentment of ones job among other negative side effects."
454,Gaijin Games BIT.TRIP BEAT,2009,https://www.gamasutra.com/view/feature/132432/postmortem_gaijin_games_bittrip_.php,Bit.Trip Beat,console mobile pc,action,multi single,management-feature,planning,"Since we had strong time constraints and since were only three men, we each had to do more than an engineer, artist, or designer would normally do on a project. This led to what I call ""do, do, do mode"". Basically, you have to keep doing things and keep moving because if you stop to think for even a moment, you can sometimes throw your entire groove off. Obviously, its best to stop, take a breath, and remember that doing something right is ALWAYS better than doing something wrong. But in the heat of the moment its easy to lose track of the gray area between right and wrong -- because there is one. The ""right"" way is not always the right way to do something. And sometimes the ""wrong"" way can be more right than we would ever think. That being said, sometimes the wrong way is actually the wrong way. One example of how do, do, do mode threw us for a loop was how we moved the player through level two. Because of our camera system, we couldnt animate the camera through the level (or so we thought). So Mike, our artist, who is not an animator, ended up rigging the entire level as a character and animated it around the camera. This was insanity. A day task of animating the camera through the level became a week task of animating the level around the camera. After the project was done, we all realized that making a 10 minute change code-side could have allowed us to do this the right way, but since we were pushing so hard and not pausing to consider all options, we unnecessarily gave ourselves more work. Learning when to ""do"" and when to ""dont"" would have helped us to keep the projects velocity higher."
455,Gaijin Games BIT.TRIP BEAT,2009,https://www.gamasutra.com/view/feature/132432/postmortem_gaijin_games_bittrip_.php,Bit.Trip Beat,console mobile pc,action,multi single,business,marketing,"While technically not a development issue, this is one of the things that I believe we did very poorly with in terms of timing, and it may have affected our sales in the end. Being that we had no marketing money and no time to do a ""real"" marketing campaign, we tackled something within our means and launched a viral marketing campaign. The video was well-received and led to a lot of internet buzz, as did thesubsequent images and our CommanderVideo website. However, for one reason or another, the games release didnt follow close enough to the high of that buzz. Our viral campaign died down well before the game was released and people shifted their attention prematurely"
456,Realtime Worlds Crackdown,2009,https://www.gamasutra.com/view/feature/132515/postmortem_realtime_worlds_.php,Crackdown,console,action adventure,multi single,production,tools,"Changing the target platform caused serious problems for Crackdown. Over the course of its four-year development, Crackdown moved from PC (where it was prototyped), to Xbox (where it was initially intended to stay), back to PC (in preparation for move to Xbox 360), to Xenon Alpha, then Xenon Beta, and at last to Xenon/360 Final. Even on the final hardware, we continued to take hits from significant system software updates every few months. When at last the platform stabilized during the last year of development (post hardware launch), development efficiency increased massively. (...) With a relatively small development team to begin with and difficulty in recruiting experienced staff, the policy was to bring in middleware solutions wherever possible in an effort to reduce development time. By far the most significant of these was Criterions Renderware Graphics and Studio. However, we hit the wall full speed when the project shifted from Xbox to Xenon. Criterion opted not to support Renderware Graphics 3.7 in the transition, forcing us to move to an early beta version of 4.0. Not only was version 4 an unfinished product, but some features that we had come to rely on were not (and would not be) present at all (though in some cases Criterion did provide special code). Since the middleware was suddenly a work in progress, each update came with a whole new set of bugs, transforming us overnight into hapless beta testers. Technical documentation was insufficient and in some cases inaccurate. (...) In hindsight, we realize that we simply did not adequately investigate the suitability and potential pitfalls of this new version of Renderware. Had we done so, we would have known that the correct decision would have been to back out and replace it all with our own technology. Yet with mounting pressure from the publisher to get on Xenon Alpha hardware (in itself a mistake given its tenuous relationship to the Xbox 360 proper), Im not convinced the politics would have allowed it anyway. (...) The start-up time and general performance of Renderware Studio suffered heavily as the volume of game data steadily increased. Data sorting and searching was also inadequate so, as the structure became increasingly more complex, changes became correspondingly more dangerous. The inherent design of the system made it impossible to fix this."
457,Realtime Worlds Crackdown,2009,https://www.gamasutra.com/view/feature/132515/postmortem_realtime_worlds_.php,Crackdown,console,action adventure,multi single,production,bugs,"Initially progress was good with only the occasional bug, but soon the mounting pressure caused a knock on of programmer errors (un-initialized data, linking game logic to render data, random number issues). All sync bugs were Severity 1 but needed to be tracked sequentially with no way of knowing how many lay in wait. For a long time, the soulcrushing task of tracking these down fell to just one person whom nobody envied. Mass scale sync-locked development will always be difficult, but we should have planned to share the burden of identifying the bugs, if not to improve understanding of the key contributing issues, then at least to maintain coder sanity!"
458,Realtime Worlds Crackdown,2009,https://www.gamasutra.com/view/feature/132515/postmortem_realtime_worlds_.php,Crackdown,console,action adventure,multi single,management-people,delays,"Microsoft has a policy of reviewing all its titles one year out (OYO). Crackdowns OYO was in October 2005. In our view, progress and control was sufficient to agree that we were indeed looking at a completion date approximately one year later. Microsoft, on the other hand, preferred that the title hit before financial year end: We were faced with the unenviable task of driving toward a fairly hopeless May 2006 deadline. As May approached, the spotlight moved to August, and when that evaporated, the sights were set on a tight but realistic October deadline. Eventually we slipped past our original OYO estimate by two months."
459,Realtime Worlds Crackdown,2009,https://www.gamasutra.com/view/feature/132515/postmortem_realtime_worlds_.php,Crackdown,console,action adventure,multi single,management-people,team,"Initially, Xbox Crackdown was slated for spring 2005, and this always looked tight. In early 2004, when it was first proposed that we aim to get the game on the next Xbox, we reasoned that our team size would be about 15 to 20 people short. (...) Under the circumstances, new recruits came on board pretty quickly, but it still takes time to find quality employees (and we refused to lower our standards to fill vacancies faster). As the hiring wore on, we compensated for the shortfall by attempting to find more people and ultimately suffered from having too many cooks in the kitchen and saw diminishing returns."
460,Realtime Worlds Crackdown,2009,https://www.gamasutra.com/view/feature/132515/postmortem_realtime_worlds_.php,Crackdown,console,action adventure,multi single,management-feature,feature-creep,"Another shocking reality was that the number of coders yet to be hired was expressed in the order of tens. In a pragmatic development environment there would have been three choices: 1) increase the budget, 2) lower our ambitions, or 3) pull the plug. Unfortunately, the stakeholders were far from pragmatic, and rather than moving to jettison anything that wasnt in direct support of the clearly defined project pillars, they used the scope discussions as a forum to add yet more ideas. Several deep cuts were eventually approved (some creeping back in over the remainder of the project), but it still wasnt enough. At least we finally had a handle on the stakeholders definition of minimum content."
461,Realtime Worlds Crackdown,2009,https://www.gamasutra.com/view/feature/132515/postmortem_realtime_worlds_.php,Crackdown,console,action adventure,multi single,management-feature,planning,"We got a couple of milestones past our first playable demo (which went down really well but was held together with paperclips and sticking plasters) before feeling the sinking sensation that the project was out of control. In the face of a great deal of pressure to continue making incremental progress, the production team agreed to immediately derail the entire team from chasing short-term disconnected goals and instead embark on a full-scale project audit. Much of the team was tasked with breaking down the complete design with implementation information so that it could be processed and converted into a simple and solid plan. A multi-disciplinary panel was charged with reviewing the extensive detail of each component in turn so there could be no more complaints that, for example, audio wasnt being given due and timely consideration. With a pass to add development estimates, resource groups, and stakeholder priorities, the resulting project scope spreadsheet was incredibly cumbersome. The team at large resented it bitterly. Unwieldy as it was, it was still an invaluable tool for at last conducting a meaningful triage of work against available time and resources."
462,Twisted Pixels Splosion Man,2009,https://www.gamasutra.com/view/feature/132593/postmortem_twisted_pixels_.php,Splosion Man,console,platformer,multi single,production,technical,"We knew from the very beginning of development that we would have a co-op multiplayer mode inSplosion Man and that we wanted people to be able to play together online. We didnt have the manpower to add networking support to our engine internally so we decided to contract someone to help us out. Unfortunately, it took a little longer than we had hoped to find someone to fill this role which left only a short four months to implement our network layer and get the whole game synched up over the network. Because of the short development cycle, many of the games features werent implemented until quite late causing network synching of these features to be pushed back even later. Late in development, we started realizing that we were using way too much bandwidth and that the game played poorly when packets are lost or when lag is significant. We improved this as much as we could without risking the games stability in the short amount of time we had left. Luckily, our contractor was quite skilled and did a fantastic job given the time that he had. Unfortunately, afterSplosion Mans release, we received a lot of complaints from players having problems playing over the network. So, we took it to heart and have spent some time working on a Title Update that immensely improves network performance. The good thing that comes out of all of this is that we learned a lot and have managed to improve our network code for use on future games."
463,Twisted Pixels Splosion Man,2009,https://www.gamasutra.com/view/feature/132593/postmortem_twisted_pixels_.php,Splosion Man,console,platformer,multi single,management-people,team,"Quite often it can be difficult and time-consuming to handle being an owner of the company, a manager, and a key team member all at the same time. Sometimes theres really just too much to do and it seems like everything is high priority. When working on Splosion Man, we found ourselves losing a lot of time from the games actual development to figuring out the marketing, designing and producing pitch materials for future projects, deciding company strategies, managing employees, dealing with press and fan emails, balancing our budget, managing outsourcing, and countless other things. Its a strange balance because all of these things need to get done; however, if the game itself isnt progressing then many of these things dont really matter. (...) Outsourcing has worked great for us on our titles, and partners like Nikitova, LLC and Virtuos art studios continue to help us on our games. However, on Splosion Man we ended up needing more outsourcing than we originally intended. Since our current outsource partners were busy creating assets for us, we turned to some other unproven studios that ended up not working out and ultimately created more work for our artists. Very early on during The Maw, we researched a number of outsource companies, had meetings, and ran art tests so we could determine their quality level. This helped us to determine who would be good partners that we could trust to hand off important character models over to. Fortunately for us, we had planned this time into our production schedule and it turned out to be great for us. On Splosion Man, though, we overlooked the need to research new outsourcing companies. Instead, we were forced to rush into some outsourcing partnerships that ended up not producing usable results, which generated additional work internally. We made this clear to the new outsourcers we were working with, but no amount of explanation got across this fact to them. In the end it was a waste of time and money."
464,Twisted Pixels Splosion Man,2009,https://www.gamasutra.com/view/feature/132593/postmortem_twisted_pixels_.php,Splosion Man,console,platformer,multi single,management-feature,multiple-projects,"Although Twisted Pixels primary focus is developing original games using our own IP, we also do contract work for other games. During Splosion Mans development, we had more concurrent projects going on than we have had in the past. It was typical for us to have a small team of programmers working on outside contract work while our main team is working on our own game. However, during Splosion Man we were also finishing upThe Maw downloadable content, had another small team working on a port of another game, had a couple of people working on some contract work, and were working with another developer who was porting The Maw for release on Windows. This stretched those of us who were involved with managing these projects pretty thin, especially given that we were also active key members of the Splosion Man team. There were just too many things to monitor and do with too few people to make sure that it was all running smoothly."
465,Twisted Pixels Splosion Man,2009,https://www.gamasutra.com/view/feature/132593/postmortem_twisted_pixels_.php,Splosion Man,console,platformer,multi single,management-feature,planning,"At Twisted Pixel we work with a very talented audio studio called Gl33k, who has worked on all of our titles. When bringing them on for Splosion Man, we were unsure of how many sound effects the game would need, and how long they would have to create the audio assets for the game. We originally based our sound estimates onThe Maw, but that proved to be a very wrong assumption, asSplosion Man ended up having way more sound effects, including special musical numbers and other prizes than The Maw. Our ""go to"" guy at Gl33k was Matt ""Chainsaw"" Chaney, and he worked extremely hard to make sure all the new things that went into the game everyday received the sound attention that they deserved. Making things even harder on him was the fact that most of the final art and animation assets werent going into the game until towards the very end, which made it difficult for him to figure out what we wanted and where it should go. While this is a negative point in our postmortem (bad scheduling on Twisted Pixels part, no clear path for Gl33k when sound should go in), it luckily became a positive as well. Chainsaw loved the game and loved what he was doing for it, so he put in an insane amount of effort to make sure that the sound design was of a higher caliber than what most people would expect from a $10 downloadable title."
466,Wadjet Eyes The Blackwell Convergence,2009,https://www.gamasutra.com/view/feature/132576/postmortem_wadjet_eyes_the_.php,The Blackwell Convergence,mobile pc,adventure,single,production,design,"In the first two Blackwell games,Blackwell Legacy and Blackwell Unbound, your character carried a notebook with her. As you went through the game, youd collect clues and youd write them in your notebook. These clues acted like inventory items that you could combine together and get more clues. This interface was touted by the critics as being very unique and innovative (althoughDiscworld Noir did it first), but the players told a different story. For most players, the notebook gave them the greatest amount of frustration. ""Its obvious that Cecil Sharpe and the band C-Sharps are related,"" complained players of Blackwell Unbound"". Why doesnt my character know it too?"" My suggestion to combine the ""C-Sharps"" and ""Cecil Sharpe"" clues in the notebook was met with replies of ""Oh. Thats annoying"". At first I shrugged off these complaints, but they were right. Combining clues in this fashion was not an intuitive way to get through a puzzle, even though its a very appropriate mechanic for a mystery game. I had originally designed Blackwell Convergence to include the notebook mechanic and incorporated several puzzles with it, but after the umpteenth complaint about the system I knew it was dead weight and I had to remove it. However, this caused a problem. One the one hand, removing the notebook made the game much more streamlined and pleasant to play, but on the other hand it removed a significant amount of challenge. In the end, I decided that making the game more fun was more important than making it more challenging, so I removed the clue-combining aspect of the interface completely. The result? Many more players mourned the loss of the notebook than I thought would, especially the hardcore fans of the previous games, and the critics. A lot of reviews said that the ""simplification"" of the game was the one thing holding it back from being the best in the series. I still stand by the decision, but I wish I had made this decision earlier so I would have had time to come up with something better to take its place."
467,Wadjet Eyes The Blackwell Convergence,2009,https://www.gamasutra.com/view/feature/132576/postmortem_wadjet_eyes_the_.php,The Blackwell Convergence,mobile pc,adventure,single,management-people,delays,Blackwell Convergence came out in July of 2009 -- almost a year and half after it was promised.
468,Wadjet Eyes The Blackwell Convergence,2009,https://www.gamasutra.com/view/feature/132576/postmortem_wadjet_eyes_the_.php,The Blackwell Convergence,mobile pc,adventure,single,management-people,team,"I had a brilliant idea. I was going to create a bunch of short animated cartoons starring the two characters from the game and start spreading them around the internet. Curious about the characters in the cartoons, people would come to the website to learn more about them. (...) I was a bit naïve, and I figured I could just hop onto Newgrounds and find some budding young animator who would be happy for the opportunity to make these in return for a bit of cash. I found some soon enough, but not a single one of them followed through. In the end, I ended up hiring a professional animation studio to do them. They gave me a generous rate, but even still I could only afford to make three of the cartoons and I had to severely limit the amount of animation in each one. (...) I had to -- gulp -- actually do some marketing and PR work myself. This forced me to become much more self-reliant, as I explained above. (...) Being an indie studio made up of me and a couple of freelance artists, there are limits to what I can accomplish."
469,Wadjet Eyes The Blackwell Convergence,2009,https://www.gamasutra.com/view/feature/132576/postmortem_wadjet_eyes_the_.php,The Blackwell Convergence,mobile pc,adventure,single,management-feature,multiple-projects,"I soon announced thatThe Blackwell Convergence would be finished by March of 2008. What I did not expect was that I would get a call from a major game publisher who was interested in hiring me to design and produce a fully-funded game. This was an offer I couldnt refuse, so I accepted, and soon, Emerald City Confidential was greenlit and on its way. (...) Unfortunately, this also meant that I had to put Blackwell Convergence on the back burner. I didnt have the energy or the manpower to work on both projects at once, so production on Convergence was almost completely halted. This disappointed many fans, who had been promised a new game by March and werent going to get it. When they asked when the game was coming out, I could only reply that I didnt know."
470,Wadjet Eyes The Blackwell Convergence,2009,https://www.gamasutra.com/view/feature/132576/postmortem_wadjet_eyes_the_.php,The Blackwell Convergence,mobile pc,adventure,single,business,marketing,"So I had my cartoons, but it wasnt long before I realized I had no idea what to do with them. I put them on the usual placeslike YouTube, GameTrailers, Newgrounds, and announced them on various game sites, but they did not generate the buzz I was expecting. I like the cartoons. They are funny and people seem to like them. The idea of making the cartoons was sound, but my limited marketing experience left me with no idea what to do with them once I had them. (...) In reading over this postmortem I realize that most of my ""rights"" are about evolving the series and my ""wrongs"" are about sales and marketing, which I guess shows where my priorities are."
471,Wadjet Eyes The Blackwell Convergence,2009,https://www.gamasutra.com/view/feature/132576/postmortem_wadjet_eyes_the_.php,The Blackwell Convergence,mobile pc,adventure,single,business,monetization,"The slicker production values did help Convergence sell much better than its predecessors, but it also took much longer to earn back the production costs. So in terms of pure profit, my earnings are exactly the same as the previous titles. I am satisfied enough with how the game is selling, but I do have to ask the question: would I have been better off keeping the lower production values (and cost) of the original games? Honestly, I dont know. Perhaps some kind of cost/sales analysis would shed some light, but as an indie developer with very little experience with business or sales I wouldnt know where to begin. (...) When the game leapt up to the top 10 charts of game portals like Big Fish, PlayFirst, and iWin, I figured I had finally ""made it"" and had discovered the secret to successfully selling my games. In a nutshell, I was going to rely on the distribution networks to do it for me. That was in 2007. Now, a whole two years later, things are different. A lot of distribution channels have lowered their prices to the point where its very difficult for a developer to earn any serious money. In addition, the competition is a heck of a lot more fierce and the economy is severely limiting the number of games people buy. The result is that customers are buying fewer games and paying less for them. So when Convergence went up on the portals, I was not surprised to see it struggling to get noticed. I learned my lesson very quickly: I could no longer rely on the game portals to sustain the majority of my income. They can make up a part of it, but relying on them completely was a bad idea. (...) I am constantly re-evaluating what works and what doesnt and trying new approaches in how to tell an interactive story, but for too long I ignored the business end of things and that became a liability."
472,Crystal Dynamics Tomb Raider: Underworld,2009,http://www.gamasutra.com/view/feature/132511/postmortem_crystal_dynamics_tomb_.php,Tomb Raider: Underworld,console pc,action,single,production,technical,"At the start of Tomb Raider: Underworld, Crystal Dynamics as a studio decided to pursue the Holy Grail of internal development: a robust and powerful shared code base to use as a jumping off point for all future games. This proprietary engine would be augmented and maintained by dedicated engineers who could provide the common functionality our games would need, while team programmers could focus on features specific to their games. The studio believed that because Tomb Raider: Underworld and the shared code base would both be based on Tomb Raider: Legend code, the efforts could be combined even given our tight production timeline. A lot of talented and hardworking programmers were put on the shared code team, including many of those who engineered Tomb Raider: Legend, so skill was not an issue. The biggest problem here turned out not to be over-ambition or complicated dependencies (though these were certainly issues). The problems were much more related to ownership and priorities. Within a team, when schedules begin to slip and need to be put back on track, the entire team can get together, redefine its mission, and make whatever collective changes are needed to bring production back into alignment with the calendar. But the shared technology group was not on the team. While its charter was to serve the teams, it had to serve multiple teams with conflicting needs. From the point of view of each team, the shared technology group was a cadre of programmers that didnt report to our lead engineer. It was an enormous dependency that we could only influence via petition and persuasion, and frequently could not even schedule around as we had limited visibility into their progress. We knew from the beginning that basing Tomb Raider: Underworld on a nascent and evolving code base was an enormous risk, a big potential pitfall. So why did we walk into this trap with our eyes wide open? At the time, it seemed that the potential payoff was worth the risk, and that we had the right people working on the problem, so we marched along with the shared technology group and did the best we could knowing that some of the challenges we were facing could ultimately yield more efficiencies down the road. Ultimately, however, some of our fears were realized as we had indeed overestimated our ability to overcome all the known risks. (...) Second, aside from porting Tomb Raider: Underworld to the Xbox 360, this was our first project made for what were then next-generation consoles. It turned out to be far more complex and content-intensive than we anticipated, and because our capacity to create layouts was so compromised in preproduction, we couldnt adequately test, measure, or scope the art side of the production equation. (...) The categories described here are only five of many more. (Broken builds and long build times get honorable mentions, and the added distinction of raising blood pressures more than probably all other issues combined.)"
473,Crystal Dynamics Tomb Raider: Underworld,2009,http://www.gamasutra.com/view/feature/132511/postmortem_crystal_dynamics_tomb_.php,Tomb Raider: Underworld,console pc,action,single,production,prototyping,"Our preproduction got rocked by the previous two issues-the shared technology effort and how refactoring rendered previously playable mechanics unplayable-but we didnt have the option at the time of moving our ship date. This meant getting much less out of preproduction than we hoped for in two major areas. First, it put us in a position similar to our time with Tomb Raider: Legend, with designers creating layouts based on paper metrics, where the mechanics would not be playable until later. Though this is a clear violation of good design practice, we felt that the damage could be contained because the design team had just finished making a Tomb Raider game with many of these same mechanics, so we could get by for longer without them. But the situation was far from optimal. (...) Because we needed to enter production by a certain date to have a reasonable chance at shipping on time, we ended preproduction before we had an adequate understanding of our art production needs and processes, and just as critically, before we had developed the pipeline and support structure we would need later for outsourcing art."
474,Crystal Dynamics Tomb Raider: Underworld,2009,http://www.gamasutra.com/view/feature/132511/postmortem_crystal_dynamics_tomb_.php,Tomb Raider: Underworld,console pc,action,single,management-people,communication,"One of the earliest engineering tasks involved refactoring the player code to make it more robust and more able to accept new functionality. This effort was important to be able to efficiently expand our feature set, but it wasnt understood at the time that this refactoring meant taking apart the engine and putting it back together in such a way that it became unplayable for the duration. The design team had been anticipating a comfortable period of working on layouts, experimenting with interactions, creating more evolved setups, and otherwise engaging in exploratory and iterative design that wasnt possible on Tomb Raider: Legend. But our preproduction hopes disappeared as much of the player functionality went offline. The usual delays and schedule slips prolonged this dark period, during which the engine parts were scattered across the lawn. The problem was compounded when we had to move into production and deeper into Alpha without many core player functions working. This had a big chilling effect on early design and layout efforts, and the effects of this lasted all the way to the final product. Fundamentally this was an issue of miscommunication, which is a traditional gremlin lurking on every project. We fought this gremlin from the start, and given the size of our production did a fair job of it, but this particular mishap was unique in how irreversible it was. Improving communication is about better information trafficking up front, but just as importantly, quickly addressing miscommunication when it arises, so we dont consider this one of those traditional mistakes that we repeated."
475,Crystal Dynamics Tomb Raider: Underworld,2009,http://www.gamasutra.com/view/feature/132511/postmortem_crystal_dynamics_tomb_.php,Tomb Raider: Underworld,console pc,action,single,management-people,team,"We were also understaffed in certain areas due to slots on our team being held for team members who were still finishing up Tomb Raider: Anniversary. In the end it was as though we planned to have a concept phase, a prototyping phase, and a preproduction phase, but in practice only did some concept, some prototyping, and then jumped straight into production before finishing preproduction. (...) We also had an unusual number of weddings, honeymoons, production babies, and untimely departures on this project throughout the team, but most painfully among the discipline leads. We lost our art director midway through production; not to another company, but to another industry, so there wasnt much we could have done about that. We lost our lead designer toward the end of production when she had a baby; also something we couldnt have done much about (nor would we have wanted to, as the baby is beautiful!). And most tragically, our lead level designer died suddenly during the first half of production. These key figures in our effort were extremely valuable not only because they were smart and capable, but also because they were a part of the success of Tomb Raider: Legend, and therefore knew intimately how to make this kind of game. People like that are rare, because Tomb Raider games are hard to make for many reasons, and in the timeline we were under, they were irreplaceable. We compensated for these losses with people on the team assuming new responsibilities to fill in the gaps, and some of these team members did amazing work and really saved us, but theres no denying that we would have had a much smoother production and a better end product without these losses."
476,Crystal Dynamics Tomb Raider: Underworld,2009,http://www.gamasutra.com/view/feature/132511/postmortem_crystal_dynamics_tomb_.php,Tomb Raider: Underworld,console pc,action,single,management-feature,scope,"Yes, we tried to do too much. Its human nature to reach as far as you can, and to think your arm is longer than it really is, but some games are more sensitive to scale than others. If you make a sudoku game, you can keep making grids until time runs out and youre done, but with games that have interlocking feature sets, plus a beginning, a middle, and an end, its much harder to scale properly, and harder still to change scale during production. There were success stories with respect to our scope, and with reductions we made all the way to Beta, but in the final analysis we tried to do too much, got locked into needing to do it, and scrambled to get it all done to the quality standard we hold ourselves to. The reason why scale kept outdistancing our deadlines is mostly because we underestimated the complexity of next-gen development and did not spend enough time in preproduction smoking out all the issues. The biggest casualty of making too much game wasnt the crunch time-we had less crunch than on past games-and it wasnt that we left parts of the game undone, since there are no holes in the experience. The most damage was to an element that was very important to us: polish. We padded our schedules an unprecedented amount, and then some, in order to have sufficient time to polish."
477,Crystal Dynamics Tomb Raider: Underworld,2009,http://www.gamasutra.com/view/feature/132511/postmortem_crystal_dynamics_tomb_.php,Tomb Raider: Underworld,console pc,action,single,management-feature,planning,"Much of this pressure came from the collision between ambition and capacity, made worse by the cognitive dissonance between seeing a game on paper that you want to have, and knowing that the production data indicates you cant have it by the prescribed date, but being unwilling to change either one. At the time, and indeed throughout the project, we knew it was risky to move on to the next phase of production before the previous one had completely finished, yet we did so anyway. This is one of those repeated mistakes, so why did we do it? Cognitive dissonance is part of the answer. Wishful thinking is another part. But mostly, in an imperfect world, every risk you take is a gamble that may fail, and at the end of the endeavor, you end up needing to explain only the risks you took that didnt pan out, like this one. (...) Unexpected complexities in next-generation development, along with communication throughout a team larger than the studio had ever seen, consumed our polish time and more. This makes the mistake of underestimating our polish time more understandable, even though this is also one of those repeated ""what went wrong"" scenarios, because we were dealing with a whole new class of unknowns. This wont be the case going forward, however, so the team should be equipped next time to avoid the usual mistake of not scheduling enough polish time."
478,Crystal Dynamics Tomb Raider: Underworld,2009,http://www.gamasutra.com/view/feature/132511/postmortem_crystal_dynamics_tomb_.php,Tomb Raider: Underworld,console pc,action,single,business,marketing,"Demos were particularly aggravating because we specifically set out to avoid this issue from the start. We demanded long term demo schedules, and we received them. We refused to bow to some requests for demos that werent on the schedule, and this was honored by the publisher. But there was also a slippery slope, where some unscheduled demos were accommodated because of various circumstances. We sometimes faced a dilemma where marketing gave us a choice in which a particular demo, at the expense of two weeks of production time, seemed like the better long term choice for the success of the product. There are too many stories of great games disappearing into the noisy marketplace to ignore the importance of demos and good PR. Yes, these demos often result in a reduction of product quality, and yes they distract from team focus, but in the end, as painful as it feels, its sometimes best to do the demo. This is a clear example of walking into a trap with eyes wide open-making a mistake that you know about in advance-but it happens repeatedly because the answer isnt to refuse demos, or to plan for them better. The answer is to make a game that doesnt come together only at the end."
479,Freeverses Top Gun For iPhone,2009,https://www.gamasutra.com/view/feature/132604/postmortem_freeverses_top_gun_.php,Top Gun,mobile,shooter,single,production,design,"Top Gun is an iconic 80s movie and features an iconic jet. All the trainees in the original movie fly this particular model aircraft. When we developed the game, we decided to not use the same jet from the movie, but instead, a more modern model that is currently in service. Big mistake. (...) I think the final decision to use the new aircraft was a result of that 3D model looking the best in-game. And when we learned its not even used by the Navy (haha whoops) we classed it as a prototype and just acknowledged that in the dialog. But people didnt care; they wanted the jet from the movie. And in retrospect I totally agree. We eschewed reality in every other aspect of this game in favor of awesomeness, but when it came to the jet we tried to rationalize not having the same jet as the movie. (...) The bottom line is, we didnt give players what they wanted, and not featuring the same jet as the movie was the most frequent complaint we got about the game after its release. We also sinned big time when it comes to the ending of the game. In fact, in my opinion, we committed two separate sins. The first was ending the game on a cliffhanger. I think the story escalated tension and spun a few different arcs very well, but instead of reaching resolution, they all end at the end of their second act. (...) The missile lock-on system is actually very customizable in code: the number of missiles you can fire at once, the speed at which they lock on, the speed at which they reload, and your bullet speed and power are all customizable, but at no point did we allow for it to be upgraded or changed. This would have been a great place to allow the player to progress over the course of the game, allowing them to kill enemy jets with greater efficiency. Similarly, we added a few different types of jets towards the end of the project, to add variety to the enemies. But instead of introducing these jets over the course of the game, they appear from the first level on. So instead of having new enemy types and new abilities be rewards that are unlocked over all the levels, we blew them all on the first level. (...) At the end of the project, the issue of ""hours of gameplay"" was raised. To address this, instead of adding more levels (which we had no time to do) or adding more gameplay elements, such as leveling up or unlockables (again, no time) we instead simply raised the number of jets that you needed to kill in each dogfighting segment. Where originally you would have to kill 10 jets in a dogfight to continue, you had to kill 30. While it added a few minutes onto each level, it also killed the pacing of levels and made the dogfighting sections more tedious, as the limit of even my patience is about 20 jets. When I say it was changed at the end of the project, I mean in the last few days. Enemy difficulty balance was off. A few enemies and targets dont make themselves vulnerable for very long, or stay out of targeting range for absurdly long periods of time. One example of this is seen in the gunboats in the third mission. In Mission 3, you have to take out 10 gunboats scattered around a few islands jutting out of the water. The problem is that a few of them are only visible and therefore targetable for a moment. If you miss it, you have to make another pass at the island."
480,Freeverses Top Gun For iPhone,2009,https://www.gamasutra.com/view/feature/132604/postmortem_freeverses_top_gun_.php,Top Gun,mobile,shooter,single,production,testing,"We scheduled the project in such a way that we were making levels right up until the deadline. While we did make sure to test all the levels upon completion, we spent the vast majority of time testing the stability of the levels, and simply whether or not they worked. Whether or not a part of the level was too easy, too difficult, or too boring -- these were all things that received less focus than they deserved, and we ended up shipping with a few annoying gameplay issues."
481,Freeverses Top Gun For iPhone,2009,https://www.gamasutra.com/view/feature/132604/postmortem_freeverses_top_gun_.php,Top Gun,mobile,shooter,single,management-people,communication,"The problem arose when those players saw Top Gun and assumed it was a free-roaming game, only to buy it and find themselves disappointed that it wasnt. And they were right to be disappointed -- when your most visible tools for marketing yourself on the App Store are your title, icon, and first screenshot, it was tough to convey that to people. A few in-depth reviews on blogs like TouchArcade that explained to people that yes, the game is on rails, and no, thats not a bad thing, helped mitigate the confusion somewhat, but obviously you cant reach everyone. The best solution in retrospect for this is tricky -- perhaps releasing more footage, or even a lite version. A trailer or even one level for free could have shown people that the game is not free-roaming, and if you really didnt want it if it wasnt, well, we could have saved you a few bucks. And with more footage or a free version, these people could have seen that it is still very fun anyway, and at least could have bought it when it was an informed decision. (...) Because we were short on time, and because making the levels was the ""fun"" part, the level design was split up to myself and two other guys. While this allowed the levels to be completed much faster, it resulted in a less consistent level progression. There are three noticeably different styles of levels present in the game. These styles include level difficulty, cutscenes, and even the personalities of the characters expressed through mid-flight banter."
482,Freeverses Top Gun For iPhone,2009,https://www.gamasutra.com/view/feature/132604/postmortem_freeverses_top_gun_.php,Top Gun,mobile,shooter,single,management-feature,cutting-features,"Originally, our story spanned 16 levels, and when we had to condense the game to 10 (due to time constraints) instead of condensing the story, we decided to leave it open for a possible sequel. (...) Speaking of no payoff, the other sin we committed was having a quick ending sequence. After the final mission, the game simply cuts to a ""To be continued"" screen, then kicks back to title. This one still kills me, because I hate when games do this to me (I remember playing through over a hundred levels in Rampage for the NES as a kid only to get the word ""Congratulations"". Total BS!) We just did not have enough time to complete that portion. I had a whole credits sequence visualized too, set to Cheap Tricks ""Mighty Wings"". If only we had a little more time (not to mention the rights to the song)."
483,Mommys Best Games Weapon of Choice,2009,https://www.gamasutra.com/view/feature/132292/postmortem_mommys_best_games_.php,Weapon of Choice,console,action,single,production,tools," In retrospect, I feel I waited too long to getWeapon of Choice to run on the Xbox 360 (mid-June for a November release). I went into it simply not knowing exactly what I was getting into and overestimated how much the Xbox would enhance the games performance. With XNA on the PC, a generational garbage collection system is used. This basically means its smart about how and when to collect garbage. As it turns out, the system on the Xbox 360 is non-generational, which basically means any little thing that needs garbage collection will slow down the game. When I first got Weapon of Choice running on the Xbox 360, the games smooth PC framerate speed devolved into a slideshow. It took months to deal with all the garbage collection issues and get the framerate up to a playable speed. I didnt do my homework on the target platform and it hurt badly, even though documentation existed. (...)  As stated before, I developed custom animation and modeling software for creating the game art. I also wrote my own file managing system, even though the XNA Content Pipeline was created to manage assets. (Maybe I have some control issues?) This worked fine on the PC, as I was able to subvert the Content Pipeline and load everything with my own system. However, my custom asset pipeline was rendered useless when I finally converted the game to the Xbox 360, as XNA only allows assets loaded through the Content Pipeline. I ended up keeping my custom loading code and simply wrapped it with special code to pass it through the Content Pipeline. As it turned out, this special code incurred many garbage collection hits since, in .NET, strings are immutable, and with each new string, more memory was allocated. I wrote a special character parsing function to load the data (not using strings and incurring no new memory allocations). This resulted in other issues that required a patch after launch; my parser failed to handle the idiosyncrasies of some languages which swap the comma for the decimal in floating point numbers."
484,Mommys Best Games Weapon of Choice,2009,https://www.gamasutra.com/view/feature/132292/postmortem_mommys_best_games_.php,Weapon of Choice,console,action,single,production,technical," Shipping a launch title is not something I enjoy. Technical and policy issues change constantly if theyre yet known at all. Although the benefits of being one of the first games on a new, uncrowded platform outweighs these issues, there can still be plenty of problems. Making a Community Game is different because generally, you have no special publisher connections and only get information as it becomes publicly available. For Weapon of Choice, we were not involved in the New Xbox Experience beta and therefore couldnt test our game with the new dashboard. It was very frustrating designing features like trial mode and hoping they would work; we were only able to test trial mode definitively on the day the game went on sale. All Community Games are required to use XNA Game Studio (GS) 3.0, which was made available shortly before the channel launch. Porting to GS 3.0 was quick and painless; however, WoC level load times increased by about 40%."
485,Mommys Best Games Weapon of Choice,2009,https://www.gamasutra.com/view/feature/132292/postmortem_mommys_best_games_.php,Weapon of Choice,console,action,single,management-people,team," Before this project, there were many things, such as rigging models and making sound effects, which Id never tried before. At the top of that list was programming a multi-threaded game update loop. I changed the game loop to utilize threading too late in the development, which created hundreds of crash bugs, stemming from code in which two threads would access the same static data. I mainly operated from a Use Threading Because It Will Make Things Faster mindset, rather than confidently designing code to enhance the runtime performance. During profiling, I could toggle between single and multiple processor use on the Xbox. This showed that threading provided around a 15% speed-up. This was good, but it definitely never reached the magical 60fps level."
486,WayForwards A Boy and His Blob,2010,https://www.gamasutra.com/view/feature/132659/postmortem_wayforwards_a_boy_and_.php,A Boy and His Blob,console mobile pc,platformer,single,production,design,"The boss battles were a source of strife throughout development, and the team was not satisfied with the end results. We realized too late that the methodical gameplay of Blob really doesnt support actiony bosses of this nature. The beast boss in particular comes to mind. The idea behind the beast boss was that you would be dodging him while rolling around the arena in a desperate struggle to lure him into some floating mines. It ended up an exercise in frustration. First off, the boy is not agile enough to throw the beans quickly and get into the sphere before the beast would inevitably come crashing down on him. Second, the Blobs AI is not predictable enough to ensure the boys survival. The chaotic Blob can be cute in the regular gameplay, but becomes frustrating during the boss battle. Lastly, the boy only takes one hit before going down, forcing the player to start the whole thing over for one tiny mistake. We attempted to minimize the problem by making the boy invincible in the sphere and by slowing the beast down, but it wasnt enough."
487,WayForwards A Boy and His Blob,2010,https://www.gamasutra.com/view/feature/132659/postmortem_wayforwards_a_boy_and_.php,A Boy and His Blob,console mobile pc,platformer,single,production,tools,"This was WayForwards first boxed Wii game. Everything was new; the 2D engine, the collision system, and the art pipelines were all untested. In an effort to get the game working, we built levels and Blob transformations on incomplete foundations. We jumped into development without these crucial elements finished and in place, and it gave us a ton of headaches. First of all, the tech was not quite ready. Things as basic as the collision engine were being tweaked until late in production, causing dreaded cascades of problems throughout the whole game. We had jellybeans flying through walls and Blobs popping out of the world halfway through production. Many flaws in the collision system were hacked out, but these house-of-cards solutions made the game rigid and resistant to change. Long hours had to be spent reworking the gameplay. Our tools, carried over from our DS pipeline, proved unable to handle the huge environments and file sizes of Blob. This required tool rewrites, purchases of better computer equipment, and slowed our level design process down. Eventually, these problems were all worked out, but they ate into development time."
488,WayForwards A Boy and His Blob,2010,https://www.gamasutra.com/view/feature/132659/postmortem_wayforwards_a_boy_and_.php,A Boy and His Blob,console mobile pc,platformer,single,production,technical,"Our animation pipeline was also untested for this type of game. We began by drawing everything on paper, then scanning in, coloring in Photoshop, and batch-resizing the animation frames to fit in the game. Dust and blemishes, not to mention half-erased pencil lines, had to be manually scrubbed out by cleanup artists. The huge amount of artwork made this task larger than anticipated. Its funny to think back on it now because it seems so labor-intensive and there were much better solutions available. By the end of development, we had an army of artists armed with computer tablets and animation software. Once again, the newness of the pipeline cost us time, but we are now firing on all cylinders with an amazingly efficient and skilled animation department. "
489,WayForwards A Boy and His Blob,2010,https://www.gamasutra.com/view/feature/132659/postmortem_wayforwards_a_boy_and_.php,A Boy and His Blob,console mobile pc,platformer,single,production,testing,"Blob is a platform-puzzle game using a new engine, with an AI companion and 80 levels. Its complicated! We really should have gotten the game into testing earlier. We continued to have bugs crop up later than we would have liked."
490,WayForwards A Boy and His Blob,2010,https://www.gamasutra.com/view/feature/132659/postmortem_wayforwards_a_boy_and_.php,A Boy and His Blob,console mobile pc,platformer,single,management-people,communication,"WayForward has been able to keep agile by using outsourcing for many of our needs, including sound effects, music, and art. The tradeoff is that you sometimes end up with communication problems. (...) Our art outsourcing groups delivered wonderful background art, but they didnt understand platform games. Our templates were not always turned into usable tilesets. This meant that our artists had to rework the art, which took time and delayed level design. Frame counts for animations sometimes turned out wrong, and the quality varied between animations that were obviously done by different people. With our in-house specialists, issues like this were much easier to communicate and iron out."
491,WayForwards A Boy and His Blob,2010,https://www.gamasutra.com/view/feature/132659/postmortem_wayforwards_a_boy_and_.php,A Boy and His Blob,console mobile pc,platformer,single,management-people,team,"Outsourcing sound effects was also problematic, as our SFX person was unable to spend a lot of time at the studio observing the game she was making effects for. Lead gameplay programmer Larry Holdaway, stepped in and pulled double-duty as a SFX fixer-upper, putting the effects through filters, fiddling with the volumes, and sometimes making or finding all-new effects. Lastly, some outsourced programming we tried ended up not working out as well, and we had to pull the development internal to get the results we needed. With the added problem of time zone differences, outsourcing for Blob was a hurdle."
492,WayForwards A Boy and His Blob,2010,https://www.gamasutra.com/view/feature/132659/postmortem_wayforwards_a_boy_and_.php,A Boy and His Blob,console mobile pc,platformer,single,management-feature,planning,"Level design was also an issue. The huge number of levels (80 in total) required that everything be designed and iterated on numerous times to get our desired level of quality. Unfortunately, the Blobs transformations and enemy patterns were not always finished (in part due to the slow art pipeline), and the collision system was not done. Levels were being built around gameplay that was not finalized, and then the gameplay was tweaked further, leaving the elaboratelyconstructed puzzles in ruins. Programmers and level designers had to compromise on who was going to fix what. Overall, creating everything concurrently was painful, but the process provided us with a stable base for future projects. (...) The schedule for Blob, like many schedules in the game industry, was created without detailed knowledge of how long everything was going to take. The result: we had a bunch of dates to hit based on our best guesses, which ended up less-than-perfectly accurate. Still, we were committed to these dates, and there never seemed to be time to catch up for the next delivery. Focus sometimes shifted to ""just get the content in!"" in order to meet the milestones. Because we had to rush through the implementation to meet the milestones, we ended up with less-than-desirable foundations for some of our levels and transformations. New implementations and levels were designed to conform to the broken structures, and resulted in a cascade effect when we finally went in to fix some of the early problems. Some problems were simply too ingrained to fix. If we had allocated the time to do everything correctly in the first place, we would have probably ended up with a more solid game."
493,Aaaaa A Reckless Disregard for Gravity,2010,https://www.gamasutra.com/view/feature/134515/postmortem_dejobaan_games_aaaaa_.php,A Reckless Disregard for Gravity,pc,simulation,single,production,design," Halfway through development of the games 81 levels, we decided to lock down the designers toolset, forcing them to use many of the same tidbits over and over. No new mechanics to make later levels more interesting. No new architectural set pieces -- they had to spend time combining existing pieces to make them seem fresh, rather than using new ones to make visually interesting environments. This wasnt a conscious choice -- we were just afraid that if we didnt focus on the levels, wed never reach the end. After all, every new mechanic wed added to the game (graffiti, flipping people off) required a lengthy process. We tried to avoid that long process by stretching what we had as much as possible. We asked ourselves: did our levelsreeeally use what we had to the fullest? Were we being lazy builders because we needed a new model or a new mini-mechanic to create 5 new maps? Time was running out, and that made us play it safe (which always seems to be the most dangerous way to play things). We were afraid to use placeholder art and mechanics in lots of places. If we wanted to add a new feature, our mentality was that we had to get it right the first time. And if we didnt, it was wasted effort, and should be scrapped."
494,Aaaaa A Reckless Disregard for Gravity,2010,https://www.gamasutra.com/view/feature/134515/postmortem_dejobaan_games_aaaaa_.php,A Reckless Disregard for Gravity,pc,simulation,single,production,testing," We didnt test enough. And when we did bring testers in to toss the game around, we underused the feedback we received. As indies, were informal about many things. Roles are often fluid: our tech lead is also responsible for the blogs graphic design as well as getting coffee for our interns, for example. That has worked well, but the danger in creating processes in an informal, ad-hoc fashion became evident in how we carried out testing."
495,Aaaaa A Reckless Disregard for Gravity,2010,https://www.gamasutra.com/view/feature/134515/postmortem_dejobaan_games_aaaaa_.php,A Reckless Disregard for Gravity,pc,simulation,single,management-people,team," Giving our designers strong scripting tools was great, but it didnt mean they could generate all the content they needed. A level designer could fall through a level, dodging and weaving things like crazy. He could then hit a button and populate his fall path with scoring plates, knowing that players who followed that path would have fun. However, to add a simple, rotating fan blade to his level, he had to go to Ichiro, who would import the model, orient it, resize it, apply a skin, add it to the catalog, and script the rotating motion. Or, hed simply not do any of that. The problem seems simple when we think about it now -- having everyone go through one person was a painful bottleneck. This either prevented designers from making progress while they waited on him to implement something, or (worse), caused them to simply not think about level design outside the scope of what their tools could accomplish."
496,Aaaaa A Reckless Disregard for Gravity,2010,https://www.gamasutra.com/view/feature/134515/postmortem_dejobaan_games_aaaaa_.php,A Reckless Disregard for Gravity,pc,simulation,single,management-feature,planning," We failed to step back at regular intervals to get the big picture, and became mired in the details. We didnt ask the big questions (How does the game look to someone who hasnt been working on it for half a year? What are we missing? How do our post-launch goals affect design?). And it almost killed the project. Stop us if youve heard this one: after the initial planning stages, we never substantially updated our design document. Towards the middle of development, the game looked significantly different from our original plans, so we threw the plans out and flew by the seat of our pants."
497,Aaaaa A Reckless Disregard for Gravity,2010,https://www.gamasutra.com/view/feature/134515/postmortem_dejobaan_games_aaaaa_.php,A Reckless Disregard for Gravity,pc,simulation,single,business,marketing," The demo turned me off, but I got the game on sale anyway. It turned out to be awesome! Weve heard this quote from gamers a number of times since launch, and eventually came to the conclusion that the trial version just wasnt doing its job. The demos purpose was to give players a vertical slice of the game. Heres some tiramisu. If youre sampling it, you want a tiny taste of the whole experience -- the savoiardi, the rum, the mascarpone, and the sugar. It should give you a good idea of what the whole experience will be like and nudge you towards picking up the whole slice."
498,Double Fines Brütal Legend,2010,https://www.gamasutra.com/view/feature/132696/postmortem_double_fines_brutal_.php,Brütal Legend,console pc,action,multi single,production,tools,"Double Fine used middleware for audio (FMOD), physics (Havok), user interface (Scaleform), lip sync (Annosoft -- tools and offline), and video (Bink). Though there were some false starts with other middleware packages, the decision to distribute the development risk across commercially available software packages was sound, and the call to integrate those packages early in development paid dividends throughout the development life cycle. As beneficial as it was to rely on commercial software for various systems, Double Fines batting average for selecting appropriate middleware was .500. We ended up selecting and integrating a number of middleware software packages, and then later discarding them because they no longer served our needs as the project evolved. The middleware with which we ultimately shipped still demanded a tremendous investment in its integration, requiring far more staff than we had to handle the emerging stability and performance issues. We were informed by multiple middleware companies that we were uncovering bugs and failures in the software that had not been found previously due to our placing new demands on their systems. That news was both flattering and unnerving, and ultimately costly to manage during stressful development periods. It was a tremendous relief to have the kind of tech support that we did from the individual middleware companies -- without their timely attention and desire to collaborate on our title, we would not have shipped the game at all. (...) Later on, we struggled to find the right balance between meeting short term needs and building tools that could scale to a full production environment. A prime example of the effect of this ineffective prioritization was the one year deployment delay of our MUE (Multi-User-Editor). An MUE would be a massive undertaking under any circumstances, but in our case the effort was made even more difficult by a late start and a rocky path from the quick and dirty short-term to the production-ready real version of the tool. Then there was some bad luck. We decided to be an early adopter of a COLLADA-based Maya exporter pipeline. Initially, we underestimated how long it would take to implement a COLLADA 1.3-compliant parser. Then, when COLLADA 1.4 required a massive change to our schema, we had to significantly rewrite our parser. Once it was finally functional, we were faced with ongoing maintenance or unexpected limitations, and ultimately failed to recognize any of the expected upsides, like easy interoperability or enhanced leverage of a tool or pipeline utility. On a lighter note, as a result the word ""COLLADA"" became a swear word and elicitor of groans at Double Fine Scrum meetings. In retrospect, at least it provided us with humor."
499,Double Fines Brütal Legend,2010,https://www.gamasutra.com/view/feature/132696/postmortem_double_fines_brutal_.php,Brütal Legend,console pc,action,multi single,production,technical,"Brütal Legend is not a small game. Fortunately, we thought we knew what we were facing and invested heavily in data/build infrastructure. What went horribly awry was that we both underestimated the total content push and, more importantly, didnt anticipate the huge content spike at the very end of production. From the start of the game through the end of 2008, both our rate of data churn and data growth were fairly steady and corresponded roughly to increases in staffing and team productivity. This was expected and planned and supported by the technology. But then, in January 2009, everything exploded. All at once. After three years of development we had accumulated about 2.5 GB of optimized/packed game data. Less than four months later, wed jumped to over 9 GB. The central cause of this was a very large increase in asset delivery from a number of teams simultaneously. For example, we went from 0 localized files to about 100,000 in a matter of weeks. We received the high resolution video assets for the Jack Black intro and all our main menus in one heap. We made a late decision to contract additional audio work, and new ambiences and sound effects were quickly added to the game. And so on. This simultaneous significant increase across a number of types of content put a massive burden on our entire infrastructure, in particular our build machine, Perforce server, and network backbone. To exacerbate matters, we started to see cascade effects -- where a massive hit to one system (such as a check in of 10,000 .wav files) would bog down Perforce, causing a bottleneck in all of the dependent systems (like our build server and individual check ins) and these bottlenecks would then cause other bottlenecks. Its a credit to our pipeline and build infrastructure that things never failed, but we experienced a number of severe performance degradations, many of which required emergency interventions from the engineering team. This unexpected firefighting caused lost productivity, invariably at the worst possible times (like during preparation for a demo or a milestone). These large content dumps also put significant strain on our runtime systems. The per-line memory overhead in the voice system was not prepared to handle tens of thousands of lines, causing us to panic about our ability to even fit on a dual layer DVD. Across the board, these unexpected increases in content caused ripple effects throughout our IO, memory, and processing profile. And because the rate of increase was both high and unexpected, the engineers responsible for wrangling these systems were pulled from their assigned work and redirected to emergency fire fighting."
500,Double Fines Brütal Legend,2010,https://www.gamasutra.com/view/feature/132696/postmortem_double_fines_brutal_.php,Brütal Legend,console pc,action,multi single,management-people,crunch-time,"We took a number of systems to 80 percent, enough to prove an idea, or extend and refine it in a future deliverable. But we found in the last few months of development that the remaining 20 percent was another 80 percent of the effort -- leading to some unexpectedly crunchy milestones for the hardest-hit team members."
501,Double Fines Brütal Legend,2010,https://www.gamasutra.com/view/feature/132696/postmortem_double_fines_brutal_.php,Brütal Legend,console pc,action,multi single,management-people,team,"First, in an attempt to address the lack of dedicated tools programmers we experienced on Psychonauts, we created a tools group within Brütal Legends engineering team, and staffed it with four engineers. While this was an improvement overPsychonauts, the problem with this approach was that it facilitated the separation of tools work from the rest of the engineering effort, isolating the accessibility of the tools to the user from the process of delivering features for the game. Often, this separation created inefficiencies in implementation, or a mismatch between the tools design and the runtime feature it supported -- in several cases, this disconnect even led to sprints where a runtime team would complete an artist-facing feature without any tools support for it at all, making that feature (often a milestone deliverable to demonstrate) unusable. A second critical mistake involved effective tools prioritization. Without strong guidance from content creation, the tools team focused initially on back end services such as tools deployment and build infrastructure, with the intent that these services would serve as a productivity multiplier on future tools development. Unfortunately, without any tools to distribute or code to build, these initial investments significantly delayed the development of content/game-facing tools. (...) In hindsight, we should have created a programming team structure that enabled the creation of good tools alongside the development of runtime features, perhaps even allocating a larger percentage of the engineering team to tools early in development. (...) As Brütal Legend moved into production, it became clear that the team was understaffed in key implementation positions. To meet this need, we reallocated positions set aside for facilitation hires (such as design and production) to staff up more implementers (such as animators and programmers). While it was necessary to staff up on implementers, we failed to recognize until we were deep into production that our overall efficiency was reduced by this personnel trade, due to the statistical increase in designs that had to be reworked, an up-trend in management oversights, and general miscommunication. The price of understaffing the design department meant that we were often implementing ideas that had only been loosely discussed, before the feature had been fully planned. Serious flaws were sometimes discovered only after a feature had been partially or fully implemented. This also meant that there was always a hefty backlog of decisions and specifications, even before adding in the rework required after false starts. Since it is often at the top of the dependency chain, bottlenecking design had a deleterious impact on the rest of the team, especially considering our broad game scope. The same understaffing symptoms could be found in the production department. Producers are responsible for communication, for resolving dependencies, for ensuring the team works reasonable hours, and for keeping the project on schedule. They ensure that the road ahead is paved well ahead of the teams arrival. With insufficient staffing, some of the production responsibilities fell to the leads, or, absent that safety net, inefficiencies were handled with overtime and stress. (...) In June 2009, Activision Entertainment Holdings, Inc. filed suit against Double Fine, claiming breach of contract and seeking a preliminary injunction to stop the release of the game by Electronic Arts on Rocktober 13. Less than 2 months later, the case settled out of court. I cant talk about any of that in this article, or any article really. I bring up getting sued as something that went wrong because of the impact the transition between publishers and subsequent lawsuit had on the development of Brütal Legend. (...) The merger announcement and subsequent diminution in publisher contact with Vivendi personnel, especially after such a previously harmonious relationship, caused internal unrest and morale dips among the team. Company meetings often included frustrating discussions about what little we knew about the current situation at our publisher, and what the various possible outcomes would mean for Double Fine. This demoralizing uncertainty lingered for months, during which time the leads continued to motivate the team to hit their scheduled milestones while watching our coffers run dry in the absence of any publisher payments. We learned Activision was not going to be publishing Brütal Legend through an official press announcement issued by Activision that listed the games they would be shipping, with ours conspicuously absent. Again, the team was abuzz with anxiety -- and the official hunt for a new publisher began, distracting Tim, myself, and various team leads during an already intense development period. Even after the game was re-signed with Electronic Arts, we enjoyed only a brief reprieve before the legal communications began among Double Fine and Activision and Electronic Arts. Most of the team was shielded from the drama that unfolded between December 2008 when Electronic Arts announced that they had picked up the game for publication and July 2009 when the lawsuit settled. But Double Fines leadership was not, and the distraction and stress took its toll on individuals and on our deliverables. The lawsuit was filed just as the game went Alpha, with a stipulation that it be heard prior to Gold Master being submitted -- relegating Tim and myself and a cadre of team leaders to the unenviable job of information gathering, declaration writing, lawsuit reading, witness interviewing and all around non-game-making during the crunchiest, most critical time of development. The lawsuit took its toll on the team, on the company, on our product and on our optimism."
502,Double Fines Brütal Legend,2010,https://www.gamasutra.com/view/feature/132696/postmortem_double_fines_brutal_.php,Brütal Legend,console pc,action,multi single,management-feature,planning,"There was a notable downside to Scrum that bears mention in spite of our success with it. Our implementation of Scrum encouraged a preproduction mindset far too long into production. Scrum neither encouraged defensive programming, nor the practice of designing systems that scaled well. (...) Once the project was in production, because of the reliability and lower risk of art creation, a waterfall approach was more optimal than Scrum. (...) From the start of development, we recognized that good tools needed to be a priority to ensure faster iteration times for our team. A mix of legacy team structure, intrinsic complexity, insufficient input from content creation leadership, poor planning, and bad luck all contributed to a significant delay in the delivery of several critical tools to the team -- delays which jeopardized milestone deliveries, reduced artist productivity, and required unplanned emergency intervention at the expense of other engineering efforts."
503,Pipeworks Softwares Deadliest Warrior,2010,https://www.gamasutra.com/view/feature/134573/postmortem_pipeworks_softwares_.php,Deadliest Warrior,console,action,multi single,production,design," The hardest and most vital part to get right in a fighting game is character balance. We played over 100,000 battle simulations, had a fulltime team of dedicated testers, and bought in new players for game testing sessions throughout the project, in order to get the intricacies of each character right. After releasing the game, the thousands of multiplayer mode users quickly discovered the ninja was overpowered. For experienced players, they could avoid most of these issues, but for newbies, going up against the ninja was a frustrating experience. After about a week of observation we were able to get a good handle of balance issues and began work on a Title Update immediately."
504,Pipeworks Softwares Deadliest Warrior,2010,https://www.gamasutra.com/view/feature/134573/postmortem_pipeworks_softwares_.php,Deadliest Warrior,console,action,multi single,production,technical," Even though the decision to go with motion capture was the correct decision to make and the end result was what we wanted, our initial methods of selecting and processing the mo-cap data caused us quite a bit of extra work. We were definitely unaware of the complexities and time required for selecting hundreds of motion capture moves based off of videos of said moves (each move having multiple takes). This caused us to put in our order for our moves much later than we would have liked, and also resulted in us receiving some of the data later than desired. Luckily the studio we used, House of Moves, was extremely helpful and got us everything that we needed while answering all of our questions. Processing the data once we got it back also took us by surprise since we had to take a move that had, say, 100 frames, and then cut it down to 50 frames or so in order to keep the action moving quick enough for a fighting game while still maintaining the realistic movements of each warrior. The animators definitely had their hands full. Since there was more cleanup work than we expected and the game relied so heavily on the warrior animations, this put a lot of pressure on the team to work on other aspects of the gameplay while chomping at the bit for each processed mo-cap movement to come in. Because of this, we had to condense some of our milestone deliveries towards the end of the project, which gave us more time to get all of these animations hooked up while still delivering what we promised the publisher, but which made us work harder than we would have liked. (...) We opted for double compliance testing, which was great, and we foolishly underestimated the amount of work required for localization. We also thought the game would be in a more polished state than it was when we started localization, and this caused us to have to add new text to the project as we went on. (...) Our original plan to have all of our in-game text ready for localization was foiled for a number of different reasons. The main reason was our focus on tweaking and refining the actual gameplay fighting mechanics, and not concentrating on what would make the UI better. As we were compiling all of the in-game text for translation, we realized that we still hadnt named all of the warriors moves, nor had we come up with hints and tips for the loading screens. We ended up sending updated drops of text to be translated after our initial drop -- much to the chagrin of the publisher and localizers, Im sure. There are always a few pickup lines here and there, but the amount of pickup text that we sent was more than we felt comfortable with. (...) We originally had no plans to use any VO in the game except for grunts, cries, and other sounds of battle. When we were at the motion capture shoot, we put a headset on the actors in order to capture a few of these, with the intention of recording any pickup grunts in-house. What ended up happening was that the actors ad-libbed some really great lines, especially TJ Storm (who played the pirate), so there was no way that we couldnt include them in the game. Unfortunately, since we never planned on grabbing VO from the get-go, the audio quality wasnt the greatest. Our audio designer did what he could to improve the audio quality, given the circumstances, but in hindsight we would have given the actors lines and recorded them in a controlled environment to improve the quality."
505,Pipeworks Softwares Deadliest Warrior,2010,https://www.gamasutra.com/view/feature/134573/postmortem_pipeworks_softwares_.php,Deadliest Warrior,console,action,multi single,management-people,team,"Not only was it hard to manage, but we also worked with an offshore team that did not keep the same hours. Normally this would not be a problem, but since we did not have all of the text ready from the start it meant that we would receive new text from Pipeworks during the daytime but the localization team was out of office and could not get to it until the next day. Since they were out of office, they could not schedule resources for the next day and thereby we would miss a day while we got everyone assigned again. This seemed to happen all the way to the very end of the project, even after our contract with the localization team was over. We basically had to reach out to all of our friends all over the world to get them to translate pieces of sporadic text. My Facebook status updates were pretty funny for a while -- something random like ""How do I say sever limbs and decapitate your enemies in German?"""
506,Pipeworks Softwares Deadliest Warrior,2010,https://www.gamasutra.com/view/feature/134573/postmortem_pipeworks_softwares_.php,Deadliest Warrior,console,action,multi single,management-feature,planning,"I cant tell you how many times Ive been producing games and got wrapped up in the gameplay and later realize that I didnt allocate enough resources to sound design. I feel that editorial and sound design is the most neglected part of game production, because we get too focused on features and graphics and making the game look awesome. However, when you put it all together, sound and copy make such an impact on the final experience."
507,Pipeworks Softwares Deadliest Warrior,2010,https://www.gamasutra.com/view/feature/134573/postmortem_pipeworks_softwares_.php,Deadliest Warrior,console,action,multi single,business,marketing," Anyone whos ever worked on a title based off of any sort of non-game related IP knows that theres almost always a hurdle to overcome before any contracts are signed or any game design thoughts are even written down on paper. Deadliest Warrior was no exception. The premise of the IP makes perfect sense for a game, yet there were countless gamers and reviewers that immediately blew this game off as garbage without picking up a controller to give it an honest go. I heard it numerous times at E3: gamers would come up to the Deadliest Warrior booth, play the game and then tell me: ""I have to admit, I was a skeptic, but this is actually really fun to play"". We literally had people coming back to the booth to play the game again and again for three days straight. Regardless of the games content and fun factor, the stigma of being based off of a TV show is still present."
508,Vicious Cycles Matt Hazard: Blood Bath and Beyond,2010,https://www.gamasutra.com/view/feature/132650/postmortem_vicious_cycles_matt_.php,Matt Hazard: Blood Bath and Beyond,console,shooter,single,production,design,"We assumed that since we were mimicking design elements from many titles before us, that it would be easy to replicate the gameplay and get the feel of the game right from the onset. Because we made these assumptions -- and a few other mistakes -- the project that was supposed to be a breeze quickly turned into a game that nearly spun out of control. Two months into an eight month project, we could see that things were slipping out of our grasp. People were overwhelmed with the tasks at hand, the games vision was getting muddy, and progress was coming to a standstill. Once we realized this was happening, we shuffled the deck a bit, added more people to the team, and tried to course correct the issues by going back to the basics. Fortunately, these course corrections were successful. (...) Many people may think that BBB drew inspiration from (or copied) Shadow Complex, but the reality was that we were developing BBB before we even heard about Shadow Complex. In fact, the original release dates were going to be very close to one another. (...) The bad news was that Shadow Complex upped the ante in areas that we werent focusing on, like production values, such as cinematic quality, and the amount of voiceover work that was normally included in a downloadable product. (...) The pacing of the game was another area where we tripped and stumbled initially. After the first few months of development, the game just wasnt fun. We had to step back from what we were making and really dissect and analyze the core gameplay."
509,Vicious Cycles Matt Hazard: Blood Bath and Beyond,2010,https://www.gamasutra.com/view/feature/132650/postmortem_vicious_cycles_matt_.php,Matt Hazard: Blood Bath and Beyond,console,shooter,single,production,technical,"At the time that we started the project, there were only a handful of titles available for download that actually supported online co-op, and since we had limited time and budget, we needed to make decisions about the scope of the game and plan accordingly. (...) The number of bugs that could have surfaced from this feature could have easily meant weeks of additional QA time as well. We would have needed more time to test and implement this feature for network play in order to work out all of the kinks. It is one thing to find a bug in a local multiplayer experience, but hunting down the cause for an online bug is more intense and time consuming. (...) However, even with all of the challenges I just described we should have worked to get the feature in. It would have been a very difficult endeavor but would have added a lot of value to the title. If we get the opportunity for a sequel, we guarantee that we will have it there."
510,Vicious Cycles Matt Hazard: Blood Bath and Beyond,2010,https://www.gamasutra.com/view/feature/132650/postmortem_vicious_cycles_matt_.php,Matt Hazard: Blood Bath and Beyond,console,shooter,single,management-feature,budget,"Due to some of the mishaps described above, an increased scope, and the fact that it took longer to feel out the fun factor of our game than we had anticipated, we crept over our allotted budget on both time and money."
511,Over the Top Games NyxQuest Kindred Spirits,2010,https://www.gamasutra.com/view/feature/132642/postmortem_over_the_top_games_.php,NyxQuest Kindred Spirits,console pc,platformer,multi single,production,design," We wanted to explore new gameplay options for the Wiis motion-sensing controllers. Since our character has wings, we thought it would be a great idea to make the character flap her wings with brief movements of the controller... This means you had to do continuous vertical movements of your wrists in order to flap the wings of the character. We had this in the game, and when we did our first tests, we noticed that new players were having a hard time getting used to jumping in this way. When I noticed players needed resting time, I knew we had a problem with our controls! New players were also having difficulty doing this while calculating their jumps. We decided to replace the flapping by the press of a button, and the game won a lot in handling and ease of use. During the first months of the production we didnt do a lot of outside testing. We used to play the game a lot everyday, so we balanced everything to our standards. One day we sent a build to Nintendo so they could try the game... after one week they told us their team could not pass the first level! After that, we started doing some tests not only with hardcore but also more casual players (parents, friends, etc.). When we noticed that a player had problems with the controls, or didnt know what to do next, we knew we had a problem in our design. We tried to address most of these issues, and in the end the difficulty of the game was very balanced, and we havent heard many complaints in this area. Lesson learned: The more common and repetitive actions should be kept as button presses. Do not try to substitute them with weird control schemes. At the same time, dont overrate players and think they are all hardcore gamers."
512,Over the Top Games NyxQuest Kindred Spirits,2010,https://www.gamasutra.com/view/feature/132642/postmortem_over_the_top_games_.php,NyxQuest Kindred Spirits,console pc,platformer,multi single,management-people,team," I know the many hats issue is a common wrong for indie developers, but it took me totally by surprise. I didnt expect the management, paperwork, and PR requirements of a video game took so much time. We had (and still have) to devote a lot of time to write emails, request reviews, prepare trailers and screenshots, and answer interviews. Having your own studio and being in charge of a project requires a lot of extra work and responsibility. Marketing, game pitches, managing employees, and company accounting requires a lot of work that needs to be addressed at the same time that you are developing the game. Most of the time I arrived home to continue with management and paperwork. It ends being a 24 hour job. Oh, and dont forget that you need to spend some time to clean the offices once in a while! After a few months we have the feeling that there are still a lot of people that havent heard of NyxQuest. Some magazines have nominated our game for Best Sleeper Hit, and theres a reason for that. Hopefully we will be able to address this issue, and be able to create more buzz for our next game. We wanted to create a nice blog, dev diary, and additional media content, but because of the enormous amount of work, we had to leave it for the future. Lesson learned: PR is a huge area that requires full time dedication. The more time you spent here, the better the awareness of your title will be."
513,Over the Top Games NyxQuest Kindred Spirits,2010,https://www.gamasutra.com/view/feature/132642/postmortem_over_the_top_games_.php,NyxQuest Kindred Spirits,console pc,platformer,multi single,management-feature,feature-creep," We all know about the problems that arise if there is no clear designer in a game. When we first started the development, my intention was to focus efforts on the design of the game and at the same time on gameplay programming. Because of the amount of work involved in programming a game of this kind, we had to keep going and going with the development of features. We reached a point where we had to keep getting things done, and stopping becomes risky. Five months into the development we noticed that we had a lot of gameplay mechanics, situations and that the game was going way over the top. We noticed this and focused on creating a list of the most important features and gameplay elements we wanted to include in the game. We agreed to follow that list and only design levels using those features and elements, and only add more if we all agreed. Obviously we added some more features later, but those were hand-picked and deeply evaluated before spending time on them. Lesson learned: No designer + Feature creep = chaos! Take your time to find the fun parts of the game and focus into polishing those. Once those features are complete, decide if there is time for more."
514,Over the Top Games NyxQuest Kindred Spirits,2010,https://www.gamasutra.com/view/feature/132642/postmortem_over_the_top_games_.php,NyxQuest Kindred Spirits,console pc,platformer,multi single,management-feature,budget," After creating the company we spent the first four months looking for financial support. We tried everything: bank credit, loans, venture capital, and rich family members (we had none!) After this time we realized it was a very hard task to find the funding required for the 12 months project we had in mind. We decided to partner and fund the game with our own money. In the end this has worked very well, because we managed to do a good looking game in the time we had, and with scarce resources. But it was a very tight development cycle; we barely made it with the money we had saved. Lesson learned: for a startup its very hard to find money. Investors want to be sure they are not wasting their money, and new businesses are full of risks for them. Finding good partners that are willing to share the same vision and share costs is a good option for startups."
515,Over the Top Games NyxQuest Kindred Spirits,2010,https://www.gamasutra.com/view/feature/132642/postmortem_over_the_top_games_.php,NyxQuest Kindred Spirits,console pc,platformer,multi single,management-feature,planning," Our game was originally known by another name. It was released on June 19th in Europe. Two days before, on June 17th, we received a Cease & Desist letter from another company asking to change the name of our game. Since we are a very small developer with very limited resources, and in the final stages of the production, we had no time and budget to go into the cost of a legal battle. We believed our chosen name was not clashing any other trademark. After a long and stressful weekend we decided to change the name of the game, and select one that is safe enough to not have similar problems in the future. We all know the previous name was better, but we had no option! On the other side, there was a lot of news related to the name change on gaming news websites. In the end we dont know the impact this had on the performance of the title."
516,Torus Games Scooby-Doo! First Frights,2010,https://www.gamasutra.com/view/feature/132630/postmortem_torus_games_.php,Scooby-Doo! First Frights,console pc,platformer,multi single,production,design,"The theme of overcompensating is most apparent when it comes to the general size of the Scooby-Doo! First Frights. This is not a reference to game play time, but rather the length of levels and cutscenes. Overall, both were far too long and didnt provide the balance between story and gameplay that we were hoping for. The levels were long winding platforming paths that lead the characters from one moment in the story to the next revelation (or cutscene). Countless hours of art and asset creation would fly by in an instant as players traverse the level. (...) This is a game after all, not a feature film, and the game itself (and the players actions within the game) shouldve been driving the story more, rather than relying completely on cutscenes to give player motivation and reason for their actions. Finding the right balance is a challenge of planning and execution, and its an area that well be improving on profoundly in games to come. Weve learned a great lesson in this instance, particularly when it comes to continuity. Scooby-Doo! First Frights does have some holes, if you like, in the story, and the characters motivation in the story and in-game were sometimes not as clearly defined to the player as they shouldve been. As an example, in one chase scene we have Shaggy and Scooby-Doo! in the sewers, followed by a level with Fred and Daphne in the alleyways. In the next level, Shaggy and Scooby-Doo! are suddenly bouncing across a balloon parade, with no explanation to the player of how they got there or why! (...) One of the toughest challenges we faced was ensuring this game was accessible by our core audience -- the seven to 10 year olds. The skill level even in this small age range can differ widely, and whilst we have made numerous kids titles in the past, we had not done so with the extent of combat and platforming found in Scooby-Doo! First Frights. (...) So why is this listed in the ""What Went Wrong"" section? In essence, the final game does still contain some rather challenging areas, particularly for platforming, in light of the audience. Whilst the camera technology does have some bearing on this, the design of these areas left little room for error, and for a young audience, it can mean the difference between having fun and throwing the Wii remote across the room in utter frustration (which we DONT want!) Simplifying the jumping mechanic (the trajectory and distance of the jump), widening of platforms, and placement of camera to allow for a clear line of sight rather than dubious jumping angles that are difficult to judge, are obvious solutions to this."
517,Torus Games Scooby-Doo! First Frights,2010,https://www.gamasutra.com/view/feature/132630/postmortem_torus_games_.php,Scooby-Doo! First Frights,console pc,platformer,multi single,production,technical,"The reason why the levels are linear in Scooby-Doo! First Frights is due to our tech at that time not allowing backtracking between regions, hence forcing us into a single direct path through each level. (...) Through better planning and construction of design we could have made better use of level regions such that none would be considered wasteful. No area should have zero reason for being there -- whether for combat, discovery or platforming, a region must have its place in the game world. We had a lot of empty spaces that were simply there as fillers between regions giving a false impression of game length."
518,Torus Games Scooby-Doo! First Frights,2010,https://www.gamasutra.com/view/feature/132630/postmortem_torus_games_.php,Scooby-Doo! First Frights,console pc,platformer,multi single,management-people,team,"When theres so much work to do, one of the first reactions is to throw more hands into the mix thinking that this will lighten the load. Not so for Scooby-Doo! First Frights First Frights. Rather, we found that increasing the number of people on the team to aid the workload inhibited the project, and placed great strain on the lines of communication. And it wasnt the larger, more obvious issues that placed pressure on the development schedule, but rather the culmination of micro issues. Introducing additional programmers into the fold to assist the team led to too many people working on one portion of the code, and with the restrictions of time, they had no opportunity to understand the ""big picture"" before making changes; their micro changes would inherently break another part of code. (...) The ever-increasing code team also led to a breakdown in the structure of the team. The answer, in reflection, would have been to appoint sub-leads to manage specific areas of the game (e.g. A.I. puzzles etc.) to improve communication and understanding of each system and to promote ownership of the system."
519,Torus Games Scooby-Doo! First Frights,2010,https://www.gamasutra.com/view/feature/132630/postmortem_torus_games_.php,Scooby-Doo! First Frights,console pc,platformer,multi single,management-feature,planning,"These holes werent unnoticed by the team. We didnt suddenly reach the end of development and go ""Oh, hang on, that doesnt make sense!"" We were quite aware, but with limited time and resources, could only fill in the gaps so much. Wed cater for story continuity through the use of voice-over moments (VOMs), however some instances did fall by the wayside. Again, it all came back to our lack of understanding in the execution of the story in-game, underestimating the workload, and pressures of resources and time."
520,Magnin & Associates Skittleball,2010,https://www.gamasutra.com/view/feature/132724/postmortem_magnin__associates_.php,Skittleball,mobile,sports,single,production,tools,"What we were not familiar with was how creating a ""universal"" App would complicate it. A ""universal"" App runs on both the iPhone and the iPad but automatically adapts for the current device. We kept uploading our binary and waiting for Apples website to evaluate it. Then after waiting several minutes it would complain about missing icons. Apple requires different size icons to post the app. Unfortunately the information about how to do so was a little sketchy, and difficult to find all in one place. We eventually discovered Apples Application Loader tool which evaluates the binary locally first and lets you know if there are any problems, before the several minutes it takes to upload."
521,Magnin & Associates Skittleball,2010,https://www.gamasutra.com/view/feature/132724/postmortem_magnin__associates_.php,Skittleball,mobile,sports,single,production,technical,"You would think that having a ball roll on a surface would be a trivial problem. It was fine along all four walls of the room, but once we started testing it diagonally it started wobbling annoyingly. After a lot of Googling, checking reference books, and experimenting with various calls using OpenGLs glRotatef function, we realized we needed to rotate the ball in both the X and Y axes at the same time. (Z points up in our world.) We had to load an identity matrix, rotate it on the X and Y axes the amount we needed to roll diagonally for that frame, and then save the matrix. Then we had to multiply the current cumulative ball rotation matrix times the newly calculated recent move matrix. (...) We started noticing the ball corrupted, as if the triangles that made up the sphere had come unattached on one or two points. We accidentally discovered that it corrupted only the first model in the draw list, so we took the expedient way out and left an unused model at the beginning of the list -- not our proudest moment, but something you do to make it work until you can figure out what is actually causing the problem. As the code got more complicated, it took a larger and multiple models to keep it from corrupting the ball. We finally put our rendering code under a microscope, caught some coding problems, and switched to using const arrays in our graphics header files. (...) Our game is built in a 3D world, but some of our biggest problems came from 2D. More to the point, we had trouble writing in different layers and getting out GUI to work properly. We studied all the example programs we could find on Apples forums or elsewhere. We found great sample code for separate 3D apps and 2D apps and even some GUI examples, but we had a really hard time finding a simple example of the two working together."
522,Magnin & Associates Skittleball,2010,https://www.gamasutra.com/view/feature/132724/postmortem_magnin__associates_.php,Skittleball,mobile,sports,single,production,testing,"Programming for a new product is hard, but programming on a product you dont have yet -- precluding real-world testing -- can prove to be even more of a challenge. We wrote most of the game with the intent of making it an iPhone/iPod Touch game, but when we got near the end of production and saw that we had a chance to get in on the opening of the iPad store, we made a push to make the changes needed to make it an iPad game. When it came down to testing the changes, all we could do to see the changes was to use the iPad simulator to try and test as best we could. While we could adjust for the new larger screen size, we could not actually play the game since the simulator does not simulate the accelerometer."
523,Magnin & Associates Skittleball,2010,https://www.gamasutra.com/view/feature/132724/postmortem_magnin__associates_.php,Skittleball,mobile,sports,single,management-people,crunch-time,At the end of any project in the game industry you expect there to be a bit of a crunch time. We entered crunch time with more problems that you would want and more unfinished game code than you would expect. Part of this is because shooting for the iPad release was a last minute decision.
524,Magnin & Associates Skittleball,2010,https://www.gamasutra.com/view/feature/132724/postmortem_magnin__associates_.php,Skittleball,mobile,sports,single,management-people,team,"There is always going to be times when a team runs into those problems where they just cant seem to find the right solution. Running into the wall is always a problem, but we allowed it to stall the momentum of work on more than one occasion. We would come together as a group and pound on the problem from every possible angle until we cracked the problem. While this did end up solving the problem over time, it also threw us off our rhythm and kept us from working on other areas of the project where we could have actually made some progress. In the future, we should probably have one or two programmers focus on the problem and allow the others to continue to make progress in other areas."
525,Sega/Other Oceans Super Monkey Ball 2,2010,https://www.gamasutra.com/view/feature/132676/postmortem_segaother_oceans_.php,Super Monkey Ball 2,mobile,platformer,multi single,production,design,"One of our primary focuses on Super Monkey Ball 2 was to offer a local wi-fi gaming experience that we felt would be comparable to the competitive mode on Mario Kart DS. As stated earlier, on SMB2, up to four people can simultaneously race through any of the 115 boards in the game, provided they are near a wi-fi hotspot. Its a very fun, balanced play experience that very few consumers seem to be bothering to use. Virtually all of our feedback from consumers has focused on the single-player experience, and if we had known that interest in the multiplayer would be so limited, we may have dropped it in favor of adding more content to the solo experience (or adding more mini-games)."
526,Sega/Other Oceans Super Monkey Ball 2,2010,https://www.gamasutra.com/view/feature/132676/postmortem_segaother_oceans_.php,Super Monkey Ball 2,mobile,platformer,multi single,management-feature,cutting-features,"In an effort to ensure that our game worked seamlessly on all hardware/firmware configurations, we opted not to present any 3.0 firmware exclusive features. It seemed safest to build to the 2.2.1 firmware instead, which guaranteed full compatibility across all handsets. Drawbacks to this approach included substantially reduced user interest in the multiplayer option, as Bluetooth support (only available on 3.0 firmware) was not made available as an option for connecting devices. It also reduced our ability to let consumers know when new features were available, and made it impossible to integrate a micro-transaction driven storefront. (...) Itd be great if the iPhone ecosystem featured a universally employed achievement and leaderboard system, as Xbox 360 and PlayStation 3 do. But since it doesnt, the issue of integrating these features becomes a bit complicated, particularly for major publishers. Fortunately, these are the kinds of features that are possible to activate through updates, but it would have been ideal to have launched with them day one. (...) When I perfected every stage, I wanted to see an achievement unlock! I wanted to have my skill on public record! Instead, I found myself posting a message to my Facebook contacts after I jumped out of the game. Achievements and leaderboards can significantly improve the lifespan of a game -- they keep you going well past finishing the final board."
527,Sega/Other Oceans Super Monkey Ball 2,2010,https://www.gamasutra.com/view/feature/132676/postmortem_segaother_oceans_.php,Super Monkey Ball 2,mobile,platformer,multi single,business,marketing,"When Super Monkey Ball 2 launched, the ""minigames"" button lead players to a landing page that allowed them to play Monkey Bowling. The page also promised that Monkey Target and Monkey Mini-golf would be coming soon. It was not made clear that the missing content would be coming free of charge, and no expected release dates were provided for the expanded content. We answered these questions in interviews (yes, the content would be free, and the new content would hit in the first quarter of 2010), but most players didnt get the message. As a result, there is an increased risk that many people have finished the main game, and have dumped the App from their device... not knowing that substantial free content is on its way! The games release date had been pulled up to ensure that we hit the holiday season. The original strategy was to launch in February, alongside the new Wii Super Monkey Ball game. The shift was good, in that it was a demonstration of Segas confidence in the quality of the product, but it was also difficult, because it put us in a position of not having all of the intended game content ready for launch. (...) When SMB2 launched, there was a surprisingly robust uptick in sales of the original game. Looking back, I wish that we had done more to use SMB1 as a platform for informing consumers about the value of the new game. One example would be to offer an update toSMB1 featuring three sample boards from SMB2 (effectively, a ""lite"" version of SMB2 made available only to SMB1 owners)."
528,Ronimo Games Swords & Soldiers,2010,https://www.gamasutra.com/view/feature/132618/postmortem_ronimo_games_swords__.php,Swords & Soldiers,console pc,strategy,multi single,management-people,crunch-time," A few big features we created pretty late in the process, such as different speed settings, which were implemented in the last week! This, of course, had to be balanced and checked for every level, and quite a few nights of sleep were skipped to check all of these last-minute features. Another thing which came very late was the actual balance between factions. Halfway through development, we had the impression that the balance was okay, since we did a few basic balancing sessions at the start. But by the time the campaigns were nearly done, we decided to take another hard look at this balance. It turned out that the balance was horrible and would need a lot of work. Once we started investing in this work, it of course shook up a lot of the work on the campaign. Levels were suddenly way too hard, or too easy. This added another chunk of unexpected work. Needless to say, we learned a lot about the sequence in which we should design our games."
529,Ronimo Games Swords & Soldiers,2010,https://www.gamasutra.com/view/feature/132618/postmortem_ronimo_games_swords__.php,Swords & Soldiers,console pc,strategy,multi single,management-people,team," The levels took a lot of time to build with the limited tools we had. With only one programmer, you cant ask for a good level design tool. For design, then, we had to use the stock Windows text editor, Notepad. We used it for almost everything -- editing the levels, writing a script for the game. Adding all of this text to a huge text file and testing all the different versions in all languages took quite some time -- especially since every change required the level to be restarted. But we had three designers and five artists vs. one programmer, so we put up with Notepad. There was one exception: AI. Our AI routines were built in a simple logic tree editor, which was built by a programming intern. And though the editor was a bit buggy, it was still a major improvement over editing those XML files in Notepad. In hindsight, we probably should have put some time in coding creating a visual level editor. In about two weeks, we couldve created an editor which, while it wouldnt have been too user friendly, would still have been a massive improvement over Notepad. This, in turn, wouldve allowed us to tweak the whole game that much better, and also would have saved the rest of the team a lot of time."
530,Ronimo Games Swords & Soldiers,2010,https://www.gamasutra.com/view/feature/132618/postmortem_ronimo_games_swords__.php,Swords & Soldiers,console pc,strategy,multi single,management-feature,planning," Another point which required a lot more work than expected was simply polish. We wanted the game to be as good as we could make it at that time. During our game design education we worked on games, so we thought we knew how to make games. But school projects have strict deadlines, and once those pass, the game gets evaluated. This meant we had never actually completely finished a game. We always went about 90 percent there, which was good enough for good grades. As the saying goes, the last 10 percent of the work takes 90 percent of your time. It might not have been quite that extreme for us in this case, but it still took a good deal longer than we expected."
531,Ronimo Games Swords & Soldiers,2010,https://www.gamasutra.com/view/feature/132618/postmortem_ronimo_games_swords__.php,Swords & Soldiers,console pc,strategy,multi single,business,marketing," After the game was out, we had to do a lot of work to promote it. We had a marketing plan, in which we would release occasional stuff like videos and screenshots. But this was not nearly enough to get the game out there. Because our deadline was pushed back four to five months, and we had started the marketing with the original release date in mind, we had to fill this time with enough marketing materials to keep momentum going. Marketing took a full time artist, creating videos, screenshots, logos and high resolution materials for press. We did not plan on marketing taking that amount of work. Thankfully, Nintendo helped us out by giving us some extra promotional support. To know when your project is done is pretty important, and to arrange everything for your release is something we will take in account from the moment we start our next project."
532,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,production,design,"When the project was elevated to ""proper status"" and the budget was increased to 300,000 euros, it was clear the original plan needed revising. While the broad scope of this change was successful and didnt have many problems, we kept making small design changes to the revised design down the line. It is hard to say whether or not this was a bad thing as such because each change made the game better, but the journey became very stressful to everyone who was involved in the design of the game. In many cases it was ""design by committee"" -- only to be overruled by the design director further along, and despite those final decisions being key in making Trine a successful game, they caused a lot of grief to the people involved. Everyone was passionate, especially the original designer/producer/programmer who also had money invested in the project, and passionate people do not give up on their ideas easily. Each design change also had to get communicated to the team and sometimes the confusion stemming from design arguments would cause uncertainty as to what the final design was supposed to be. (...) Naturally, when the time came to create the last level for Trine, we only had a couple of weeks until the game was supposed to be finished. Therefore all of our earlier thoughts on having a huge boss enemy were thrown out the window -- bosses take considerable time and we didnt have much. An alternative plan B was schemed on the spot -- what if the player travelled upwards, avoiding rising lava? Several elements were added, such as an evil wizard (or the ""old King"" for those who tried to follow the story) who conjured objects such as boxes, planks, and spiked balls to hinder the players progress. The last level was to be the ultimate test of the players abilities and how well they had understood the cooperation between the characters. (...) As time was running out, the level did not get nearly as much playtesting as e.g. the tutorial had got. (...) Weve never got so much negative feedback on a single level before. The majority of gamers did not enjoy the change -- the somewhat slowpaced gameplay had been transformed into a quick test of skill. There were some who enjoyed the level, but they were a minority. It could be speculated that Trine had reached out to a much larger target audience than we had perhaps envisioned, and that resulted in the clash. Many gamers also lamented the fact that there was no real boss fight. (...) We made the speed of the rising lava slower with patches and removed it from the easiest difficulty. However, this did not help as much as we had thought -- while the Game Over screen featured a difficulty change option, many players did not take advantage of it and instead banged their heads against the spiked balls, and became frustrated."
533,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,production,tools,"So why do we get hundreds of negative emails and forum posts about co-op? Because its not online. Gamers these days expect that co-op means ""online"" by default, and are sorely disappointed when they find out that Trine does not have any online multiplayer features. Not having online multiplayer has been the biggest criticism against our games since day one, and it all goes back to 2002 when we were working on a realtime strategy game concept and made a decision not to pursue online/LAN features in favor of faster development times. The same code base has been used in all of our games since, including Trine. As layers and layers of new code have been added to the engine, the cost estimate of adding online multiplayer has always increased with each project, and it became very hard to justify the additional cost of rewriting the game engine -- or rather, getting enough money to complete both the rewrite and whatever game we had in production. While this decision has been a key factor in our ability to ship any games at all, it is hard not to dream of a time machine. A little bit more forward-planning in 2002 would have gone a long way. Its easy to fall into the ""oh its just a prototype, it doesnt have to be good"" mentality, but if things dont go to plan and the project doesnt bring in the money everybody is expecting, the prototype will end up being used in more projects because its cheaper and faster. Trine probably could have doubled its sales and success had online co-op been included."
534,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,production,testing,"Testing of the game started a couple of months before the scheduled gold master date and it was imposed on inexperienced, part-time trainees, who did a good job but could not fight against the reality of the situation."
535,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,production,bugs,"When the PSN submission was returned with a bunch of bugs, we started to see that the plan would fall apart -- but little did we know that wed have to pick up the individual pieces from the ground in a very tedious way. (...) Another group of bugs, such as wrong filenames or wrong program version numbers, could have been solved by a more experienced publisher, or by having direct control over the submission process. We had to keep ""supporting"" the PS3 version until September. Fixing the bugs in each report was a matter of a couple of hours, but the mental stress started to build up."
536,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,management-people,delays,"And it wasnt just internal -- many PS3 gamers were getting furious as the wait got longer with each passing week. Our long history of successful forum interaction with our fans backfired, when the estimated release dates we posted were missed time and again. When we realized the process could take longer, we became more vague with ""no comment"" posts, which did not do much to help. We got more than our share of press coverage on websites all over the internet, and with each delay the user comments started to turn more and more frustrated, especially with the busy Christmas period and its slew of great AAA games coming up. The PSN versions were finally launched on the 17th of September (EU) and the 22nd of October (US) of 2009 -- the one month delay between Europe and North America further highlights the submission and launch problems with the project (...) The situation remained much the same with patches -- the European version promptly got the patch that added proper Trophy images and made the last level easier, but the North American version had to wait over half a year until several non-technical aspects fell into place. It is much more difficult to get game updates released on the console platforms, and this was something we were not prepared for."
537,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,management-people,communication,"The submission process was shrouded in mystery as all the communication with SCEE was handled by the publisher. Throughout the development, our relationship with the publisher had been difficult, and the submission process probably suffered from this as well. Relevant information sometimes got lost along the way, despite (or because of) everyone on both sides working hard to get the game out. Not only were we making our first console title, the publisher too was doing their first PSN title and the doubled inexperience really took its toll on the game. In addition to simple game-related bugs that needed fixing, a number of issues could have been solved by better understanding of the complex TRC document -- in other words, more experience. (...) Its also worth noting that to this day, many gamers still think the last level of the game is too hard, because their own experience does not reflect the game in the post-patches stage. Some in fact think we made it harder, because we added a few skeletons into the mix to spice it up, and this is easier to notice than the adjusted speed of the lava. This kind of inaccurate word of mouth does not change easily, and further emphasizes how important it is to get things right before launch."
538,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,management-people,team,"The three to four months the game spent in QA caused a lot of anxiety and uncertainty on the whole team, most of whom had moved on to other projects by then. The teams, and especially the managements and the programmers, moods swung from the first submissions triumphant joy to annoyance to desperation to humorous disbelief during these weeks of constant waiting for new QA notes and final acceptance."
539,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,management-feature,cutting-features,"The state of the overall project and its overambitious design was finally understood in May 2009, roughly a month before the scheduled gold master. Some partially-developed gameplay features were cut, such as the third upgrade slot for the characters skills, along with a graphically unpolished icy mountain level and other art content, as were many small gameplay features. This also caused headaches down the line, for example in localization, as much of the text had to be revised and combined even though the game had already been completely translated once and VO had been recorded."
540,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,management-feature,budget,"The budget finally ended up at around 800,000 euros at gold master time. Support, patches and other post-release activities have added their own share. As our contract with the publisher was more akin to a distribution one than a full-blown publishing contract, our increased ambition was not in any way reflected in the milestone payments we had agreed upon, and ultimately we ended up funding two-thirds of the project on our own."
541,Frozenbytes Trine,2010,https://www.gamasutra.com/view/feature/134198/postmortem_frozenbytes_trine.php,Trine,console pc,platformer,multi single,management-feature,planning,"The projects budget and resources were in constant motion. Instead of cutting down design and scope in the early stages, we pumped up production resources with a ""yes we can"" attitude and gradually added more people to the project. Luckily, our empty bank account kept us from going overboard, otherwise we probably would have made the fatal mistake of adding too many people to a delayed project. Programmers had too many items on their to-do lists, and instead of rebelling and throwing scissors (like the artists might have), the programmers cut corners in their code and crammed in as much as they could in as little time as possible. This was known by the management -- and was essentially a continuation of practices from the early days of the cash-stripped company -- but the problems started to become evident with Trine, especially during the testing phase where weird and ""unfixable"" bugs occurred. We neglected proper design documentation, production plans, programming plans and sometimes even art supervision. Everything happened at the last minute. In hindsight its great to reminiscence how the team pulled together, but it certainly did not feel like the right way to do things at the time. Because of indecisiveness and procrastination, the final story -- not just a revision of it, but the whole thing -- was written two days before recording was scheduled to begin in March 2009, a few months before the scheduled gold master date. The night before recording, a new, important revision was written. Another day would probably have helped and made the story more sensible -- we doubt most gamers understand the story about the three artifacts (and in fact, theres even a notable inconsistency in the narrators loading screens -- we lost the plot in the wee hours of the morning ourselves)."
542,Llopis and Friginals Caseys Contraptions,2011,https://www.gamasutra.com/view/feature/134780/postmortem_llopis_and_friginals_.php,Caseys Contraptions,mobile,puzzle,single,production,design,"Just about every screen and every item in the game went through several revisions of art, behavior, sounds, or layout. Theres no doubt that every revision made them better. However, we had a few parts of the game that we had to revise a few too many times. This was mostly in some of the UI screens, like the now infamous ""level completed"" screen, or the look and positioning of the in-game menu, which we must have gone through at least six or seven complete redesigns. We believe that design doesnt just flow one way. If you want the best final product, you cant just decide on the functionality of some user interface (or any part of the game for that matter), implement it, and then give it a pretty face with some graphics. Both the implementation and the graphic design will actually feed back into the functionality of the UI. Once you go around this cycle a few times, you can zero in on a very strong design, both from a functional and a design point of view. The problem comes when you go around that loop too many times, or when the loop doesnt converge into a particular design, but keeps shifting around. That was often caused because we were fuzzy on some of the details, or when we were forgetting about some particular feature that had to be reworked into the design. (...) For example, at the beginning of each level Casey explains what goal you need to achieve. This screen seemed straightforward enough, except that the version we had early on was blocking the view of the level while it was up. Our testers complained it was hard to remember what you had to do without seeing the items it was referring to at the same time, so the final design shows Caseys dialog along the bottom of the screen, and the goal items are even circled with a marker."
543,Llopis and Friginals Caseys Contraptions,2011,https://www.gamasutra.com/view/feature/134780/postmortem_llopis_and_friginals_.php,Caseys Contraptions,mobile,puzzle,single,production,testing,"In the end, we slipped to the side of not having as many unit tests as we would have liked. Some things like object attachments kept repeatedly giving me headaches during development because of the complicated, untested code. By the time we noticed those problems and wanted to start adding tests, it was too late because some of that code relied on non-unit test friendly APIs like UIKit or Box2d. We should have taken the time when those problems started appearing to start writing some tests and slowly refactor the code as we fixed the bugs and added new features. Instead, since we seemed to be constantly ""just a few months away from shipping"", we decided to skip that and definitely paid the price later on. We even shipped with a few off edge cases that we knew were buggy but we didnt dare fix weeks before submission."
544,Llopis and Friginals Caseys Contraptions,2011,https://www.gamasutra.com/view/feature/134780/postmortem_llopis_and_friginals_.php,Caseys Contraptions,mobile,puzzle,single,management-people,communication,"We make the perfect two person team: we have complementary specialties, but we also have a lot of overlapping skills. We also seem to always approach things from opposite ends: aesthetics vs. usability, performance vs. gameplay, simplicity vs. interest, uniqueness vs. familiarity, or tea vs. coffee. That is actually a really good thing and the success of Caseys Contraptions was in no small part due to our combination of personalities and skills. There is, however, such a thing as too much of a good thing. We are both very stubborn and it will take a lot to convince us to see things in a different way. There were some times during development that we spent more time debating one point than actually implementing it. The fact that were working remotely didnt really affect most of our day-to-day development, but it definitely made hashing out these situations significantly harder, dragging them out for far longer than they should have. This was also the first time we were working together on a significant project, so it made resolving those situations more difficult. Now that weve gone through this first project, well hopefully be better equipped to handle similar situations in the future."
545,Llopis and Friginals Caseys Contraptions,2011,https://www.gamasutra.com/view/feature/134780/postmortem_llopis_and_friginals_.php,Caseys Contraptions,mobile,puzzle,single,management-feature,planning,"The iPad was the obvious platform of choice. Its large screen can display very nicely detailed graphics, and allows for very natural, direct manipulation of items. It was a perfect fit for Caseys Contraptions. Even so, while there are a lot of iPads out there (14 million), the iPhone and iPod Touch are the undisputed kings of the App Store (about 185 million devices). Especially for a game that relies on the social component, getting a critical mass of users playing at the same time, sharing solutions, and sending levels is very important. We definitely stormed up the iPad charts, but that still left the majority of iOS users not being able to purchase our game. Why didnt we wait until we had the iPhone version to launch? No particularly good reason other than we were itching to get the game out. We also had no idea what kind of impact a strong launch would have on our servers, so the idea of an iPad-first launch seemed like the way to go. In hindsight, we would have been better off waiting to launch both versions at the same time (or almost the same time, maybe a week or two apart at most). To make up for this, were planning on making the iPhone release a second launch of sorts: well make the iPhone version coincide with a new game update that includes a lot of new content (for free for people who already bought it), and well try to repeat the same strong launch we had on the iPad. The idea is to get everybody whos already bought the game playing again, along with all the new iPhone players, and create that critical mass."
546,Llopis and Friginals Caseys Contraptions,2011,https://www.gamasutra.com/view/feature/134780/postmortem_llopis_and_friginals_.php,Caseys Contraptions,mobile,puzzle,single,business,monetization,"The pricing model is something we went back and forth about several times during development. In spite the long-term success oFf lower Garden and other free games with microtransactions on the App Store, we chose to go with a fixed-price model for Caseys Contraptions. (...) Unfortunately it seems that might have been the wrong decision from a financial point of view. After a really strong initial launch, Caseys Contraptions dropped down the charts very rapidly after just a few weeks. Since revenue follows a very sharp exponential drop off, even being in the top 100 iPad games means very little revenue per day, and points to a very thin ""tail"" to the sales curve. In spite of the bad reputation microtransaction games have in traditional game development circles, theyre a lot harder to develop than single-purchase, fixed-price games. Not only do you need to implement very robust server features, but you need to finely balance the ingame economy, the pace of rewards, and the cost of new purchases. Our optimistic estimate was that it would add at least a full month to the development time (and given how our estimates were, it probably meant two months for real). A possible alternative would be to have a traditionally-priced game, but offer new levels or locations as extra purchases. This would have been a lot simpler to implement, but it probably wouldnt have made much difference in revenue. Usually, only about between 2 and 5 percent of the players buy any extra content, so for microtransactions to really pay off, they need to be unlimited (in-game currency, fertilizer, etc), or have a very large user base. With a small, fixed amount of possible things to buy, we would need to rely on having lots of players to make much of a difference."
547,High Voltage Softwares Conduit 2,2011,https://www.gamasutra.com/view/feature/134786/postmortem_high_voltage_.php,Conduit 2,console,shooter,multi single,management-people,crunch-time," Early on in development, theConduit 2 development team implemented new features to the point where they could be demonstrated, but were not complete. When much of the project is composed of partially-implemented systems, it makes the game codes structure unstable and hard to work with. Whats worse is that after the layoff, we were left with unfinished systems combined with team members that didnt fully understand how to work with them. This added months to the development cycle as each fixed bug can potentially spawn or expose multiple new problems. Conduit 2 is a huge game, much larger than anything our company has ever developed before. The time needed to complete a project of this scope was definitely underestimated."
548,High Voltage Softwares Conduit 2,2011,https://www.gamasutra.com/view/feature/134786/postmortem_high_voltage_.php,Conduit 2,console,shooter,multi single,management-feature,scope," One of the biggest criticisms of the first game was the single-player campaign felt dry and uninspired. It was considered too short, lacking a cohesive narrative or major dramatic moments, and didnt have any memorable boss battles. We did not want to repeat those same issues and while Conduit 2s campaign delivers on the elements that were lacking fromThe Conduit, it was a long and difficult battle to get there. To address the problems from the first game, we hired an external writer to focus on crafting an epic storyline. We brought him into the studio and had him spend multiple days every week with the team. He played the build, interacted with our team members and fully immersed himself in everything Conduit. Unfortunately, his vision was unrealistically grandiose. The combined length of the cinematic sequences would have been well over that of multiple feature films. We simply didnt have the budget or the manpower to dedicate to creating that many hours of story. Additionally, the tone was extremely serious and heavy-handed, which didnt go over well with anyone in our initial showings of the game. In fact, they celebrated the occasional humorous element, leading us to the realization that things needed to be lightened up significantly. As we got closer and closer to our deadline, despite our writers best intentions, the cinematic sequences were still too long and too serious, missing the lighter tone we were hoping for. Consequently, we were forced to do a massive edit and rewrite -- working at all hours of the day and night -- to get the script polished in time for the final recording session. If we had only given the light-hearted direction to the writer initially, we could have saved a lot of time and effort."
549,High Voltage Softwares Conduit 2,2011,https://www.gamasutra.com/view/feature/134786/postmortem_high_voltage_.php,Conduit 2,console,shooter,multi single,management-feature,budget," Like the rest of the gaming industry in 2010, High Voltage Software wasnt immune to hard times. With publishers mitigating risks and the economy in trouble, we had to take financial action. Whats especially difficult about this is that our culture is an aberration in the game industry. In the nearly 18-year history of the company, wed only had one layoff of any significance -- but that is what happened to us in 2010. This had been a corporation built on stability and longevity, and our employees had come to expect it. Unfortunately this affected the Conduit 2 team dramatically. Not only did the company take a huge morale hit from the loss of dear friends and colleagues, but the Conduit 2 game team was heading into a crunch that would not end until the game was to be delivered for final Nintendo submission. Theres not much that can be done to lift the collective mood of a company facing all of these odds, but we did what we could. We reached out to our employees as often as possible to let them know how valuable they were, we offered assistance to those who needed to land new employment opportunities, and we rewarded the Conduit 2 team when they reached newly-defined targets that got us closer to submission."
550,High Voltage Softwares Conduit 2,2011,https://www.gamasutra.com/view/feature/134786/postmortem_high_voltage_.php,Conduit 2,console,shooter,multi single,management-feature,multiple-projects," 2010 was a very busy time for the studio. Along with our various publisher and licensed titles, we were developing two more original IP: Tournament of Legends and The Grinder. Their teams were exploring new game genres, working under strict deadlines, and had extensive management oversight. Meanwhile, the Conduit 2 team was trusted to essentially manage themselves. It was felt that, since it was the second version of a successful title, they could be given more flexibility and freedom in terms of running the project. It was only when the project started to fall behind schedule that upper management started taking a closer look at the overall state of the project. They quickly realized that it was not becoming the type of game that they had intended, and with deadlines looming, drastic action was taken, as detailed previously."
551,High Voltage Softwares Conduit 2,2011,https://www.gamasutra.com/view/feature/134786/postmortem_high_voltage_.php,Conduit 2,console,shooter,multi single,management-feature,planning," Members of any team thrive when they have clear goals to accomplish and the deadline in which to accomplish them -- especially when these are defined early and often. Unfortunately, the milestones were never defined with enough detail, nor given to the team early enough. Instead, many of the goals given to the team were based on meeting requirements for product demos given at various consumer, media, and developer shows and conventions. Often this resulted in the team diverting from meeting an actual milestone in favor of prepping the game for the next show. This approach resulted in awesome demos at the expense of the completed game. Had the goals been based more on the production timeline, been given better definition, and been revisited throughout development, the team would have been able to focus better and the end of project push would not have been as elongated."
552,Postmortem: Arrowhead Game Studios Magicka,2011,https://www.gamasutra.com/view/feature/134840/postmortem_arrowhead_game_.php,Magicka,pc,adventure roguelike,multi online single,production,tools,"As we started the studio, we didnt have any capital that could set us up with the necessary software. As luck would have it, Microsoft provides newly founded companies with a cheap BizSpark membership that grants you access to pretty much all of their products. The big ones, Maya and Photoshop, were something the studio couldnt afford, and because of the lack of a financial history, the banks wouldnt grant loans without a guarantee -- something that we as founders took upon ourselves. Not only were we in debt because of the guarantee, we used our savings and borrowed from our near and dear to finance the share capital, rent and general living costs -- which massed up to quite a bit."
553,Postmortem: Arrowhead Game Studios Magicka,2011,https://www.gamasutra.com/view/feature/134840/postmortem_arrowhead_game_.php,Magicka,pc,adventure roguelike,multi online single,management-people,delays,"Due to our milestone plan, we had this mentality of having to pull together This mentality resulted in not only our actually pulling together, but also our shunning existing technology, putting too much effort in things that didnt matter and just plain grinding -- MMO style. It also made us never able to cut features that would detract from the gaming experience. We instead took it upon ourselves to work overtime for several consecutive weeks to catch up for previous misjudgments and attempt to reach new impossible milestones. One of these ill-focused features was the magical menu tome. We spent several weeks designing and implementing this book, with careful attention to detail so that each page would curl realistically as the player flipped pages so that the previous page displaying correctly on the now turning one."
554,Postmortem: Arrowhead Game Studios Magicka,2011,https://www.gamasutra.com/view/feature/134840/postmortem_arrowhead_game_.php,Magicka,pc,adventure roguelike,multi online single,management-feature,planning,Back in the days when we crafted our first budget and milestone plan we had the development ofMagicka ironed out to five full-time developers working for six months. Fact: Magicka took eight full-time and between two and four part-time developers 24 months to barely finish. Our initial estimate was off by more than 700 percent. One would think that an estimate thats so horribly wrong as this one wouldve been caught and adjusted.
555,Mediatonics Monsters (Probably) Stole My Princess,2011,https://www.gamasutra.com/view/feature/134680/postmortem_mediatonics_monsters_.php,Monsters (Probably) Stole My Princess,console,platformer,single,production,design,"The main criticism we got for Monsters was concerning the length of the game -- this was mostly due to the file size limitations, but also the fact that there were not many other Minis titles in existence, we did not have much to base our game structure on in terms of what works best for that specific format. (...) The deeper reasons behind a perceived lack of content are actually expanded upon in other points to follow, which include the way we structured the game modes and the way we did animations in-game, but overall this issue can be put down to our inexperience with PSP development and the Minis format constraints and, perhaps, not catering well enough for the expectations of the PSP/PS3 userbase and relying too much on our experience from Flash and iOS gamers. (...) We could have done more with the combo aspect to encourage that second type of player to get into the spirit of it a little more -- maybe by requiring a minimum combo amount to damage the level bosses. This would have made things more interesting and ""enlightened"" the more casual players to the innate satisfaction gained from mastering the combo system. (...) Wed hidden an entire stage in Monsters, which was unlocked if the player attained gold medals for the five main story levels. It had all-new artwork and a unique boss (Kong in a Thong) and, in terms to the story, took place in the Dukes dreams as a prequel to the rest of the plot. Unfortunately, hardly anyone seemed to notice this. Considering that we took a lot of flak for our story mode being too short and that by missing the secret stage, players were missing out on an entire sixth of the story, wed consider this a thing that definitely went wrong. Avoiding overt hints that the level existed was a deliberate decision, mostly because we wanted people who unlocked it to be completely surprised and bowled over by their discovery. However, we failed to properly indicate that the level even existed, so any unlocks that did happen were by serious players and ardent completists discovering the sixth stage accidentally."
556,Mediatonics Monsters (Probably) Stole My Princess,2011,https://www.gamasutra.com/view/feature/134680/postmortem_mediatonics_monsters_.php,Monsters (Probably) Stole My Princess,console,platformer,single,production,technical,"Working within the constraints of the Minis platform, we knew we had to create a tight, small-footprint game that would be easy to learn, yet difficult to truly master. We drew on our Flash sensibilities to devise an immediately accessible title that we could wrap in our own distinctive art style and place in a comedic universe, where our characterization and visual design would (hopefully) provide entertainment alongside the raw game mechanics -- and all in under 100 megabytes. (...) To save time in the development process, we used pre-rendered PMF movies for the Dukes finishing moves instead of writing an engine to render them dynamically in-game. These animations mounted up as the Duke has a number of different finishing moves that can be applied to any monster, so they ended up using most of our space! In fact, 80 megabytes of the games footprint is taken up by these animations. (...) The fact that we used PMF files also caused us quite a few unexpected issues later on, as they kicked up a few problems on the PS3 emulator. When we were porting the game to XNA, we ran into more problems as XNA video playback is not great and we couldnt play the movies in full screen HD, which made things look a little stilted."
557,Mediatonics Monsters (Probably) Stole My Princess,2011,https://www.gamasutra.com/view/feature/134680/postmortem_mediatonics_monsters_.php,Monsters (Probably) Stole My Princess,console,platformer,single,management-people,delays,"Its unavoidable really, but we ran into delays for launching on both PSN and Indie Games due to issues at the platform holder end. In PSNs case, Sony updated the PSP emulator, which actually contained a bug that led to us failing submission. We had to re-submit and this incurred a significant delay. With the 360s Indie Games, we had to approve via the XNA community, which was reliant on enough members going through the process. This took a lot longer than standard, internal approvals."
558,Mediatonics Monsters (Probably) Stole My Princess,2011,https://www.gamasutra.com/view/feature/134680/postmortem_mediatonics_monsters_.php,Monsters (Probably) Stole My Princess,console,platformer,single,business,monetization," Aside the financial aspects, we got nearly universal praise for the game, either based on its gameplay merits or our comedic approach and strong sense of visual design. "
559,Capcoms Okamiden,2011,https://www.gamasutra.com/view/feature/134685/postmortem_capcoms_okamiden.php,Okamiden,console,action adventure,single,production,design,"At the same time, we were able to maintain the quality of the localized versions and worked efficiently to get the basic game done ahead of schedule. Just when we were about to finalize the ROM, news about the Nintendo 3DS and the new Pokémon game came out. Even though the news of the Nintendo 3DS was a bit earlier than we had expected, we decided that releasing the pan-Western versions of the game after Pokémon and before Nintendos 3DS would be our best bet. Once we decided that the game would be played with two characters, Chibiterasu and a partner that rides on the wolf gods back, we began working with the designer on the Kuni character. Since Kuni is the first partner to appear in the game, we had to make sure he was really energetic. We worked with the design team to lock down the direction we wanted to take with Kuni. The teams would disagree from time to time, but we talked through the issues, came to an agreement, and moved forward with the design. The character model looked great on the Maya 3D engine, and we began programming the basic animations. Finally, the time came to test it out on the Nintendo DS. When we had Kuni climb onto Chibiterasus back and run around the screen, something just did not feel right. We tried for hours and hours but simply could not make it satisfactory. We dreaded the possibility that the designers would have to toss their work out and start from the beginning. After all, we cannot force players to play something that we cannot appreciate. We began working with all of the design teams (character, model, animation, etc.) and discussed the reasons why Kuni did not turn out as we had hoped on the Nintendo DS, not relishing the notion of going back and re-designing Kuni from the start, and how much time this whole process would take. But without a single complaint, the team came together and agreed to make an even better character model. After discussing what worked and what did not work, we decided to come up with a character direction everyone could agree upon. This way, it was no longer something one was told to make, but rather, something that each person could visualize and contribute. While for some teams this process may have decreased morale, for us, it helped us come together and work even harder.  
"
560,Capcoms Okamiden,2011,https://www.gamasutra.com/view/feature/134685/postmortem_capcoms_okamiden.php,Okamiden,console,action adventure,single,production,technical," To be frank, this was a painfully difficult process. We knew that bringing the expressive and expansive brushstroke art style used on the PS2 and Wii versions of the game to the Nintendo DS would be tricky. This was an essential step in making the game, and, with all of production on board, we began the long, grueling process of trial and error to make this happen. The planners suggested fewer characters with more depth, the designers worked to create just the right amount of polygons for the characters and environments, and the programmers worked furiously until the very end to come up with a way to show several things at once on the screen. At first we tasked the designers to create characters and enemies without a limit on polygon count. This allowed them creative freedom during the design phase. However, once we got to implementation, we were stuck with some obstacles. First, our team had such an abundance of strong, creative ideas for the adventures of loveable Chibiterasu that we couldnt possibly fit them all into the game... it would have run too many hours long! Second, we had to be realistic about our plans due to the ROM cartridge capacity. Aside from schedule management, ROM cart limits were another source that played into the removal of the stages and enemies initially scoped for the latter half of the game. Lastly, to optimize the processing and rendering speed of Okamidens sumi-e style graphics our programmers had to perform many clever tricks. They worked hard to divide up stages at unnoticeable intervals and maneuvered camera settings so only necessary things were displayed with proper camera settings throughout the stages. Certain animations as well as character and stage traits had to be tweaked and refined numerous times."
561,Capcoms Okamiden,2011,https://www.gamasutra.com/view/feature/134685/postmortem_capcoms_okamiden.php,Okamiden,mobile,action,single,management-people,delays,"For the development of Okamiden, the main challenge was to recreate the beautiful world of Okami on the Nintendo DS. To do that, the team spent countless hours trying and re-trying, doing everything to increase the quality of the game. Unfortunately, this pushed back the production schedule for the Japanese version of the game."
562,Capcoms Okamiden,2011,https://www.gamasutra.com/view/feature/134685/postmortem_capcoms_okamiden.php,Okamiden,mobile,action,single,management-people,team,"A good team leader is able to work with each department to define clear and understandable roles, and help the leaders with any on-the-spot problems and concerns. Had that been the case, even if something like the Kuni re-design were to happen again, then the team would make sure to move on quickly and do our best to fix it. Also, by creating an environment that allows everyone to speak freely about what they think about the game, the team would be able to input their own ideas and feel as though they are contributing something to the project. Had the teams been under such management, they would have performed without a problem through simple schedule management and direction."
563,Capcoms Okamiden,2011,https://www.gamasutra.com/view/feature/134685/postmortem_capcoms_okamiden.php,Okamiden,console,action adventure,single,management-feature,planning,"And while this all sounds good in theory, the schedule for Okamiden was not as such. The head of each department held their own sense of pride and responsibility for their piece of the game. Each of the department heads was striving for perfection. Be it Art, Sound, or Programming, this individual ""perfection in my group"" approach affected the greater whole of the project. One by one, each of these elements began to take their toll on the schedules and eventually on the latter half of the game itself. Some of the latter half of the game had to be revised and scoped differently than initial plans. Next time, we will be sure to manage our schedules better and work in harmony as collective team for the greater good of the game instead of staying overly focused on perfection in our individual departments."
564,Capcoms Okamiden,2011,https://www.gamasutra.com/view/feature/134685/postmortem_capcoms_okamiden.php,Okamiden,console,action adventure,single,business,marketing," Ideally, all games would be produced and sold worldwide at the same time. SinceOkamiden was developed in Japan, we were asked to complete the Japanese version first. In the time between the releases of the Japanese version and the pan-Western SKUs, information about the game was posted to the internet. We understood that fact and therefore did not place many restrictions on the information or assets used for overseas PR promotions. Without giving away any particular spoilers, stages, characters, enemies, and bosses were revealed not with teaser trailers that we posted online. This was a great way to get information about the game out there, but made it difficult to promote the title through traditional PR methods globally and created the need to make additional assets for the pan-Western marketing campaign. This is obviously a strain on development resources and something we are more acutely aware of now. Japanese consumers and print media seem to prefer screenshots while pan-Western audiences prefer videos and trailers. Using development resources to create these assets can tax the development schedule and team resources. We all worked very hard to make sure the best possible assets were created for each specific market. We will work to improve on this in the future."
565,Vector Units Riptide GP,2011,https://www.gamasutra.com/view/feature/134849/postmortem_vector_units_riptide_.php,Riptide GP,console mobile pc,racing,single,production,design,"From the start we knew that content creation would be critical path inRiptide GPs development. Unlike the code, which we owned outright, we werent able to reuse any content -- models, texture libraries, anything -- from Hurricane, so I had to start from scratch. When I first broke down my 4.5 month art schedule, it looked pretty scary. I had about four weeks for the jet skis, characters and animations, 10 weeks for environments, and five weeks for everything else, including UI, particle effects, polish, optimization, and whatever unforeseen gotchas might lay in wait. The environment schedule was the hardest. On average I had about six to seven days to finish each of our six main race tracks, with another day or two allocated for creating each reverse variant, which I wanted to be at least a little different, with unique lighting and water features. The only way this would be possible was through conscientious reuse and instancing, and to some extent I was able to make this work -- the tracks were built from instanced segments, and I looked for every opportunity to reuse and recycle textures and geometry from track to track. But I couldnt quite let go of my desire to try and make each track feel different, and I didnt reuse as many assets as I could have."
566,Vector Units Riptide GP,2011,https://www.gamasutra.com/view/feature/134849/postmortem_vector_units_riptide_.php,Riptide GP,console mobile pc,racing,single,production,technical,"The first few weeks of January, when we were porting our Vector Engine over to run on the Tegra 2 dev hardware, were a bit of a nailbiter. We had signed up to deliver an in-engine demo for NVIDIA to show at Mobile World Congress in early February. We didnt know what to expect from the hardware in terms of real performance, but we had high hopes. All we had to go on were the paper specs and the expansive claims from NVIDIA and early-adopter developers that Tegra 2 could provide a ""console quality"" experience on mobile. Well, as is generally true with performance claims for new hardware, the reality was a bit more complex. As I mentioned earlier, porting our 360/PC cross platform engine over to the Android NDK went smoothly. By the end of the second week, Ralf had my rough prototype level up and running on the Tegra 2 dev kit, and in some respects the Tegra 2 hardware exceeded our expectations. The CPU was amazing -- it ate up our water sim and fluids calculations, munched happily on a straight implementation of Bullet Physics, chewed up my high-poly models, and asked us for more. The GPU was another story. We were extremely fill-rate bound, which is particularly a challenge in a game where almost half of the screen space is covered by a giant translucent water mesh. We quickly realized that the complex pixel shaders wed relied on so heavily on the 360 just wouldnt allow us the framerates we needed for a fast-paced racing game. We streamlined our shaders, moved every per-pixel process we could to the per-vertex level, and switched to low-precision calculations wherever possible. We stripped normal mapped ripples off the water and increased mesh density to maintain the complexity we needed to break up reflections. I dusted off my old skool artist toolkit, baking lighting into vertex colors, painting lighting detail into diffuse textures, and ruthlessly managing texture and mesh variation to keep the GPU pipe as open as possible. NVIDIA provided a ton of helpful performance analysis throughout this process, and in the end, we were able to deliver that first in-game MWC demo with a level of visual quality that, at least to the untrained eye, really does look comparable to something you might see on a modern PC or console. (...) We took Googles advice and implemented their Android Market license-checking. Ralf obscured the license code wherever possible, looking for ways to outmaneuver at least the automatic bots that strip licenses on new executables and post them automatically to warez sites. We knew that if the hacker community really wanted to they could find a workaround, but at least theyd have to work for it. Well, they didnt have to work that hard. When the game first launched, we were elated to see posts in the warez forums indicating that the automatic license stripping wasnt working. But within 24 hours, a playable cracked version of Riptide GP showed up. According to our analytics, as of this writing the ratio of pirated copies to legal copies out there in the world is about 9 to 1. Our assumption -- our hope at least -- is that the majority of pirates probably wouldnt have bought the game anyway, so the numbers dont precisely translate into lost sales. The annoying thing, though, is that for the players who buy the game legally, Googles license check can be a little persnickety, particularly if the user has a spotty mobile internet connection. We dont get very many tech support emails -- Im happy to say the game itself is pretty stable -- but the majority of emails we do get have to do with failed license checks. They can be answered and resolved with a simple form letter, but its time consuming, and annoying, and it makes us wonder whether it was worth implementing the license check at all."
567,Vector Units Riptide GP,2011,https://www.gamasutra.com/view/feature/134849/postmortem_vector_units_riptide_.php,Riptide GP,console mobile pc,racing,single,management-people,team,"We didnt start out intending make Riptide GP with just the two of us. Id thought I might contract out a month or two of artwork, and we had some budget allocated for things like sound design and music. But because we were partially fundingRiptide GP out of our own pockets, we were powerfully motivated to keep costs down. And because our schedule was so tight, we felt we couldnt afford the time it would take to manage outsourcing. So we just went full steam ahead. My schedule was pretty much filled from start to finish with art tasks, but as it turned out, Ralfs programming schedule started to open up once he got past the graphics engine optimizations. He ended up taking on a ton of miscellaneous content tasks, including sound design and music curating (we sourced most of it from online stock sites like Audiomicro), screens flow scripting, and even some particle effects. The problem as always with a very small team -- in our case, a very, very small team -- is that there is virtually no wiggle room for unforeseen variables. We went from three week Scrum sprints at the start of the project, to two week sprints, to one week, and towards the very end we tossed Scrum completely and just went with prioritized task lists, squeezing as much as we could into the time we had. As hard as it was, it was creative, rewarding work, and somehow we managed to get it all done on time. But the process wasnt always pretty."
568,Vector Units Riptide GP,2011,https://www.gamasutra.com/view/feature/134849/postmortem_vector_units_riptide_.php,Riptide GP,console mobile pc,racing,single,business,marketing,"Coming off Hydro Thunder Hurricane on XBLA, we thought we had the whole press-promotion thing figured out: You send out some press releases with screen shots and video for preview coverage, send out review codes for reviews, and bam, youre done! Of course we were hugely helped by the fact that Hydro Thunder was a known franchise, but from what we could see, the same strategy more or less worked for original indie games on console as well. Not so with mobile games -- its particularly hard to get coverage for Android games, and even more challenging for Tegra-exclusive games. Few of the major gaming sites even offer dedicated mobile coverage, and those that do mostly just cover the biggest iPhone/iPad titles. As of this writing, you wont find a single Android game listed on Metacritic. And outside of the mainstream gaming press, the major tech outlets like CNet and Wired focus primarily on hardware and non-gaming apps. For Riptide GP, we partnered with marketing group Flashman Agency to try and make the biggest splash we could. We worked with NVIDIA and carrier/hardware partners to showcase the game at press events and trade shows like MWC, GDC, and E3. We sent out press releases, trailers, screenshots and other assets to all the major gaming and tech outlets. Despite this, most of our efforts announcingRiptide GP to the world were met with... crickets. Well, thats not entirely fair. Joystiq covered us, and we got a decent amount of traction and praise from many smaller to mid-sized Android and mobile gaming sites and blogs. But the major gaming and tech sites were simply not interested. For those sites that did cover us, our challenge became one of infrastructure. The Android Market doesnt have any review code mechanism, so there is no easy way to send a copy of your game to the press to review. One additional challenge was that not a lot of sites even had Tegra hardware they could play the game on. We ended up getting a bunch of loaner phones and tablets that we preinstalled the game on and sent out to press ourselves. I understand the lack of interest from major outlets is partly a question of platform market share. But I believe its also due to prejudice on the part of the mainstream gaming press -- mobile games still have a reputation for being shallow, throw-away experiences, unlike ""real games"" developed for PC and console."
569,Team Meats Super Meat Boy,2011,https://www.gamasutra.com/view/feature/134717/postmortem_team_meats_super_meat_.php,Super Meat Boy,console pc,platformer,single,production,technical," When we initially announced Super Meat Boy for WiiWare, we were planning 100 levels at maximum, no cutscenes, and no unlockable characters. We were planning on just doing a straight port of the Flash game with a few extras and nothing more. We obviously got carried away, but I wouldnt call it a bad thing, because we made the game we wanted to make. The bad part is we couldnt possibly do the game on the Wii. As we were building the game and kept adding more to it, it became clear that it would be nearly impossible to fit within the size limits of WiiWare. It was always in the back of my mind to try to make sure we could, but cutting down to 50 MB meant removing a lot of content that made the game what it is."
570,Team Meats Super Meat Boy,2011,https://www.gamasutra.com/view/feature/134717/postmortem_team_meats_super_meat_.php,Super Meat Boy,console pc,platformer,single,production,testing,"A two-man team putting out a game on several platforms is pretty tough. The PC launch was a little rocky because of testing. I had what I felt was a wide range of test machines. I had range from our minimum specs (an Acer netbook) to a beefy quadcore. I thought I had everything covered; I had ATI cards and NVidia Cards. This obviously wasnt enough. The day of PC launch we were inundated with tons of bugs, crashes on startup and shutdown, and more. I think I answered about 2,000 emails during the first few days of launch. I felt similar to how I did during the crunch for the XBLA launch -- every time I would fix something, it seemed like something else broke. It was hard to go from the stress of XBLA launch to the PC launch in the same month. It was a feeling of accomplishment followed by an immediate feeling of failure. For our next game well do more extensive PC testing, and probably actually farm it out to a company that specializes in testing."
571,Team Meats Super Meat Boy,2011,https://www.gamasutra.com/view/feature/134717/postmortem_team_meats_super_meat_.php,Super Meat Boy,console pc,platformer,single,production,bugs,"Because we were so time-compressed, we were basically developing features during bug checking, which meant every single time I turned on the computer and checked the bug database, the work I did the night before was pretty much rendered irrelevant. I would work and fix 100 bugs in a night and get it down to 50, then wake up the next morning and have 200 bugs to fix."
572,Team Meats Super Meat Boy,2011,https://www.gamasutra.com/view/feature/134717/postmortem_team_meats_super_meat_.php,Super Meat Boy,console pc,platformer,single,management-people,crunch-time," In late August 2010, we got a phone call from our producer at Microsoft, explaining that there was going to be a fall promotion similar to Summer of Arcade. At this point, we were about four months from being done, but in order to release during this promo, we needed to pass certification in two. The deadline seemed a bit impossible. We were told if we didnt make it into the fall promo, we would have to push the game back until spring or attempt to launch the game ourselves without much support, and risk a sizable loss. Microsoft explained that all games in the promo would get an exclusive launch week, very high spotlight advertising, reviews by Major Nelson, and face time at PAX and other events. This promotion was going to be called Game Feast. At this point, both of us were going into the red financially and felt like if we didnt get into this fall promotion, there was no hope for us. We couldnt push to spring, and releasing without Microsoft support seemed like suicide, so we went all-in and attempted to do what would take any team four months within two. These two months were easily the worst months of my life. The pressure, workload, and overall stress of development was extremely overwhelming. In those two months, neither of us took a single day off of work, working 10–12 hours a day, every day. There was a point at the end of development where I was getting less than five hours of sleep for several weeks. I remember having a breakdown in September where I actually thought I was stuck in some nightmare where I was repeating the same day over and over."
573,Team Meats Super Meat Boy,2011,https://www.gamasutra.com/view/feature/134717/postmortem_team_meats_super_meat_.php,Super Meat Boy,console pc,platformer,single,management-people,team,"Its hard to say our personal expenses were something that really went wrong, due to the fact that it was a HUGE motivator to getting the game done, but it was definitely an issue as we moved into the last few months of development. There was one point where I had emergency gallbladder surgery that put me in the hole $50,000 due to the fact that I couldnt afford health insurance. (...) I think both of us were trying to keep from the other just how bad things were getting to avoid stressing the other out any more then we already were."
574,Team Meats Super Meat Boy,2011,https://www.gamasutra.com/view/feature/134717/postmortem_team_meats_super_meat_.php,Super Meat Boy,console pc,platformer,single,management-feature,budget,"We had no real money at all, and even all the comics we had printed for GDC and PAX were attained through a barter system where my wife would make plush toys to sell in the Newgrounds store in exchange for the cost of printing. Our situation was quite dire at several key points of development, but Ive been on the poverty line for the past 10 years, so going without wasnt much of an issue, and honestly, we had much bigger issues to worry about anyway. "
575,Team Meats Super Meat Boy,2011,https://www.gamasutra.com/view/feature/134717/postmortem_team_meats_super_meat_.php,Super Meat Boy,console pc,platformer,single,business,marketing,"Development was over, Super Meat Boy had taken home a few awards at PAX, and the press was starting to focus their lights on us. Many websites and magazines said Super Meat Boy was easily the hit of the Feast, and possibly the next big indie hit, but the business side of Microsoft wasnt convinced. We were told our price was too high, our visuals too rough and simply not as eye catching and flashy as the other Game Feast gamesComic Jumper and Hydrophobia. Our hearts sank when we were informed that we were projected to sell as much if not less than Hydrophobia, which would be the second-highest grossing game of the Feast in their minds. (...) Super Meat Boy launched Oct. 20th alongside Costume Quest. It was placed third on the spotlight for four days. We never received any of the promotional launch bonuses that the previous Game Feast games had gotten (exclusive launch week, #1 spotlight, and a review by Major Nelson) but were told if we performed well in terms of Metacritic score and sales, we would move up and be more heavily advertised. (...) Our spotlight placement was gone by day five and never came back. We never got a review by Major Nelson nor did we get an explanation for why Microsoft launched SMB alongside Costume Quest, or for why, even though we exceeded their expectations for sales and score, we werent given the treatment we were promised, even while they continued to heavily promote other Game Feast titles like Comic Jumper. In the end, we felt very confused and taken advantage of. To this day we are still unsure of why things went down the way they did. Was it that Microsoft simply wanted to detach itself from the Game Feast? Was it that they didnt believe we would perform as well as we did? Or was it just horrible luck at the most competitive time of the year for the video game industry? Either way, by far the biggest mistake we made during SMBs development was killing ourselves to get into a promotion we would gain basically nothing from."
576,Smudged Cat Games The Adventures Of Shuggy,2011,https://www.gamasutra.com/view/feature/134866/postmortem_smudged_cat_games_the_.php,The Adventures Of Shuggy,console pc,platformer puzzle,single,production,design," Since the release of the game Ive seen some reviews that really like the graphics and some that dont. However, one thing that most reviewers seem to agree on is that the graphics dont fit the gameplay. A lot of the levels in Shuggy are aimed at hardcore gamers who know their way around a platform game, but the graphics make the game look like its aimed at a much younger audience with less experience. I worry that a lot of hardcore gamers have disregarded the game, assuming that its some generic platformer aimed at pre-teens. Similarly, I imagine there have been some younger gamers out there who have downloaded the trial liking the look of the game, but have found that the levels are far too difficult for them. Its a shame, because I really like the look of the game, and Im not a fan of the gunmetal grays and rusty browns that tend to dominate games aimed at a more hardcore audience -- but in future, Id try to keep the look of the game more in line with the audience that its targeted at. (...)  The demo, along with most other elements of the game, went through a few changes over the course of the development. I initially implemented a trial similar to what ended up in the final product, containing the first few levels of the game from the dungeon area. The first publisher felt that players might think the dungeon was all there was, and wanted to get across the fact that there are five areas in the game, each containing 20 or more levels. The trial was changed to levels scattered throughout the game rather than just at the beginning so it was obvious how deep the game was when you played the trial. The other advantage of this approach was that it gave the chance to show off more of the different game mechanics rather than being limited to what was available in the dungeon. When Valcon Games took over as publisher, the company felt that leading the player around all the different areas might be too confusing and wanted to go back to the first few levels from the dungeon. The idea was that we would still convey that there are many different game mechanics through a couple of videos that pop up as you play through the trial. I think changing back was a big mistake. Although weve got the videos, Im not convinced that players really pay much attention to them. When someone is playing a demo, they just want to play, and can easily skip over videos. Ive done it myself -- when upsell screens appear as Im playing a trial, I mash the A button hoping to continue, and dont really look at whats on screen. I should have let the game sell itself, rather than hoping the upsell screens would do it."
577,Smudged Cat Games The Adventures Of Shuggy,2011,https://www.gamasutra.com/view/feature/134866/postmortem_smudged_cat_games_the_.php,The Adventures Of Shuggy,console pc,platformer puzzle,single,management-people,delays," I believe the single biggest problem was how long it took to get the game into peoples hands. Development started at the beginning of 2007, and the version of the game entered into Microsofts Dream Build Play competition wasnt vastly different from what was finally released in June this year. Seeing games such as Braid, Lazy Raiders, and P.B. Winterbottom released, which use mechanics featured inShuggy was upsetting. I knew my chance to stand out kept slipping away. Not only that, but there has been an understandable assumption that I stole the mechanics of those games for Shuggy. Particularly upsetting for the time travel / past echo mechanic, as Id releasedTimeslip back in 1999. I cant help but wonder how the game would have been received had it been released sometime in 2008, but as a lone developer there was no way I could fund an XBLA release myself. It was unfortunate that Vivendi was taken over by Activision Blizzard, as it (eventually) decided to terminate the Shuggy contract, but it was something I had an infuriating lack of control over."
578,Smudged Cat Games The Adventures Of Shuggy,2011,https://www.gamasutra.com/view/feature/134866/postmortem_smudged_cat_games_the_.php,The Adventures Of Shuggy,console pc,platformer puzzle,single,management-feature,scope," Like most projects, Shuggy started out fairly simple, and then more and more features kept getting added. As well as adding the various different game mechanics, I had the co-op, challenge, and head-to-head modes, as well as some grand plans to have various minigames themed around some of the mechanics. The minigames actually got implemented, but never got polished enough to make it into the final product, after Sierra suggested that there might be a bit much going on. Since then, Ive released the mini-games as separate Indie titles. TheresA Bombs Way, based around the floating jump and rotating mechanics which is like a version of the old arcade hit Bomb Jack, the game the floating jump was based on.The Tower: A Bombs Climb is based around the zombie game mechanic where the player doesnt have direct control over the character, but can power up his jump to propel him up a never ending tower. Im not a big fan of the head-to-head mode; I dont think its that interesting, and while I quite like the challenge mode, I think it would have been best if Id just implemented the single player and co-op modes from the beginning... and added support for playing co-op online. Its too easy to get carried away when you come up with an idea for something, but when youre working with such a small team, Ive learned that you really need to keep things simple and focus on the best aspects of your game."
579,Smudged Cat Games The Adventures Of Shuggy,2011,https://www.gamasutra.com/view/feature/134866/postmortem_smudged_cat_games_the_.php,The Adventures Of Shuggy,console pc,platformer puzzle,single,business,marketing," Shuggy appeared on XBLA on the 15th of June, without warning or fanfare. I left publicizing the game in the hands of the publisher, and ended up feeling quite disappointed at the amount of publicity Valcon managed to generate. Once we had a release date, I felt we needed to be letting everyone know about the game. I spoke to the publisher as I felt we should be emailing game video and screenshots to as many web sites as possible. Valcon didnt want me to contact any media directly, as this would be duplicating their efforts, so I left the publicity in their hands. It took ages for the official press release about the game to appear, because apparently Valcon was waiting on it being approved by Microsoft. We even had to wait until the game was actually released before getting any review codes, meaning there were no reviews of the game available on the day of release. As this is my first XBLA, game I dont know what kind of PR Microsoft could or should do, butShuggy didnt get any attention on the Xbox dashboard. Combined with the lack of pre-release publicity from Valcon, this meant that the game went live without anyone knowing about it. Shuggy was also released on the same day as the latestMagic: The Gathering title, which got a lot of attention and has been really successful. The combination of going out cold and up against such a strong title really didnt work in Shuggys favor. Trying to put myself in Microsofts place perhaps its lack of interest stems from the fact it took so long to release the game. By the time Shuggy came out, a few of its more interesting elements had been overshadowed by other titles, so Microsoft may have felt the game was treading over old ground. I dont know any of this for sure, and still think that each new XBLA release should have some kind of attention of the Xbox dashboard. In hindsight, I wish Id followed my instincts and taken the matter into my own hands. Im going to make sure I give any future projects a bit more publicity during development, rather than waiting until theyre released. Ive learned this lesson the hard way."
580,Humble Hearts Dust: An Elysian Tail,2012,http://www.gamasutra.com/view/feature/180520/postmortem_humble_hearts_dust_.php,Dust: An Elysian Tail,console pc,action,single,production,design,"Finally, while it was my intention to make a dialogue-heavy RPG, its not something Im rushing to do again right away. The time, cost, and insane amount of work that it takes to write, test, record, and localize such a thick script makes it a prohibitive endeavor."
581,Humble Hearts Dust: An Elysian Tail,2012,http://www.gamasutra.com/view/feature/180520/postmortem_humble_hearts_dust_.php,Dust: An Elysian Tail,console pc,action,single,production,technical,"Immediately after the final voice files came in, an unforeseen issue popped up just days before submitting to final certification. I dropped the 1700 audio files into the solution -- and realized the game was taking upwards to a minute to boot. A solid black screen displayed for a full minute with no loading animation, no splash screen, nothing. Apparently the project would halt as it analyzed each and every file (twice), rendering the game unshippable. It became clear that in order to meet the impending milestone (that I could not miss), I would have to cut all the voiceover from the game. A year of casting, recording, editing, animating, coding. All gone. I broke down, and halfway into the day went straight to bed. I had to find out a way to tell everyone, including the 40-plus actors, that all their work was not going into the game. It honestly felt like losing a loved one. A few hours later (which was the norm at the time) I woke up, seemingly having reprogrammed the entire dialogue system in my dreams, as well as a new way to load all content, and was able to get everything working again. This was not easy, but again, at this point it wasnt like I could put it off for later. Thankfully the game shipped with everything intact, and actually loaded faster than it used to."
582,Humble Hearts Dust: An Elysian Tail,2012,http://www.gamasutra.com/view/feature/180520/postmortem_humble_hearts_dust_.php,Dust: An Elysian Tail,console pc,action,single,management-people,crunch-time,"After a lot of back and forth with Microsoft, my family, and awhole lot of prayer, I said yes to Summer of Arcade. I would have to take an already massively difficult eight to 10 months of development and cram it into three. I knew I would see very little of my family during that period (despite working from home), including my newborn daughter, due just two months later. Much of what happened after that is a blur. I was already used to working seven days a week, but now those turned into nearly 20 hour workdays. I couldnt go to bed saying ""Ill finish that tomorrow"" because tomorrow would bring a new set of challenges. Im a pretty ""got it together"" kind of guy, but I broke down a number of times. If it wasnt for my family literally placing food between me and my monitors, I wouldnt have eaten. The days where I realized I hadnt stepped out of the house and looked at the sky for over two weeks made me realize how crazy this all was. I can hardly remember cranking out all the cutscenes, wrapping up the remaining enemies, and populating the rest of the world during those hectic weeks. I have no idea how I was able to rewrite several massive systems -- including one to resolve a bug that threatened to cut all the voice over from the game -- just days before certification. I consider myself a man of faith, and it was certainly tested during those dark hours."
583,Humble Hearts Dust: An Elysian Tail,2012,http://www.gamasutra.com/view/feature/180520/postmortem_humble_hearts_dust_.php,Dust: An Elysian Tail,console pc,action,single,management-people,team,"And it wasnt exactly a walk in the park for my collaborators. On top of working on multiple projects themselves, we were all caught off guard by the accelerated schedule. HyperDuck produced music and sound at an insane pace, Toon Platoon was recording and editing hundreds of lines across 40 actors seemingly overnight, and Alex and I rushed on last-minute changes to the script to accommodate the actors and to lock it down for localization."
584,Humble Hearts Dust: An Elysian Tail,2012,http://www.gamasutra.com/view/feature/180520/postmortem_humble_hearts_dust_.php,Dust: An Elysian Tail,console pc,action,single,management-feature,cutting-features,"On the subject of trimming content, Dust: AET was originally envisioned as a much larger game than it ended up being. Once I had the core mechanics down, I made the tough decision to prune my initial concept. There were actually a lot more non-combative plans, such as owning property, farming, fishing, and so on. Id spent a lot of time planning these features and, perhaps even more problematically, envisioning them naturally as parts of the game in my head. For the longest time, Dust: AET needed these disparate components tobe Dust: AET. Most of these grander concepts were pulled simply out of necessity. Its immensely hard parting with a concept -- any concept -- that you see adding value to your dream game, but the reality of being one man and really wanting to get the game done before the universe imploded weighed heavily on my mind. (...) Towards the end of 2011, Dust: AET was beginning to come together. It was impressive seeing the levels going up screen-by-screen, but a rather large problem was looming in the background this whole time: the story was nowhere near finished. In actuality, the outline Dean had laid out called for an entirely new sixth chapter -- a massive third act that took the player to brand new locations fighting against a new main antagonist and changing the entire focus of the storyline. Length-wise, this finale would have tacked on another couple hours of gameplay time, which equated to another several months of development time. In the interest of getting the game done, Dean and I resolved to cut this final section of the game and tighten up what we had, promoting General Gaius up to main antagonist and centering the game around his campaign. While this sounded great on paper, it meant a lot of latenight, multi-hour conversations with Dean where we hashed out numerous alternate story possibilities. (...) When youre on a team, cutting content is a fact of life. When youre one guy, every single asset you create is important. The area had already been laid onto the world map, the music had already been written, and Dean had spent years envisioning the ending in his head. Then I came in and politely (sort of) threw that out the window."
585,Humble Hearts Dust: An Elysian Tail,2012,http://www.gamasutra.com/view/feature/180520/postmortem_humble_hearts_dust_.php,Dust: An Elysian Tail,console pc,action,single,business,marketing,"By far my biggest regret with the game had nothing to do with actual production, but rather that I literally had no time to build awareness before the launch. Plans for nurturing a community and reaching out to media were thrown out the window once the new deadline was agreed upon, and its hard not to look back and think, ""What if I had delayed and did a proper marketing ramp up?"" I still believe it was better to release this year, rather than try to scramble during what many are predicting will herald a new generation of hardware in 2013. But spending so many years on the game also worked against me, as a curious number of ""Dust"" titled games popped up throughout the games production, sometimes even circumventing any marketing efforts I was currently involved with. It was hard to keep the momentum going for Dust: An Elysian Tail when Dustforce, Dust 514, and From Dust were all making headlines at the exact same time. Additionally, without a strong community, it was an uphill battle once the game did start making headlines, as the visual style became an unusual point of contention, to the point that some websites refused to cover the game, despite it being part of such a prominent promotion. For their part, Microsoft did an admirable job giving the game exposure on the 360 dashboard and elsewhere, but I learned some valuable lessons when it comes to promoting your work, a skill I have not quite refined. Good reviews only take you so far."
586,Mode 7 Games Frozen Synapse,2012,https://www.gamasutra.com/view/feature/134984/postmortem_mode_7_games_frozen_.php,Frozen Synapse,mobile pc,strategy,multi single,production,design,"Frozen Synapse is a complicated game: it requires the use of a dense, sometimes fiddly UI to give orders which are both spatial and temporal. Waypoints, units and orders can all overlap each other and create giant tangles. Also, it introduces some fairly unusual mechanics to do with timing, use of cover, and unit ""readiness"". Our tutorial and the early part of our single player campaign didnt do enough to ease in new players: indeed, the first level was so counterintuitive that it took many players a ridiculously long amount of time to beat it. At PAX 2011, we got the opportunity to hear some feedback from the PAX 10 judges: they all cited the early part of the game as the core reason we narrowly missed out on being included, despite the fact that they all enjoyed playing it! (...) Frozen Synapse was intended to fit into brief gaps between other games, but it ultimately ended up being a very mentally intense strategy game in its own right. Its not relaxing to play, because any failed encounter results in insta-death for the units involved, and the entire match can turn on rounding a corner too quickly, or forgetting to duck. Many -- in fact most -- competitive strategy games have this issue to some extent, but it was something that we were particularly aiming to avoid! Equally, because of the tightness of the mechanics, it is a difficult game to expand post-launch. Sure, there is scope for further units, new game modes, new SP content and other things, but many features that people requested simply wouldnt fit into the design. There is definitely scope for a similar tactical game which allows a variety of actions by each individual unit -- things like rolling into cover, diving across rooms, and the addition of meta-mechanics like hacking security systems, and so on. It was disappointing not to be able to say yes to any of those wackier ideas in multiplayer! Also, there is a constant sense of pressure on the player to make a perfect decision. Because its possible to test plans for both your own units and those of your opponent, in most situations you feel like you could have predicted events perfectly: thats often not a great sensation for the player as it just leads to significant frustration. We succeeded in creating a very tense and exciting game, but also one which is incredibly unforgiving. (...) One of the major reasons for this was the lack of data for similar games available. Understandably, much of that data is proprietary and nobody would want to share it, but also Frozen Synapse had some significant differences which made it hard to compare to other titles. Also, rankings and community identity werent structured in a way which kept people playing for a long time: good players often drifted away from the game, fearing the loss of the status they had worked hard to build up. This is a really tough issue for any multiplayer game and the solutions are currently unclear. (...) Personally, there were times when I found it difficult to believe that any kind of significant audience would be able to grasp the UI and turn-based mechanics. We were definitely making a game that no publisher would ever touch, and I wondered if, maybe, there was something to that. I completely underestimated both the strength of the design and the intelligence of its audience, two mistakes I dont plan on making again."
587,Mode 7 Games Frozen Synapse,2012,https://www.gamasutra.com/view/feature/134984/postmortem_mode_7_games_frozen_.php,Frozen Synapse,mobile pc,strategy,multi single,production,technical,"We have already pushed an update to that infamous first level; reworking a tutorial is extremely difficult due to the amount of special-case code and testing required, but it is something we are currently considering, especially for the iPad version. (...) We had struggled with various auto-updating systems on Determinance, so Ian took the decision to completely avoid that in the early stages of FS. While making users re-download the entire game to test fixes was actually occasionally beneficial (eliminating annoying problems caused specifically by bad updates, for example), this thinking pervaded late into development and even past release. Although avoiding this definitely helped us create the game, it caused a lot of inconvenience for our customers and has made it really difficult to deploy fixes quickly. That difficulty has made us avoid making small tweaks to the game, rather choosing to wrap up everything into extremely infrequent patches which have upset some sections of the community. (...) Despite much discussion on the topic, we significantly underestimated the number of concurrent users that Frozen Synapse would have at launch, and so didnt have a reasonable server solution in place to cope with them. This was largely down to the fact thatFrozen Synapse is an asynchronous game! However, instead of logging on and playing the occasional turn, many new players were so keen on the game that they wanted to sit online for long periods and play multiple concurrent games. Although we had seen this behavior before, we werent expecting it to dominate so extensively."
588,Mode 7 Games Frozen Synapse,2012,https://www.gamasutra.com/view/feature/134984/postmortem_mode_7_games_frozen_.php,Frozen Synapse,mobile pc,strategy,multi single,production,testing,"Although we did do a lot of user testing, it wasnt targeted well enough to catch this problem at an early phase. We should have used a larger group of entirely new players to test the first part of the single player, rather than mostly members of our community who were already somewhat familiar with the game."
589,Mode 7 Games Frozen Synapse,2012,https://www.gamasutra.com/view/feature/134984/postmortem_mode_7_games_frozen_.php,Frozen Synapse,mobile pc,strategy,multi single,management-feature,planning,"Single player design was attempted too early, and went down some very significant dead-ends before the decision was taken to completely postpone it until after the multiplayer was done. We kept circling around over-complex ideas, such as a randomly-generated ""loss track"", base building, and other meta-game considerations when all we actually needed to do was make a fun AI and then create a linear series of levels around it. The long design phase also resulted in periods which werent productive for the rest of the team: this problem has now largely resolved due to the fact that were attempting multiple projects; however on Frozen Synapse it occasionally burned money. Trying to come up with the exact structure of each match also proved problematic. One-turn ""Endplays"" were the focus for a significant amount of time and, although these led to some significant improvements in the game, ended up being blown out of proportion. Despite the fact that these issues caused some difficulty, and were working hard on tightening up our processes for the next game, they were integral to Frozen Synapse. It was important to have thespace to go wrong in this way -- allowing mistakes can be crucial to designing a game."
590,State of Plays Lume,2012,https://www.gamasutra.com/view/feature/181503/postmortem_state_of_plays_lume.php,Lume,pc,adventure puzzle,single,production,design," As I have mentioned, our process involved prototyping before we went ahead and built the final game; this applied to all the stand-alone puzzles also. But in one case, we werent as rigorous as we should have been when we transferred the game from wireframe to real models. Theres a book in the bookshelf that offered clues to a locked puzzle, which seemed to work fine in the wireframe. When everything was simplified and the book was more noticeable, the answer jumped out at us more clearly. When we were building the final set, we added all sorts of details and made the book fit with the rest of the bookshelf nicely. However, this process made it became less noticeable and the player was subsequently less likely to find it. The extra details that were a natural part of making a real life model of the page (the details around the borders, for example), became something of a distraction and sent players down a different line of thinking. We thought we hadnt changed anything, so we didnt need to worry about it. But it became apparent afterwards that people were being misdirected. In the future, well be making sure something like this doesnt happen and conduct tests at all stages even if we think a change isnt a major one. (...)  We are really happy with how the overall model turned out, and the sense of depth that was created as you move around the house. But I would have liked to extend that same depth to the visuals of the stand-alone puzzles even more. Every puzzle you see was also built out of paper and card. However, I think we could have gotten more for our money with this process. The models we built were reasonably flat, and so the main sense of depth came from the shadow underneath the raised planes of paper. For the next installment, were going to make them pop a lot more and really make you feel like its a physical object in front of you. The whole idea is that this should be as tactile as possible."
591,State of Plays Lume,2012,https://www.gamasutra.com/view/feature/181503/postmortem_state_of_plays_lume.php,Lume,pc,adventure puzzle,single,production,technical," To preface, this was something we got both wrong and right. When I was creating the game for the Mac and PC in Flash, I didnt consider the mobile development at a later date, which I really should have done. Consequently, I didnt consider things like RAM use or optimization. Since all of my testing was done on desktops that could handle the game easily, these issues werent even on my radar. When porting to low-spec devices, its not great to dump a lot of video into RAM all at once, so we had to reassess at times how the game was built. Now that were working on the sequel, weve got the chance to make amends for my mistakes there, and were building with the future of the game in mind. (...)  In developing this game, it was priority for us to be ambitious with our method. By its very nature, that meant that we couldnt plan for every outcome because we didnt know how it would pan out. A few examples of this happened when we filmed the model. For example, I wanted the player to move smoothly inside the house, with the front of the building fading away to reveal the interior. As such, I made the front of the house detachable. In my head, it all made sense. While Tom was filming, we could swoop in and remove the front of the house and then he could zoom inside. We would then edit out the frames where we appear. But when filming by hand with a wobbly model made of card, it suddenly -- and somewhat unsurprisingly -- became a tricky prospect."
592,State of Plays Lume,2012,https://www.gamasutra.com/view/feature/181503/postmortem_state_of_plays_lume.php,Lume,pc,adventure puzzle,single,business,marketing," When we started this process, we werent sure exactly where it would lead us. As the project grew, our priority shifted towards making this the best game we could. This meant that it wasnt until the game was nearly complete that we properly considered how we would market the game. To a certain extent, we really couldnt plan, as we didnt know what distribution networks we would have to work with. For example, we wanted to get the game onto Steam, as we knew what a great platform it would be. But without the completed game, all we could have supplied was an abstract concept. This was not ideal, as we believed the game really needed to be seen in the best possible light. We didnt feel like a tech demo would cut it in this case. As such, we held off and sent it only when it was 99 percent complete. I still dont know which was the riskier strategy: doing as we had done, or sending the concept off early. In any case, it seems like we made the right choice. Steam picked up the game and has subsequently become a big part of the success of Lume. It was only at this time that we were really able to start planning how we would get the word out and what other platforms and distribution networks we could bring the game out on. But in retrospect, we could have helped ourselves a lot by having this kind of thinking prepared earlier on. Whether or not things went as well as they could in this regard,Lume sold very well and was profitable enough for us to begin work on the much larger sequel, which were now deep into developing. Its been the ideal result for us."
593,Avalanche Studios Renegade Ops,2012,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renegade Ops,console pc,action,multi single,production,design,"If we look at player behaviors for Renegade Ops today, the three and four player online modes have been played to such a little extent that I get a headache just thinking about how low the return has been on that particular investment. (...) They were fun for very short bursts of play, but the game simply got too chaotic with that amount of players. This is not something that applies to all games, but it certainly was the case with Renegade Ops -- and we failed to pick up on it as we sat there groaning to each other, ""Oh, no! We have to test this in four-player mode, too? Snore!"""
594,Avalanche Studios Renegade Ops,2012,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renegade Ops,console pc,action,multi single,management-people,delays,"In the end, the project was delayed by two months. This had several negative effects, the most important one being that we missed a very important promotional event (by just two or three weeks!) that would have given us major backing in the form of marketing and general exposure."
595,Avalanche Studios Renegade Ops,2012,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renegade Ops,console pc,action,multi single,management-people,crunch-time,"Our ambitions for Renegade Ops were too high. We set out to make a game that felt like an triple-A budget game with a tiny team and a tiny budget in comparison, so the odds were against us from the start. However, compared to other XBLA/PSN titles, the budget was quite large. In spite of this, we poured in an unacceptable amount of overtime on our own accord to pull it all together -- something Avalanche Studios upper management frowned upon, since one of the companys primary goals is to avoid overtime at all costs. If we had been willing to compromise on the triple-A quality values to some degree, we would have had a bigger margin for error throughout the entire project."
596,Avalanche Studios Renegade Ops,2012,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renegade Ops,console pc,action,multi single,management-people,communication,"Basically, every time anyone says ""lets make a triple-A game"", every person in the room most likely has their own idea of what that means. This became a problem for Renegade Ops, as Sega, Avalanche management, and the development team all had different views on what triple-A stood for. This created divergent expectations and priorities between us, which made it difficult to compromise, since everyone had different opinions on what was most important."
597,Avalanche Studios Renegade Ops,2012,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renegade Ops,console pc,action,multi single,management-feature,scope,"Second, the next time we feel like a project is stuck playing catch-up with itself, without any signs of pit stops for reflections and perspective -- then its time to pull the emergency brake and take a look at whats really going on. Perhaps there is a problem with the processes, or maybe it is time to get the axe out for some serious re-scoping."
598,Avalanche Studios Renegade Ops,2012,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renegade Ops,console pc,action,multi single,management-feature,planning,"These are areas of the game that we really did not have time to implement to the same level as the games core features. If we had dropped one or two of them at an earlier stage, it would have saved us a tremendous amount of time, and the remaining features would have had a chance to reach a much higher level of quality. (...) The initial plan we committed to gave us a total of 16 months with one month for the alpha, beta, and release phases, respectively. Our intuition warned us that this would not be enough, but we went ahead with the notion that we could shift things around once we got to the main production phase. Once we did -- seven months later -- we were very happy and proud with the quality and level of completion of our vertical slice, but the plan still had very little room to shift things around."
599,Stardock Entertainment and Ironclad Games Sins of a Solar Empire: Rebellion,2012,https://www.gamasutra.com/view/feature/179030/postmortem_stardock_entertainment_.php,Sins of a Solar Empire: Rebellion,pc,strategy,multi single,production,documentation,"When we finally did hire and free up art staff to come onto the project, much of the first month was spent re-learning that pipeline. Thorough documentation (or not losing the team member to begin with) could have saved time early on as well as making technical hiccups in the art pipeline easier to resolve later in development."
600,Stardock Entertainment and Ironclad Games Sins of a Solar Empire: Rebellion,2012,https://www.gamasutra.com/view/feature/179030/postmortem_stardock_entertainment_.php,Sins of a Solar Empire: Rebellion,pc,strategy,multi single,production,technical,"One of our goals was to keep Sins: Rebellion as visually stunning as its predecessor was when it first released. A major hurdle was the implementation of real-time shadows, with the sheer number of units being drawn over a wide variety of scales. A completely new method was required."
601,Stardock Entertainment and Ironclad Games Sins of a Solar Empire: Rebellion,2012,https://www.gamasutra.com/view/feature/179030/postmortem_stardock_entertainment_.php,Sins of a Solar Empire: Rebellion,pc,strategy,multi single,production,testing,"Large universes played with four players or more made for some epic multiplayer matches. They also made for some epically long multiplayer matches -- so much so that playing one would keep one third of our dev team tied up for a full day. As you might expect, this time commitment resulted in those games being played less frequently than other modes during development."
602,Stardock Entertainment and Ironclad Games Sins of a Solar Empire: Rebellion,2012,https://www.gamasutra.com/view/feature/179030/postmortem_stardock_entertainment_.php,Sins of a Solar Empire: Rebellion,pc,strategy,multi single,production,bugs,"Throughout the early phases of the beta, wed gotten intermittent reports of players getting desynchronized during multiplayer matches, forcing them to restart. Partway through a match, they would discover inconsistencies between the state of the game on different players machines. A planet might be owned by a Player A on one machine, but owned by Player B on another. A battle could be raging in one corner of the galaxy between two players, while the third player would see nothing. Worse, unless players were constantly communicating with each other as to the state of the game, the desynchronization would often go noticed for 30 minutes or more. However, these reports were uncommon, consistent with what had rarely been reported in previous releases of the game, and couldnt be reproduced with stable network conditions. Or so we thought. With the potential time suck of a wild goose chase, and the uncertainty of whether wed actually fix what we thought was a rare issue, the siren song of ""Its always been like that"" was too strong for us to resist. In reality, we had introduced a number of new desync bugs that had a reproduction rate of nearly 100 percent if you were playing the right type of match. It turns out this was a match type a lot of people happen to enjoy."
603,Stardock Entertainment and Ironclad Games Sins of a Solar Empire: Rebellion,2012,https://www.gamasutra.com/view/feature/179030/postmortem_stardock_entertainment_.php,Sins of a Solar Empire: Rebellion,pc,strategy,multi single,management-people,communication,"Any project coordination work between two separate studios will have related challenges at some point. Luckily, our relationship with Ironclad has been, and continues to be, fantastic on both a personal and professional level (we love you guys <3). However, the ease of this relationship allowed us to be lax in our communication. Coordinating approval of game mechanic designs, UI visuals, and other art assets by email was a slow process. These ""done pending approval"" elements of the game multiplied the uncertainty that goes with most production estimates. For example, instead of knowing our UI artist would be free to move onto another studio project with approximately a two-week margin of error, we always had to add the caveat of ""if we dont have any surprises in the feedback"". Something as simple as a scheduled weekly call could have eliminated the occasional blocking issue and identified problem areas in development more quickly. The lesson for us was, treat external team members like internal ones and schedule regular meetings, even if they are just a brief touchpoint, to make sure everyone is on track."
604,Stardock Entertainment and Ironclad Games Sins of a Solar Empire: Rebellion,2012,https://www.gamasutra.com/view/feature/179030/postmortem_stardock_entertainment_.php,Sins of a Solar Empire: Rebellion,pc,strategy,multi single,management-people,team,"Despite what we generally considered a smooth and successful development cycle, we werent without our fair share of setbacks. For the first six months of production, one person was juggling design, project management, and a number of significant project-external responsibilities. They were -- obviously -- overtasked. It led to a lack of communication on scheduling between studio management and the development team. Initial estimates for the number of artists required were too low, and the project was starting to fall months behind schedule. (...) Further complicating early development, a key employee we planned to assign to the Sins: Rebellion art team left the company. This individual had been the go-to artist for working with the Iron Engine for the previous expansion pack, and had valuable experience working with the more technical aspects of that toolsets art pipeline. When they left, we had not yet staffed the art team, and there was no obvious person to transfer that knowledge to. Additionally, they were still assigned to another project within the studio, which took priority over documenting their pipeline knowledge in the weeks before departure. (...) One of our engineers was tasked with implementation of this major graphics feature, despite being unfamiliar with Iron Engines graphics tech. This led to burning over three months of an engineers time because this misallocation of a task wasnt identified and reassigned to Ironclads team earlier. Setting a clear milestone to evaluate the progress of major or risky features would have found and fixed this issue early on."
605,CyberConnect 2s Solatorobo Red the Hunter,2012,https://www.gamasutra.com/view/feature/135064/postmortem_cyberconnect_2s_.php,Solatorobo Red the Hunter,console,action rpg,multi single,production,design," I, personally, originally started off in the game industry as an illustrator, and often gave direction on gameplay, game designs, stages, and other visually related elements by drawing a picture or giving specific details on how something should look in the game. With these solid viewpoints we were able to create a game with consistency throughout (I also created the concept art for the characters and mech designs). On the other hand, when there was an issue, the staff needed to ask for my input. This was a problem, especially during the middle part of the development phase, where I was bombarded with questions and inquiries, which made it difficult to give instructions at a timely rate. (...)  At first the game was centered around a mech that punched its enemies as its main attack. It was based on a concept of making the game easy to understand, as well as giving players the satisfaction of an action game. However, the game became too simplistic, and wasnt unique at all. After discussing the problem on multiple occasions, we decided to re-build the combat system around the grab, pick-up and throw elements which were already in the game. However, this new battle system did not quite have the excitement we were looking for at first. After lots of adjusting and fine-tuning, the action, effects, and controls finally got to where they are now. (...)  For this title, we tackled the setting first, then created the story, and then began the game development itself. However, when the prototype was done, our team had some concerns about the game. The storyline was very dramatic and well-told, but it felt as if it was aimed more towards a mature audience, and lacked action elements and exciting situations that younger age groups would enjoy. After discussing this through, the team decided to add more surprises, laughter, and emotional aspects to the game, and came up with a lot of new ideas to implement into various scenarios and levels. Thinking back, we should of have considered the gameplay aspect earlier in the project while creating the settings and scenarios, so that the two would fuse more smoothly. Also, this being our first Nintendo DS title, we werent fully sure how much the hardware could perform, which was another reason the original plan had to be modified."
606,CyberConnect 2s Solatorobo Red the Hunter,2012,https://www.gamasutra.com/view/feature/135064/postmortem_cyberconnect_2s_.php,Solatorobo Red the Hunter,console,action rpg,multi single,production,technical," Since the Nintendo DS is not a platform with high processing power for 3D graphics, whether we created a building with polygons or used 2D artwork, the end result was not impressive due to a lack of detail. After much trial and error, the in-game graphics artist found that mapping an illustration on a 3D model worked best and was something we could pull off well. However, we did not discover this technique until halfway through the production process and had to recreate all of the cutscenes we had created up to that point."
607,Zachtronics Industries SpaceChem,2012,https://www.gamasutra.com/view/feature/172250/postmortem_zachtronics_.php,SpaceChem,mobile pc,puzzle,single,production,design,"The second incorrect assumption we made was thinking that puzzle games need to be difficult and long to be good. Although challenge is essential to making puzzle games ""work"", the difficulty that emerges from the mechanics of SpaceChem can be bewildering, even if its what makes the puzzles feel so open-ended. Combining this intrinsic difficulty with an abundance of puzzles that must be beaten to ""complete"" the game gives SpaceChem an oppressive 40+ hour difficulty curve that only 2 percent of players reach the end of. (...) The biggest difference between SpaceChem and my previous games is that it was a commercial endeavor. The second biggest difference was the amount of content -- 50 puzzles, plus a full story, instead of the five to 15 story-free puzzles I would usually aim for. Although some of the earlier puzzles in the game can be solved in minutes, many of the puzzles take hours. Some, such as the games final boss battle, routinely take players days to solve -- if they even get that far. Theres nothing wrong with having difficult puzzles in a puzzle game; the capabilities, interest, and patience of your players will always span a huge range, so difficult puzzles can keep the best players challenged and give everyone else something to aspire to. However, when progression through a story is blocked by progression through the gameplay, making the game too difficult denies all but your best players completion of the story and the satisfaction and enjoyment that goes with it. By the time we realized this, it was too late. Since our story and our puzzles were tightly coupled, separating them so that the story ended earlier would have required reworking the entire campaign. (...) The responses of players who played through the tutorials ranged from immediate understanding to complete incomprehension (something that I think is actually quite uncommon for modern games, given the combination of better design practices and better ""game literacy"" among players). Some of the reasons I suspect for this are: We failed to clearly show the objective of a puzzle. The primary goal of a SpaceChem puzzle is to take ""inputs"" and convert them into the specified required ""outputs"". For anyone in the software industry this is an obvious endeavor, but for the general population its not a given, especially in the context of fake chemistry. Although the first puzzle (a ""walkthrough"") clearly demonstrated inputs and outputs, most players follow the instructions without recognizing the purpose of what theyre doing. We partially resolved this by including a video tutorial that focuses on the high-level goal of SpaceChem -- transforming inputs to outputs -- giving the player some context when they reach the first walkthrough. We failed to make the game start simply enough. To build a level in SpaceChem, its necessary to build an entire ""loop"" with the minimum following components: input, grab, arrows, drop, and output. Considering most players barely understood their goal, forcing a minimum of five different tasks on them from the beginning is overwhelming. This problem could have been fixed by changing the design space to have a smaller ""minimum possible solution"", although it wasnt much of an option post-release. We exposed too many details too quickly. SpaceChem is filled with lots of details and rules, such as what can be moved, what can be predicted, and what is required to solve a puzzle. Although the interaction of these rules makes SpaceChem open-ended and emergent, it also makes it confusing, especially when players misinterpret what they see. (...) We used too much text to explain things. There were many situations where we were forced to use text to explain rules and nuances of the game. In retrospect, this is a clear sign that we needed to change the game, not explain it more forcefully. (...) In our first private beta playtest, our metrics capturing system failed to capture any data, an event that in hindsight describes much of our statistics-gathering strategy for SpaceChem. Preoccupied with fixing post-launch bugs, it took us weeks to realize that our demo couldnt upload metrics data. Later we discovered that, because we only uploaded metrics at the start of the game, we never captured any information from single-launch customers, which likely included many players who got stuck in a tutorial and then never bothered to try the game again. By the time we got things straightened out, we only managed to learn the magnitude of obvious things, such as the fact that SpaceChem is stupidly difficult."
608,Zachtronics Industries SpaceChem,2012,https://www.gamasutra.com/view/feature/172250/postmortem_zachtronics_.php,SpaceChem,mobile pc,puzzle,single,business,marketing,"The first incorrect assumption we made was thinking that everyone likes science. Although the internet may love ""Science!"" thanks to games like Portal, games that look like actual chemistry remind most people of chemistry class. The number of times Ive read and heard the words ""but Im not good at chemistry"" in connection withSpaceChem is staggering. A particular game design colleague has asserted many times that had we called the game ""SpaceGems"" and made it about alchemy, we would have sold twice as many copies. Although I like building games around real-life knowledge, Im not sure if I disagree with his assessment. (...) There arent many games like SpaceChem, which makes it spectacularly hard to explain, especially to people who are only familiar with more ""mainstream"" titles. To make matters worse, the surface appearance of the game -- fake chemistry, often mistaken for real chemistry -- completely belies the games addictive Portal-like problem solving. To complicate things further, our presentation of fake chemistry lacks the appeal (i.e. sexy scientists) to draw curious viewers in! The end result is a game that is nearly impossible to discover, try, and buy."
609,Appy Entertainments SpellCraft School of Magic,2012,https://www.gamasutra.com/view/feature/135047/postmortem_appy_entertainments_.php,SpellCraft School of Magic,pc,rpg,single,production,design," We had the right idea -- encourage players to engage withSpellCraft every day, to get them hooked on the game -- but we made the requirements of our Daily Gold Reward too stringent, and wound up with a pack of unhappy players writing in to complain about not getting their gold. Our original system required that players open SpellCraft and perform 10 game actions, such as fighting monsters or brewing spells, meaning it excluded players who just entered the game long enough to harvest a plant or two. Players were also confused by our clock, not understanding that they needed to perform their required actions within a specific twenty-four hour block of time -- a distinction lost on a player who opens SpellCraft at 2:00 PM on Tuesday, and returns to it at 1:00 PM on Wednesday, and really has every right to expect that hes fulfilled the requirement of daily play. Bottom line: if you are going to give something away... just give it away. Furthermore, dont be concerned if players try to game the system. These are retention tools, not a final exam. Weve since patched the system to give an increasing bit of gold each day for 10 days basically for just entering the game, but we are still receiving complaints that the reward isnt arriving, or that it should extend beyond 10 days. Weve learned that if you promise players a gift, you must not merely deliver -- you have to over-deliver. Even then, expect a few squeaky wheels. Dont make your job harder with Byzantine redemption requirements!"
610,Appy Entertainments SpellCraft School of Magic,2012,https://www.gamasutra.com/view/feature/135047/postmortem_appy_entertainments_.php,SpellCraft School of Magic,pc,rpg,single,production,bugs," We developed the game for five months, tested internally for six weeks, and tested in a live market for a full ten days, but still ended up shipping our game with a nasty bug that erased player progress and purchases if the game crashed during startup. We just missed it. Actually, we had two reports of this bug during our soft launch, but I dismissed them as user error because they came from kids (one of which was my own scatter-brained son!) Regardless, no sooner had we shipped the game and the team had crawled off to their caves to recover, reports started flooding in of our reset bug. We launched wide on Thursday, fixed the bug on Saturday, and (thanks to an Apple expedited review) had our update live by Tuesday, but we still disappointed thousands of players, resulting in an avalanche of customer support mail (the answering of which became a full-time job, inhibiting our ability to promote the game at launch). We reacted as fast as we could, made things right with the people who wrote us, added a 24/7 live bar message informing players of the bug and how to update before purchasing, and answered each and every email, giving replacement gems to all of our affected customers that contacted us. Luckily for us, our players were understanding and didnt let our bug interfere with their affection for the game, giving SpellCraft an average user rating of 4.5 out of 5 stars since launch."
611,Appy Entertainments SpellCraft School of Magic,2012,https://www.gamasutra.com/view/feature/135047/postmortem_appy_entertainments_.php,SpellCraft School of Magic,pc,rpg,single,management-people,delays," Actually, in the scheme of things,SpellCraft was on time -- we were only two or three weeks late by our own reckoning, and while weeks = months in iOS development, for a project with so many moving parts we pretty much shot directly through the hoop of fire. The problem was that, owing to the vagaries of App Store approval times and shutdowns, this pushed our release date back from November 17th to December 8th, which both put us square in the Christmas crunch, and also may have cost us an opportunity for an Apple feature at launch (they were engaged with us in the run-up to the 17th, but after that I think they had other priorities). Launching as late as we did meant that our guys were also eager to head off for the holidays immediately after we went live."
612,Appy Entertainments SpellCraft School of Magic,2012,https://www.gamasutra.com/view/feature/135047/postmortem_appy_entertainments_.php,SpellCraft School of Magic,pc,rpg,single,management-feature,scope," Pet meat is stringy if you dont cook it right, and the same could be said of ourSpellCraft pets. We knew we wanted pets in the game; we knew what they should do; we spent a lot of money designing and animating the pets; but we didnt bring it all together in the form of a fullycooked feature for the games release. The pieces are all there -- you find pets in the dungeon, feed them and play with them, and they increase your characters defenses -- but theres really no way to understand this from the way pets are presented in the game. Were fixing this in an update, but considering the time and effort required to even under-deliver on pets, we would have been better off introducing those features later and applying that effort to a more polished 1.0 version of the game (and the same could be said of our multiplayer dueling feature). Weve made iOS games for three years, but we do still sometimes misjudge the scope of our projects, and pets definitely fell into this category. At the same time, our players have responded to pets with affection well out of proportion to our implementation of the feature -- pets are fun, and polished, theyre just not as fully-featured as we would like, and players are confused about how to use them. We are definitely on to something here, and we wouldnt have such a firm idea of where we need to take the game if he hadnt included pets -- in however imperfect a form -- in our first release."
613,Appy Entertainments SpellCraft School of Magic,2012,https://www.gamasutra.com/view/feature/135047/postmortem_appy_entertainments_.php,SpellCraft School of Magic,pc,rpg,single,business,monetization," Our experience with creating virtual currency and setting prices was limited when we launchedSpellCraft. Our conversions of FaceFighter and Trucks & Skulls to free-to-play monetization let us develop our store code ahead of time, which was an immense help, but we were still flying pretty blind when it came to actually constructing an in-game economy. SpellCraft has a two-tier currency system, with a low-value currency (gold) earned through gameplay, and high-value gems acquired primarily through in-app purchase. Our initial store had a means of converting gems into gold, but no way to purchase gold directly, which frustrated our players and limited monetization. We also made a mistake in hard-coding the quantities of each purchase package into our game, meaning that we couldnt adjust prices onthe-fly with a wireless patch, but instead could adjust our store only by resubmitting our game through Apple. Weve since corrected both these problems, but launching this way limited our options by needlessly delaying our ability to act on the data we received about player behavior."
614,McMillen and Himsls The Binding of Isaac,2012,https://www.gamasutra.com/view/feature/182380/postmortem_mcmillen_and_himsls_.php,The Binding of Isaac,pc,roguelike,single,production,tools,"The biggest downfall of The Binding of Isaac is its performance. Isaac was designed in Flash using ActionScript 2; thats what Florian could program in, so those were the limitations we had to work around. Sadly, Flash AS2 is quite outdated, and even with all the amazing work Florian put in, we simply couldnt get the game to run well on lower-end PCs. Flash even had major issues with PCs that used dual-core processors, so even PCs with amazing specs would slow down at times. If I had known that anyone would have cared about Isaac, I wouldnt have made it in Flash at all. Framerate issues aside, Flashs lack of controller support and integrated Steam features really hurt Isaac. It pained me to release a game that was lacking features almost all games have. Youd think by now Flash would have added some kind of controller support, but no. Tommy actually wrote an achievement program specifically for Isaac so it could award Steam achievements, which was hugely helpful, but I couldnt ever really feel satisfied with the product due to our AS2 limitations. (...) Aside from the performance issues and AS2s limitations, late in Isaacs development we soon realized that Flash simply wasnt at all made to support a game of Isaacs size. Once the .FLA file rose above 300MB, we couldnt even consistently generate an .SWF file from it without crashing. This issue almost prevented Wrath of the Lamb from coming out at all; we were at a point in development where simply saving the .FLA would corrupt it about 25 percent of the time. Florian would have to restart his PC and save the .FLA in a new folder every time we had to export an .SWF just to test it, and 50 percent of the time it wouldnt work for no apparent reason. It was quite a horrible experience, and if we could have seen into the future with a crystal ball, we would have simply not used Flash. (Maybe this will be a feature in Flash CS7...)"
615,McMillen and Himsls The Binding of Isaac,2012,https://www.gamasutra.com/view/feature/182380/postmortem_mcmillen_and_himsls_.php,The Binding of Isaac,pc,roguelike,single,production,testing,"The reason we released Isaac when we did was because it was done (if untested), and I didnt want to waste any more of my time on something I expected would crash and burn. I was just so worried it would suck that I wanted to get it out and over with. At launch, The Binding of Isaac had 100 items and five playable characters. 70 percent of the items in Isaac stack, and all the item abilities will affect Isaac in some way, so there were so many variables to keep track of that all the testing in the world couldnt have prepared us for launch. Everything about the game was based on complex variables that multiply with each level you pass. In order to fully test all the variables we had in place, it would have taken hundreds of testers several days of extensive play time to fully debug this little monster -- there were bugs that actually took 100,000+ people four weeks to find due to how buried and rare some of them were. Also, launching on PC meant launching on 10,000 different PC configurations, so we had bugs that would be caused by antivirus software, clean-up tools, and even some types of keyboard configurations. The sad fact was that it was the day-one buyers that ended up fully testingIsaac for us, and I felt really shitty about that. A few weeks after launch I put together a free mini-expansion to make up for our shaky launch -- but that, too, was filled with bugs."
616,McMillen and Himsls The Binding of Isaac,2012,https://www.gamasutra.com/view/feature/182380/postmortem_mcmillen_and_himsls_.php,The Binding of Isaac,pc,roguelike,single,production,bugs,"The Binding of Isaac was updated every day for two weeks during launch, and each time we thought we had solved all the issues. (Each time we were wrong.) Luckily, we were able to remove all game-breaking bugs in the first two days, but there were still many smaller bugs left that gnawed at us for a long time. It sucked to launch with so many issues -- we had save bugs, game-breaking bugs that wouldnt let you complete the game, bugs that would not reward unlocks and achievements, and even some really odd ones that would scramble item clips and cycle through art from the game constantly. It wasnt pretty, and it was even more painful to watch so many upset players posting in the forums about the many issues with the game. (The biggest question, of course, was ""Why didnt you test the game?"")"
617,McMillen and Himsls The Binding of Isaac,2012,https://www.gamasutra.com/view/feature/182380/postmortem_mcmillen_and_himsls_.php,The Binding of Isaac,pc,roguelike,single,business,marketing,"Not surprisingly, controversy made a few appearances inIsaacs release year, but not in the way you might think. DuringIsaacs German retail launch, the German ratings board gave Isaac a 16+ due to ""blasphemy."" That itself didnt cause controversy -- instead, it was the idea that said blasphemy could affect the age rating on a video game. Blasphemy isnt something you can define for everyone (whats blasphemous for one religion isnt necessarily so for another), so how could one define something as containing blasphemy? It was a very interesting argument, and Id be lying if I said that having the first game rated 16+ due to blasphemy didnt feel awesome, but sadly it was this controversy that I believe eventually led to Nintendos decision not to port Isaac to the 3DS."
618,Sony Bend Studios Uncharted: Golden Abyss,2012,https://www.gamasutra.com/view/feature/181082/postmortem_sony_bend_studios_.php,Uncharted: Golden Abyss,mobile,action,single,production,design,"Having a locked script that defined characters, locations, cinematics and set pieces was great for development... once we got there. The challenge was getting there. For better or worse, Ive always been Bend Studios primary writer (often in collaboration with other writers). Having written the scripts for all sevenSyphon Filter games and for Resistance: Retribution, I thought I knew a thing or two about story and writing for video games. So when I played the first Uncharted I thought, rather naively, that it was going to be easy. It wasnt. To start, the franchise formula is challenging. You have to find a compelling historical mystery with ""gaps"" that can be filled creatively; the history needs to be real and researched; you need a MacGuffin that is valuable, that people may have heard of, and that is potentially cursed; settings and plots need to be realistic, fantastic elements need to be reasonable in an X-Files sort of way; the tone should be mostly light in a summer blockbuster style; settings have to be traversable, exotic, romantic, and, well, uncharted in some way; there needs to be an army of bad guys to kill; the story has to lend itself to puzzles, twists, turns, surprises; bad guys have to be interesting, powerful, but not clichéd... and you have to do all this without repeating what has already been done in Uncharted 1, 2, and 3 (not to mention avoiding overused tropes from genre film franchises). I severely underestimated the amount of work this was going to be. (...) During the Conquistador gravesite sequence, the player has to perform five touch puzzles in a row, including the examination of this 500- year-old skull. The locked script and tight integration of story and gameplay made fixing pacing issues like this problematic. Story-wise, there was no other place to put them, because this is where and when the actions took place. Gameplay-wise, the pacing suffered, but it would have been impractical and expensive to change. Like most sequences, narrative and gameplay were tightly interwoven and since the script was written, performances recorded, production well under way, we were stuck. This is a good example of where it would have been far better to have had a solid gameplay plan completed before the script was written. (...) Critical reaction to the Uncharted: Golden Abyss story was mixed. Some of this was because Im no Amy Hennig, who brings a very distinctive and natural style to her writing. But also, I think, players really wanted to see more of the characters they had grown to love: Elena, Chloe, and Sully. A new cast of characters, whether they were compellingly written or not -- and I let players be the judge of that -- was never going to compete with established characters from the console games. There was strong resistance to Chase in particular because she wasnt Elena. Since this was a prequel, and players knew Drake didnt end up with Chase (shes never seen in the console games, after all), then what, some players wondered, was the point of spending time with her? (...) While story and mission design were huge challenges and took months of iteration, designing controls for the many new inputs of the PS Vita hardware proved equally so. (...) One of our greatest design challenges was to fuse the PS Vitas special inputs (front and rear touch screens, accelerometer, cameras, gyro, and compass) with conventional controls (buttons and joysticks) while simultaneously remaining true to the Uncharted franchise, and while delivering on gamer expectations of the hardware. (...) Ranged combat benefited from subtle but integral gyro aiming that helps players fine-tune headshots. But some players and critics thought we went too far with the PS Vita controls, like when we added touch to the melee and boss fight mechanics. Our final analysis is that their strong negative reaction wasnt because of the mechanics themselves (in fact, anecdotal evidence shows that lots of gamers liked these features), but because we didnt give them a choice. (...) The inclusion of a player-controlled canoe sequence required us to design something without any existing standard to draw lessons from or to compare our results against. A kayaking mini-game was found in Wii Sports Resort, but that game focused on large body movements simulating paddling, so we couldnt draw any meaningful lessons from that. We were on our own in deciding what the first action adventure canoeing experience would be. (...) The full canoe simulation was a lot of fun, but was cut from the shipped game because it would have required too much player instruction and practice: by the time they learned how to operate the canoe effectively, the mission would have been over. This was disappointing from a design point of view, but was determined to be the right thing to do after we watched a small sample of users attempt to paddle up stream. In the simulation, the canoe was steered by players alternately swiping up and down on the sides of the screen. To some, swiping on the left side of the screen meant to turn the boat to the right (which was the intended effect), other players assumed that swiping left meant steering left, and no amount of training could reverse this instinct. We could have included an option to invert the controls, but there turned out to be an even greater problem that was too big to solve: the touchscreen swipe rate. Some players would gently alternate swipes on each side, resulting in straight navigation at optimum speed. These were our target gamers, the ones who could effectively control, and therefore appreciate, the simulation. Other gamers would spam short swipes on one side of the screen before realizing they were turning undesirably and they would frantically switch sides to try counter steering, often times running aground and then having to reverse their way back into the water. "
619,Sony Bend Studios Uncharted: Golden Abyss,2012,https://www.gamasutra.com/view/feature/181082/postmortem_sony_bend_studios_.php,Uncharted: Golden Abyss,mobile,action,single,production,documentation,"Something we continually struggled with during development was how to document features and how to keep team members up to date on changes. It was not a new problem, and one wed been trying to solve for a few projects. For years we had used the ""Master Design Document,"" a massive Word document that became the games development bible, often running to hundreds of pages with cross-linked documents (when Word still had that functionality.) We moved away from the bible for the same reasons that many teams have: no one ever read the thing, and it was hard to keep up-to-date. For the last two projects, weve moved more towards wiki and email, with mixed success. (...) For one thing, wiki pages are hard to edit -- wiki markup may be useful for a lot of things, but writing creative design docs isnt one of them. Late in the project we got the ability to edit pages using Word, but it was still hard to make sure formatting was correct, and at the time, adding illustrations wasnt easy, nor could you link documents via Perforce to ensure that everything was current. And though wiki pages were easier to access than Word docs (which had to be updated via Perforce), there was still no way to force team members to actually read them. Equally troubling, though wiki pages were less dense than Word docs, they still tended to get out of date at an alarming rate. By the end of development, the Uncharted: Golden Abyss main wiki page had 171 child pages, each of which had dozens of children of their own, which had additional child pages, ad infinitum. Almost all of these pages were out of date well before alpha. Keeping information up-to-date became a full time task that no one had time for."
620,Sony Bend Studios Uncharted: Golden Abyss,2012,https://www.gamasutra.com/view/feature/181082/postmortem_sony_bend_studios_.php,Uncharted: Golden Abyss,mobile,action,single,management-people,crunch-time,"From January to December of 2011, the team worked pretty much nonstop, many of us putting in evenings and weekends for months at a time. Every evening we tried to offer a catered dinner so the team could maximize their time and get home as early as possible. Our office manager tells us that we ordered over 158 overtime meals during that crunch. Theres been at least some crunch on every project Ive ever worked on, but this was harsh by any standard. (...) During the project postmortems, ""Managing a healthy work / quality of life balance"" came up as a top concern for almost everyone in the studio, Chris and myself included. Our families didnt see us a lot in 2011, and we vowed to do everything in our power to keep that from happening again. Some of the steps weve taken include: Negotiating as reasonable a schedule as possible, given our studios burn rate and budgets. Holding weekly meetings with every individual on the team, where issues of scheduling, scope, progress and productivity can be raised directly. Vetting the scope of our next project up front in an attempt to find that balance between the optimal player experience and the time we need to create it."
621,Sony Bend Studios Uncharted: Golden Abyss,2012,https://www.gamasutra.com/view/feature/181082/postmortem_sony_bend_studios_.php,Uncharted: Golden Abyss,mobile,action,single,management-people,communication,"When issues were more complicated, emails often turned into protracted chains that devolved into buck-passing and finger-pointing. Heres an example from 2011: the original email is a list of issues found while playing through the Shanty Upper Village level. The text in red is a team members response, and you can see how the thread got out of hand from there. The obvious problem with email is if a problem requires team interaction, asynchronous communication probably isnt the most effective solution. Its too easy to punt the issue back and forth, or play the ""blame game."""
622,Sony Bend Studios Uncharted: Golden Abyss,2012,https://www.gamasutra.com/view/feature/181082/postmortem_sony_bend_studios_.php,Uncharted: Golden Abyss,mobile,action,single,management-feature,scope,"I mentioned earlier that once we got there, the locked script helped immensely by keeping production moving, and by keeping large changes to a minimum. But the locked script also hurt in an important way: once we discovered that the game was too big, we couldnt cut much more than we already had without leaving the story and pacing in shambles. Important character and plot developments happened in each world, and more importantly, key gameplay sequences. Even through the story we set out to tell in the beginning was too big, trimming it halfway through development would have weakened it, making game-play scenarios feel isolated and meaningless. (...) Bend Studio has always developed third-person action games, whether the emphasis was onSyphon Filter-style stealth action or Resistance: Retribution-style sci-fi action, but we completely underestimated the amount of additional content required by anUncharted game. As we finished prototyping and began actual production, we realized this, and started making big cuts in the design and story. Heres some examples of things we cut before production began. (...) Uncharted: Golden Abyss had 34 next-gen quality levels, each of which had five times the content of any PSP game we had ever made. What were we thinking? We were trying to make something akin to a nextgen quality console game with a core team that was a third the size of a Naughty Dog or Santa Monica Studio. It was insanity. (...) In the end, we needed to cut even more, but thats where the reality of the locked script really hurt us. The only way to have fixed the scope issue, in hindsight, would have been to tell a more modest story to begin with. Maybe there should have only been one antagonist instead of two; maybe the whole Perez backstory was too expensive and unnecessary; maybe we didnt really need such a long trek through the rainforest (thankfully we didnt cut that -- yay Sully!) And maybe a handheld game didnt need two hours of cinematics (twice that of Resistance: Retribution.) Given the chance to do it again, we would have spent much more time up front vetting every aspect of the experience, negotiating a target game length. It was an expensive lesson, given the amount of overtime we had to work to finish the game. (...) Our crunch in Uncharted: Golden Abyss was almost completely attributable to one thing: ambition. As noted above, we didnt do a very good job of managing the scope of the game, which for some players ended up being a 10 to 12 hour experience -- compare this to God of War: Chains of Olympus, one of the highest rated games for the PSP, which clocked in at six or seven hours. (...) But even with all those cuts,Uncharted: Golden Abyss was still a huge game. Partly this was because some levels had to be divided in half in order to work with our streaming engine. In any other franchise this might not have been a big deal: divide a large level and you end up with two smaller levels, right? But with Uncharted, thats not how it worked out. Because our streaming required a cinematic to mask asset loading, each level required a transition cinematic -- at one point we had trimmed over 20 minutes from the script, but by the time we reached gold master, we had added all those minutes back in, and then some. And it turned out that the amount of polish wasnt cut in half, but doubled; it was hard to tell artists, ""look, this level gets only half your time and attention because its not really a full level."" Development just doesnt work that way. Misunderstanding the correlation between level size and asset needs was a mistake we made from the start. Because we were worried about memory and streaming, we had made the decision early on to create more, smaller levels, thinking they would be easier to build, load and polish. But Uncharted is a dense experience in terms of assets per square foot of environment. Even small levels tended to get filled up with AI nodes, VO triggers, traversal edges, unique action moments, special animations, collectible hiding spots... all of which needed art, animation, audio, scripting and sometimes code support. And as the layouts got fleshed out, each experience grew in the telling until we were looking at a massive amount of assets that needed to be polished."
623,Sony Bend Studios Uncharted: Golden Abyss,2012,https://www.gamasutra.com/view/feature/181082/postmortem_sony_bend_studios_.php,Uncharted: Golden Abyss,mobile,action,single,management-feature,cutting-features,"Much has been made of the fact that there are no supernatural enemies at the end of Uncharted: Golden Abyss. Originally, there were going to be. In an early draft of the story, Drake reached the underground city of gold and discovered that all of Guerros men had been killed -- victims of what the local superstitions called ""Chindi"". (...) Reading an early draft of the story, Amy had expressed some misgivings that the Chindi were pretty similar to the Descendants. Later, when I asked if the Uncharted formula required a supernatural ending, she said absolutely not. So the Chindi were cut. Some players missed them and said we werent Uncharted without the supernatural ending; others thought its absence made the game better. We werent making a judgment call either way -- we were merely trying to trim the schedule. (...) We loved the idea of showing how Drake might have screwed Flynn over early in their careers, perhaps explaining Flynns behavior in Uncharted 2: Among Thieves. But we realized that cutting this plot element would allow us to cut an entire worlds worth of characters, mocap, sets, movies, and gameplay. At the time, I hated to see Flynn go, but as it turned out, we didnt cut nearly enough. (...) Drake and Sully were to traverse dangerous cliffs, narrow trails and more rickety bridges as they fought their way up to a Machu Picchu-type city where they would have discovered the entrance to the lost city of gold. (...) This world didnt get cut until just before final production began, so we had concept art, maquettes, layouts, as well as playable gray box levels. But as production began we were still worried about being able to pull off the Naughty Dog-style open spaces, cliffs, and vistas. (...) At the time we were sorry to see the Highlands go because we worried the player wasnt going to get enough Sully time, but that turned out to be a non-issue, mostly because the rainforest world almost doubled in size during production (which was, no pun intended, a much bigger issue). (...) The last major cut came after the script was locked and full production had begun -- but the cut was not the result of our having realized our game had scope issues. It was cut because of a tsunami. Originally the shanty avalanche world took place between Chapter 9 (the last shantytown level) and Chapter 10 (the ""side scrolling"" level where weaponless Drake and Chase run for their lives). In the avalanche levels Drake and Chase would have been trapped in the middle of a massive avalanche that was sweeping the shantytown down the mountainside (the bridge was originally a dam). (...) Then in March of 2011, a disastrous earthquake and tsunami hit Japan and we, along with the rest of the world, spent several days watching images and videos of the awful destruction as entire towns were swept away by torrents of muddy water. In the aftermath of this, we worried that maybe the avalanche world would feel a little on the exploitive side, and that at some point we might be asked to remove it."
624,Overhaul Games Baldurs Gate Enhanced Edition,2013,https://www.gamasutra.com/view/feature/190432/postmortem_overhaul_games_.php,Baldurs Gate Enhanced Edition,console mobile pc,rpg,multi single,production,tools," We went into development on BG: EE with a clear goal to target the OpenGL 2.0 specification (from 2004) for all functionality, to ensure support on all devices. We did some quick testing on PC, on Mac, on iPad, on Android, and passed on all counts. Raspberry Pi, check. Raspberry-freaking-Pi OpenGL 2.0 support, check. We expanded our beta testing group (and quite possibly due to the enthusiast nature of the participants in our beta) we had very few performance issues reported. (In retrospect, it makes perfect sense that gamers would elect for enthusiast video cards and, as such, have solid OpenGL support.) Close to ship we saw our first few reports of slow performance on Intel integrated hardware, specifically in older laptop systems. We did some digging and found many of the laptop vendors had not updated drivers in many years. During this timeline, we shipped the game on PC. We started getting more reports of poor performance and graphic problems. We managed to find a few workarounds --such as force-updating to the latest Intel drivers (despite vendors not certifying them). In the end of our research, we came to a horrible conclusion. Many of the older Intel integrated video cards did not have viable OpenGL 2.0 support. In fact, many did not have viable OpenGL 1.0 support. As a developer, we hit a hard situation. Weve spent our development budget (and then some) and we have a portion of our user base who can not enjoy the game they paid us money to play due to a driver issue. We have a solution in mind and we will be spending further, significant, development resources to re-write the entire rendering system for BG: EE around the missing functionality in the problematic drivers. By talking with the Intel fellows, weve learned where we fall off the good path in their implementation and we have a new plan on how to rebuild the entire system around those issues. This re-write is large in scope and is going to take us some time to accomplish, so we are relying on our fans for patience as we attempt to resolve the issue. In retrospect, the big lesson learned is even if you have a lot of testers, you will not get good coverage of hardware. You might get good coverage of enthusiast hardware, but not all hardware. What we initially thought of as a few odd issues on very old hardware turned out to be much more prevalent than we thought was possible. As well, just because a specification is from 2004, and understood as an industry standard, does not mean there is good driver support. We should have tested wider on hardware earlier. The diversity of the PC platform is a key strength, as it allows many vendors to create components and it creates competition, keeping prices low. This diversity also creates nightmares for developers, as there are always surprises when certain hardware configurations do not meet your assumed performance standard. Ive been doing PC development since 1994 (yes, I am really old) and on every project there has been at least one major PC hardware issue. I look forward to the next PC issues as I would look forward to finding a cobra in my bed. (...)  I have a development joke I often drop: When a programmer believes he/she is being clever is when they create the greatest atrocities. The Infinity Engine is chock full of clever. For example: to render a character to the screen, the correct frame and orientation of a character sprite is first loaded out of a resource file using a very heavy resource-management system. The sprite is then color-mapped using a 256-color palette swap to enable player colors. Following the re-mapping, any number of further palette-manipulation code (stoneskin, anyone?) can step in and further change the actual data. Then the sprite is rendered against whatever potentially covering elements are nearby. The final result is sent to the screen in 64x64 pixel tiles to be rendered. The entire system runs under a dynamic update system that flags 64x64 tiles as updated and renders them or, with no change, leaves the tile from the previous buffer. The volume of clever shifts and tweaks along the way make it nearly impossible to track down all the ways in which a simple sprite can be manipulated. In some cases, the data can reference many different .2da data files on how it can be manipulated, from equipment-changing animation frames to a data redirection to render a dwarf sprite instead of the default human. Complexity is par for the course in an RPG of this magnitude, but the intricate linking of assets and code really limited our ability to make the architectural improvements we wanted to make."
625,Overhaul Games Baldurs Gate Enhanced Edition,2013,https://www.gamasutra.com/view/feature/190432/postmortem_overhaul_games_.php,Baldurs Gate Enhanced Edition,console mobile pc,rpg,multi single,production,technical," Late in development we started testing on the upcoming iOS 6 beta build. Were not 100 percent sure what was changed in the core iOS graphics code, but we took a massive hit in framerate on all iPads. The iPad 1 and iPad 3 became completely unplayable, less than a month from our contractually-amended ship date. We quickly diverted most of our key programming effort to fixing the performance concerns. We fought a war between hurting the visual upscaling quality and improving the framerate. In the end we lost a lot of key developer time to a completely unplanned task. The end result was that a great deal of our bug-fixing time was spent not fixing the bugs we wanted, and the quality of the shipping build suffered. The lesson learned here is to build in some slack in terms of performance for when you need it due to an unplanned change, and to budget some extra time for periodic performance testing on current and beta OS releases."
626,Overhaul Games Baldurs Gate Enhanced Edition,2013,https://www.gamasutra.com/view/feature/190432/postmortem_overhaul_games_.php,Baldurs Gate Enhanced Edition,console mobile pc,rpg,multi single,production,bugs," We had drafted the original deal in the context of aBaldurs Gate: HD. Our plan was simple: grab the original artwork, clean it up, re-render it at higher resolutions and with better materials, thus creating stunning versions of the areas everyone remembers. We planned to take the character models and re-render them with many more frames of animation and add new orientations to the movement to make the game smoother. We nailed down the core terms, got everyone on the same page and we got our first drop of the assets from BioWare. A few days later we noticed a large hole where the source art should be -- stuff like 3DS Max files and texture images. No problem, I said; I contacted Derek French over at BioWare and he dug further and sent us more data. We again dug through and failed to find the source art. I made arrangements to visit BioWare with a removable drive and work with Derek and the IS department to find the assets. After two days of searching we came to the horrible realization that the source artwork was stored on a departmental drive and not a project drive, and as such was not frequently backed up. We dug through tape backups to no avail. The source art was lost. At this point we brought the information back to Atari and the deal was dead in the water. Cameron and I spent a few weeks re-thinking the concept and we re-pitched Atari with an Enhanced Edition as opposed to an HD version. We discussed the implications of a non-HD version and we had to renegotiate royalty terms to get the deal back on track. We basically had to completely discard our plans and start anew after almost a year of negotiation."
627,Overhaul Games Baldurs Gate Enhanced Edition,2013,https://www.gamasutra.com/view/feature/190432/postmortem_overhaul_games_.php,Baldurs Gate Enhanced Edition,console mobile pc,rpg,multi single,management-feature,planning," We began work on the project almost two years from ship. At the start we planned to ninja in, make some minor changes, replace the graphics system and ninja out. As we began to work with the code base, we found severe performance and stability issues with the engine. We traced some issues back to the core threading model of the Infinity engine. Infinity was multi-threaded before there were processors capable of parallel code execution. As such, it was designed around a concept of threading that never really emerged. The main issue was that all of the threads shared the same set of data. The problem is all these threads were created and they all hit the same memory and as such, blocked each other, stalling all threads until the current one completed. The code was also heavily laced with critical sections, which caused (in some cases) 70 percent of execution time spent in no-ops. Our longterm solution was to machete in and remove the threading, removing a couple hundred thousand lines of code from the game. The end result was more stable and had fewer performance irregularities. The ninja-in approach was tried in other areas, as well, and every time the end result was consistent. We always found a ton of complexity solving an era-specific problem that no longer applied. We continue to find roadblocks in the code and were improving it as we go."
628,Intelligence Engine Design Systems City Conquest,2013,https://www.gamasutra.com/view/feature/186088/postmortem_intelligence_engine_.php,City Conquest,mobile,strategy,online single,production,design," We knew long before we even began developingCity Conquest that its best to teach players gameplay concepts in small, easily digestible pieces, and wash each one down with a good helping of fun. This is Game Design 101, and as a veteran Nintendo developer, this had almost become second nature, so obvious that it hardly merited a second thought. Yet somehow, inexplicably, we started by building a tutorial mission that tried to teach every major gameplay concept -- building, upgrading, territory control, dropship pad swapping, game effects, cloaking fields, resource management of gold and crystals -- in a single 15-minute mission with a nonstop barrage of text popup boxes. After all that work to develop what I felt was a very solid tutorial mission, I received some brutally honest feedback from an external tester. No one wanted to sit through 15 minutes of text popups before having any fun or actually playing the game. And it was just too much information all at once: the gameplay concepts that seemed so obvious to me were of course much less so for the playtesters. And when they finally did get through the tutorial, they were suddenly overwhelmed with options in the very next mission: the player could immediately build all 20 buildings and use all four Mothership effects before being taught to use them properly. Ultimately, there was no choice but to take a deep breath and refactor the mission design completely. We separated the game into five different conceptual elements -- attacking, defending, expanding your territory with Skyscrapers, using game effects, and swapping dropship pads -- and built at least one specialized mission to teach each of those five core gameplay elements and use them in an entertaining way. We also overhauled to the user interface to allow us to limit the players building choices to a limited subset defined in the mission scripting, helping us ensure that we would not overwhelm players with options too quickly."
629,Intelligence Engine Design Systems City Conquest,2013,https://www.gamasutra.com/view/feature/186088/postmortem_intelligence_engine_.php,City Conquest,mobile,strategy,online single,production,bugs," Our biggest mistakes were several basic errors in due diligence. None of these ultimately impacted product quality, but we hold ourselves to a higher standard than to be the type of studio that would make these kinds of mistakes. Other than the aforementioned Kickstarter snafu, the worst due diligence failure was iPod Touch support. For reasons too complex to explain here, the iPod Touch 4 had to be our baseline iOS device, and our discussions with friends and our own research indicated that the iPod Touch 4 was basically the same as an iPhone 4. This was incorrect. The iPod Touch 4 is a markedly inferior device, and it suffers from much more severe memory constraints. This forced us to bite the bullet and implement a lot of fine-grained memory optimizations. We spent four to five developer-days on time-consuming texture and sound memory usage reductions and major improvements to our asset-loading system and resource management code. Although many of these memory optimizations benefited the overall game, these problems should have been identified and resolved earlier. We also had problems with a third-party technology we selected for the multiplayer lobby. Very late in the development cycle, we were forced to confront intractable technical issues around this technology, and we had to replace it with a solution based on Amazon Web Services. Rather than selecting this technology ourselves, it would have been better for us to have tasked the Full Cycle team with the due diligence around this and let them pick the best tool for the job. A third case was our achievements. Some developer friends assured us early in development that there was no limit on the number of Apple GameCenter achievements per game. When we realized that GameCenter actually has a fixed limit of 100 achievements, we needed to drop dozens of achievements to get back under this limit. In the end, this ended up being a good thing, as we only lost a few days worth of time and we were able to significantly improve the overall quality of our achievements by separating the wheat from the chaff. Although we regret the wasted time and the due diligence failure, the net result was that we ended up with what we feel is truly the best possible set of 100 achievements for the game."
630,Intelligence Engine Design Systems City Conquest,2013,https://www.gamasutra.com/view/feature/186088/postmortem_intelligence_engine_.php,City Conquest,mobile,strategy,online single,management-people,team," We realized in May 2012 that our team was stretched too thin to be able to implement and test multiplayer properly. We had a relatively solid first-pass multiplayer implementation in place, but our discovery-driven plan was telling us that multiplayer was a huge risk and required much more attention. At the same time, multiplayer was non-negotiable: it was an essential part of the games vision and added far too much value to the project to consider dropping it. We brought on the Full Cycle Engineering team to replace our proof-of-concept netcode with a serious multiplayer implementation. The multiplayer undoubtedly is a far better experience now than it could ever have been without their contributions. However, we should have recognized the bottleneck and brought the Full Cycle team on board much earlier than we did, and we should have focused on Wi-Fi from the outset rather than experimenting with cellular. The tasks involved were huge and this development effort would have benefited enormously from a much earlier start had we been willing to admit sooner that we needed the help."
631,Intelligence Engine Design Systems City Conquest,2013,https://www.gamasutra.com/view/feature/186088/postmortem_intelligence_engine_.php,City Conquest,mobile,strategy,online single,business,marketing," There were two City Conquest Kickstarter campaigns. We set the initial goal at a modest $12,000. When it moved too slowly, we canceled it, worked on extensively polishing the game, and returned a few months later with a better pitch, a better product, and an even more modest $10,000 campaign. The good news is that we reached our funding goal and delivered a much better product than our Kickstarter actually promised. The bad news is that it probably wasnt worth it. We only got 146 backers and only modestly exceeded our funding goals. The time involved in creating and managing the two Kickstarter campaigns and promotional videos would have been better spent working on the game. The most problematic issue we faced was our promise to offer our backers the full game for free. At the time, we believed we could use Apples promo codes to keep this promise, but we unknowingly made it impossible to keep when we changed the plan for our pricing model from separate lite and full versions to a single combined product with an in-game IAP to unlock the full game. Wed been assured by several sources that Apple promo codes worked with in-app purchases, so we felt very confident in this approach. We also had a long list of workarounds on hand in case this failed, including hard-coding the recipients device UDIDs or offering a customized redemption dialog in-game. Unfortunately, promo codes proved not to work for IAPs, and we learned how severely Apple frowns on custom redemption dialogs, the use of UDIDs, and pretty much every single other workaround wed had in mind. This was a clear and unfortunate failure of due diligence. We immediately apologized to our backers and offered a refund. The financial impact was minimal since this ended up being only a few dozen pledge refunds at $6 each, but it still should never have happened. The true value of Kickstarter for us was that we could convert many of our backers into playtesters who provided invaluable feedback. If we use Kickstarter again, we will focus on using it to acquire playtesters and communicate with our audience rather than using it as a fundraising vehicle."
632,Intelligence Engine Design Systems City Conquest,2013,https://www.gamasutra.com/view/feature/186088/postmortem_intelligence_engine_.php,City Conquest,mobile,strategy,online single,business,monetization," We released City Conquest on iOS as a free download, with a single $4.99 in-app purchase for the full game. The free version contains the full multiplayer experience plus the first five missions of the single-player campaign (out of 14) and the first of the six bonus challenge missions. We had initially intended to release the game as separate Lite and Full apps, with the Lite version as a free limited download. However, discussions with the Marmalade team ultimately convinced us that it would be better to combine these into a single free download, with an ingame paywall separating the demo from the full game experience. Our reasons for this were well-intentioned: this approach ensured the user only had to download the game once, minimized the potential for confusion between lite and full versions, made it easier to convert players from free players into full players, ensured that all players could play multiplayer for free, and ensured that achievements and campaign completion were shared across both the lite and full versions. In retrospect, although were happy with our conversion rate, its clear that there are serious limitations to this approach and any others that arent based on full-fledged monetization. The nature of the mobile market makes it extremely important to do proper price discrimination across the full spectrum of mobile users. There have been several articles on monetization on Gamasutra, and we refer the reader to these. We are currently nearing completion of the Android version, which we expect to release as an advertising-supported free game."
633,Monsters from the Id: The Making of Doom,2013,https://www.gamasutra.com/view/feature/198783/monsters_from_the_id_the_making_.php,Doom,console pc,shooter,multi single,production,design,"Another enhancement was an automapping mode, so players could navigate confusing passages from a two-dimensional, top-down perspective. One deliberate playablity issue that rose from adding the automap feature was that monsters would not be visible, and new mapping doesnt take place while in automapping mode. This limitation came about during playtesting because once the playtesters were in the automap mode, they tended to stay there and not play from the actual three-dimensional game screen. ""The game is not a challenge to be efficiently beaten,"" said John Carmack. ""Its something youre supposed to experience."""
634,Monsters from the Id: The Making of Doom,2013,https://www.gamasutra.com/view/feature/198783/monsters_from_the_id_the_making_.php,Doom,console pc,shooter,multi single,production,technical,"As soon as the network option was added, however, more complications cropped up. For example, the line-of-sight checks that the monsters AI programming went through were slowing the game because they had to scan for every player. Another problem with the AI routines was that monsters were targeting some players, but ignoring others. These problems were fixed, but there was a minor problem that had to stay in the game. The sprites for the individual players were drawn holding a generic gun, which wasnt a big issue when there was only one player. But, with multiple players, an opposing player couldnt tell which of the seven different weapons another player had. To give the players this viewpoint seven complete sets of sprites would have to be drawn for the character, and the design team felt it wasnt that important. (...) One aspect of Wolfenstein the Id designers didnt plan for was the cottage industry of hackers who rose to the challenge of hacking Ids code. Maybe it was Wolfensteins modem based roots that drove people to hack map editors, bitmap editors, and sometimes entire modified games using the PD 10 level teaser file. Apogee contended that all these mutations of the game hurt sales because people had in essence much more than 10 free levels at their disposal for free. Id designers take a different view; they dont mind and feel that people have the right to make whatever use of the game that makes them happy. They are planning the same thing with Doom and will even release some of the technical specifications."
635,Monsters from the Id: The Making of Doom,2013,https://www.gamasutra.com/view/feature/198783/monsters_from_the_id_the_making_.php,Doom,console pc,shooter,multi single,management-people,communication,"But in the making of what was to become Doom, Id Software severed its relationships with two of the parties that had been around since its beginning. In the initial development of Doom, a determination was made as to what direction Ids games should take. This decision resulted in founding member Tom Hall leaving Id Software. Carmack and Romero felt that Halls creativity was coming into conflict with gameplay."
636,Monsters from the Id: The Making of Doom,2013,https://www.gamasutra.com/view/feature/198783/monsters_from_the_id_the_making_.php,Doom,console pc,shooter,multi single,management-feature,security,"Alpha and beta leaks have plagued Id from the beginning, and Doom was no exception. In the early development stages of Wolfenstein, there was an idea to have a contest where whoever found a secret room hidden somewhere on one of the levels would win $10,000. But the first person to call up was a pirate who called during the beta testing cycle, and the whole prize idea had to be scrapped. In the early development of Doom, an alpha version of the game made it into such wide distribution that people were asking the technical support staff why the sound didnt work on their machine. The reason, of course, was that sound hadnt been added yet. The most disconcerting story has to do with an alpha version of the Wolfenstein SNES cartridge that was given to handful of game magazine editors and somehow made into the hand of a pirate in Hawaii who was making black market cartridges. To try and keep this kind of thing from happening, Id has now set its beta policy so that games are password protected and tightly controls how many beta copies are distributed."
637,Monsters from the Id: The Making of Doom,2013,https://www.gamasutra.com/view/feature/198783/monsters_from_the_id_the_making_.php,Doom,console pc,shooter,multi single,business,marketing,"The one snag that has lead to various rumors is that Wolfenstein has run into trouble in Germany. Id stated that Wolfenstein is banned there, not because of the Nazi content, but because of violence, and Id expects the same restriction to be placed on Doom."
638,Sony Santa Monicas God of War: Ascension,2013,tehttps://www.gamasutra.com/view/feature/193695/postmortem__sony_santa_monicas_.phpst,God of War: Ascension,console,action,multi single,production,design,"We knew that we wanted to tackle multiplayer, but we didnt know what that meant in terms of creative and technical resources. We had never attempted multiplayer, and we didnt have a lot of team members who had that experience, so we created our own rules -- some of which were successful, and many of which would have been identified as unsuccessful, earlier, if this had been an established multiplayer gameplay genre. When we started thinking about multiplayer, we left the constraints wide open. We knew that we wanted to do more than tack on a bunch of playable Kratos characters in a competitive arena. We knew we wanted to do more than add a co-op bot, and most of all, we knew that whatever we did had to be awesome and God of War in its epicness. What we didnt know was that every idea would feel too small upon the start. What we didnt know was how much work it would take to make the game we envisioned, and how many people would be required to successfully realize that vision. On top of that, we all didnt agree on what the game should be. So we ventured on and did a lot of prototyping. We started down a co-op path and realized that it just wasnt going to be what we wanted. It wasnt until just before our first showing to the press and public that we really found the heart of what would become our final multiplayer game, and we tweaked it right up until Alpha. In the end, however, were really happy with what we shipped, and we continue to hone the experience through patches and DLC. (...) We really wanted to change the way we told the story, and try to go deeper emotionally with Kratoss storyline, giving the players more context and emotional substance to experience. We had a lot of initial ideas and even prototyped visual cues that we played with at the start of the game. We felt good about the direction. The story and script as a whole met that criteria, too. Finding the right balance of story and the series staple ""Epic Moments"" provided an unexpectedly complex challenge. As important as it was for us that we find new ways to tell the story -- and the kind of story we were trying to tell -- it was always critical that we also find ways to top the jaw-dropping setpieces of previous games. As we closed in on finishing the game, we decided to retain our primary focus on the games biggest moments --those ""epic"" moments and setpieces. Unfortunately, this came at the cost of narrowing our story-telling vision."
639,Sony Santa Monicas God of War: Ascension,2013,tehttps://www.gamasutra.com/view/feature/193695/postmortem__sony_santa_monicas_.phpst,God of War: Ascension,console,action,multi single,production,technical,"While many of the systems that were improved for God of War: Ascension built upon successful systems from prior games, some features, not least of which was multiplayer, required substantial rewrites that took longer than expected, and we couldnt deliver those mechanics until well after key deadlines. Our entire player navigation code was something that we had to completely change to allow for online play, which was initially assumed to be co-op and therefore had to work alongside the single-player campaign. That was a much bigger undertaking, and it didnt go as smoothly as we had hoped, so we lost of lot of mechanic development time in that effort. Ultimately, the single-player and multiplayer parts of the game were more delineated than was initially expected, and a less disruptive approach would, in hindsight, have been better. While the wall-navigation system was ultimately smoother than in prior games, revising this system required additional effort from animation, environment art, design, and engineering, and by the time the system was fully implemented, we didnt have enough time to polish it sufficiently. In the end, we learned the hard way that we should have put more time into these elements up front, and better understood the scope and effort needed to finish them."
640,Sony Santa Monicas God of War: Ascension,2013,tehttps://www.gamasutra.com/view/feature/193695/postmortem__sony_santa_monicas_.phpst,God of War: Ascension,console,action,multi single,production,prototyping,"As one project ends, its important to begin planning for the next. We hold to a very high standard during our finalizing process, and the reality is that God of War takes all focus and all hands on deck to finish. Everything is custom, and every part requires a level of pride and perfection that only we put on ourselves, and it all comes together in the end. Balancing that kind of singular focus against pre-production for the next project was a very big challenge. At the end ofGod of War III, we were also doing some R&D experiments with an entirely new project. Our excitement ultimately came back around to telling a new God of War story, but that conclusion came later than we would have liked, and we lost out on invaluable pre-production time. Between ""all hands on deck"" to finish the previous game, and experiments with new directions we didnt take, pre-production for Ascensionwas not in the place where Todd Papy (game director) and senior leadership wanted it to be when we began. This proved to be very difficult to recover from, and it did have a detrimental impact on the entirety of the project."
641,Sony Santa Monicas God of War: Ascension,2013,tehttps://www.gamasutra.com/view/feature/193695/postmortem__sony_santa_monicas_.phpst,God of War: Ascension,console,action,multi single,management-people,team,"As anyone whos built one knows, building a multiplayer game along with single-player is like making two separate games. The amount of attention required for mode- specifi c issues requires dedicated leadership for each game type. While we had the majority of the team fully dedicated to either multiplayer or single-player, some key leaders, including Todd and Chacko, were split between single-player and multiplayer. As we were getting ready for our big press announce, which exclusively featured a multiplayer reveal, our entire focus was on getting multiplayer ready for that. During that time, the single-player game got very little senior leadership attention. By the time we refocused onto single-player and toward our big single-player E3 debut, we ended up playing catch up, and then multiplayer suffered. We juggled this way through the entire project, which also resulted in slower decision-making than desired on most everything. Luckily, our team was able to keep the various balls rolling, but we can imagine it was very frustrating for them to have that pressure and lack of leadership from the lead producer and game director."
642,DrinkBox Studios Guacamelee!,2013,https://www.gamasutra.com/view/feature/200658/postmortem_drinkbox_studios_.php,Guacamelee,console pc,action,multi single,production,design,"While there are a number of criticisms regardingGuacamelee!s gameplay, one that is especially frustrating for us is the complaint some people had about difficulty spikes. Parts of the game are challenging and thats intentional, but the difficulty spikes suggest we were not thinking critically enough about ensuring players were prepared for key challenges. (...) We didnt clearly explain all the ways someone can use roll, including using it to cancel out of any attack move. Additionally, weve seen that some people dont roll often or at all, instead using jump to dodge. (...) The boss fight with Javier Jaguar near the end of the game is the best example of a major difficulty spike that was overlooked. Jaguar is one of the only characters in the game where the player must fight defensively. This is the favorite fight in the game for many people on the team because it has to be approached with a good understanding of the games combat system. Our mistake was failing to recognize that the player had not been given enough training in the games more subtle mechanics up to that point. In retrospect information about the problem was available but we didnt take it seriously enough, and we consequently received a rude awakening through player feedback. (...) When the game was released the memes were a problem, and a vocal group of people took exception to them. In particular, the memes seemed to offend some people. From our perspective the references were a little piece of extra fun primarily isolated to the two towns the player visited. There were references elsewhere in the game but they were few and far between. However, in retrospect, things may have gone too far. The emphasis seemed to have moved more towards memes than game references. In addition, this bit of environmental spice was not as unique as it had been in the past, and games such as Borderlands 2 made the approach seem less fresh."
643,DrinkBox Studios Guacamelee!,2013,https://www.gamasutra.com/view/feature/200658/postmortem_drinkbox_studios_.php,Guacamelee,console pc,action,multi single,production,testing," We had already shipped two games with a small 1-2 person QA team without any major problems. We had put out numerous demos for Guacamelee! using the same QA process. The approach had worked in the past, so we werent concerned about it working in the future. (...) The arena bug was subtle, although the results were not, and was not easy to reproduce. We were dimly aware that the bug existed, but its frequency was unclear. Because of the difficulty in reproducing it, the scope of testing the rest of the game and the small size of the QA team, the bug was not properly identified."
644,DrinkBox Studios Guacamelee!,2013,https://www.gamasutra.com/view/feature/200658/postmortem_drinkbox_studios_.php,Guacamelee,console pc,action,multi single,production,bugs,"A number of nasty bugs slipped into the final game, chief among them a bug where the player could get locked into a fight arena. There were other problems too, including a blocking issue in our first patch that affected players who had a save game past a certain point in the story -- we were forced to pull the patch within a few hours of its release."
645,DrinkBox Studios Guacamelee!,2013,https://www.gamasutra.com/view/feature/200658/postmortem_drinkbox_studios_.php,Guacamelee,console pc,action,multi single,management-people,communication,"The bug that forced us to pull our first patch was obvious and severe. Here we identified a breakdown in communication between tech, QA, and production. The testing implications of changes in the patch hadnt been properly communicated to QA and a formal testing grid wasnt produced. (...) In retrospect we would have been well served getting additional QA help, or possibly external QA support late in the project when it became clear our internal testing was overtasked."
646,DrinkBox Studios Guacamelee!,2013,https://www.gamasutra.com/view/feature/200658/postmortem_drinkbox_studios_.php,Guacamelee,console pc,action,multi single,management-people,team,"During the development of Guacamelee! we had particular difficulty managing some of the personalities on the team, and at different points on the project we had to dismiss two individuals. These dismissals were not related to work performance, but instead were precipitated by a breakdown in working relationships. While in the past people had left the team, we had never experienced problems like these before and the build-up was a surprising and timeconsuming disruption. When we founded the studio a loose formal structure developed. The initial company was small and had people in each discipline who could communicate comfortably and confidently with one another. Everyone owned part of the company, was invested in its success, and we were all peers, which made strict rules and policies awkward. While the initial members of the team had titles (largely for the purpose of communicating with publishers), we didnt want formal roles to dictate what people felt they could contribute to or question, and so we avoided creating new ones. During Guacamelee!, we encountered difficulty scaling this approach. Some new members of the team struggled to find their place alongside peers when working without a clear authority structure. Lacking the confidence to navigate disagreements constructively, in frustration these team members sometimes ignored decisions or emotionally disengaged from certain tasks. As a result, weve begun to put a clearer authority structure in place for the team, and weve become more aware of the need to monitor personalities and provide ways for people to make their concerns known. In other cases we failed to set clear boundaries on inappropriate behavior. For example, it came as a surprise to discover individuals working on personal projects that seemed to be affecting their work performance and that were, in our view, in conflict with their employment obligations. As a result, weve become more explicit and proactive about enforcing company policy and behavior."
647,DrinkBox Studios Guacamelee!,2013,https://www.gamasutra.com/view/feature/200658/postmortem_drinkbox_studios_.php,Guacamelee,console pc,action,multi single,management-feature,multiple-projects,"During the development of Guacamelee! we released our second game,Tales From Space: Mutant Blobs Attackfor the PlayStation Vita. The title was originally planned as a 1.5 version of About a Blob aimed at the Vitas launch, but over time became a follow-up game -- although not officially a sequel. For the first time we had multiple internal projects running simultaneously, and we encountered challenges balancing and planning the two projects with a small team. We didnt have a formal process for deciding how to balance resources. Personnel allocation was ad-hoc, based on the projects producers simply saying who was wanted for what, as needed. Over time it started to feel like there was low-key competition between the two game teams, and Guacamelee! felt like the sexier project. (...) Ultimately, this worked: the game shipped as a launch title and we were happy with the quality. However, the sudden change in priorities was not planned for and there was a heated debate about what had happened and why. Fundamentally, there was a lack of explicit communication and precise agreement on what was needed for each project. Resource allocation has since become more formalized, with more discussion about needs and consequences."
648,Kingdoms of Amalur: Reckoning,2013,https://www.gamasutra.com/view/feature/197269/postmortem_kingdoms_of_amalur_.php,Kingdoms of Amalur: Reckoning,console pc,rpg,single,production,tools,"A lot of the systems in the game were still very much in the blueprinting stages where we werent even sure how they would function in the final game. The dialogue system is one example. We came out of preproduction without giving much thought to the dialogue system other than, ""Yeah, we should probably do that."" We didnt nail down how we would display dialogue and choices in-game and how designers would enter that data in a tool. This put a huge amount of pressure on our tools programmers. They had to jump from tool to tool getting functionality to a point where users could actually use it right before they needed it. In a lot of instances, our tools programmers had to roll out a tool before it was fully functional or bug free because of time constraints. Obviously, this hurts content creation. Devs would submit tool feature requests and not see any movement on them for months (or ever, in most cases) because the tools team had a ton of other issues that were higher priority. It basically meant the majority of our tools were functional but woefully inefficient. Im truly amazed that the tools team did as well as they did with such limited time and manpower."
649,Kingdoms of Amalur: Reckoning,2013,https://www.gamasutra.com/view/feature/197269/postmortem_kingdoms_of_amalur_.php,Kingdoms of Amalur: Reckoning,console pc,rpg,single,production,technical,"Im trying to remember the number of demos we had to create over the development cycle ofReckoning, and I honestly end up losing count. Doing a demo for us was a pretty major undertaking, like it is for almost everyone in the business. Youre basically taking content and systems that were meant to be first or second pass at a certain point in the schedule and bump it all up to shippable quality long before its supposed to be shippable quality. This results in a lot of work that is just thrown out because the real content and the real systems end up changing a few weeks or months later. And there is nothing quite as frustrating as working overtime on something that you know is just going to be seen once and then thrown away. The consumer demo was another hurdle to overcome. There was no way we were going to be able to complete work on the game and create a downloadable demo in parallel. We just didnt have the time. In the end, we had to outsource the demo, and they had to build something with old code and not a lot of time. The result was a buggy experience, but still an experience that a lot of fans enjoyed."
650,Kingdoms of Amalur: Reckoning,2013,https://www.gamasutra.com/view/feature/197269/postmortem_kingdoms_of_amalur_.php,Kingdoms of Amalur: Reckoning,console pc,rpg,single,production,prototyping,"Even though we had a lot of production time during the false starts before Reckoning, our preproduction time for Reckoning itself was entirely too short. At the beginning of Reckoning, we were in heavy pitch mode and our goal became to get a publishing deal signed instead of spending the time to figure out the normal outputs you are looking for in the preproduction phase of development. (...) Our content pipelines werent fully fleshed out, and we only had basic or less than basic functionality of some of the tools we would need to create that content. But given our tight schedule and the mountain of content we had to produce for this game, we jumped in to full production with a lot of questions unanswered. Needless to say, this is not ideal. We also hadnt really figured out the density of our content (quests, reagents, dungeons, and so on), which had long-term negative repercussions for both design and production. We frankly made ""too much game,"" and we probably wouldnt have (at least not to that extent) if we had more time in preproduction to figure out the density question."
651,Kingdoms of Amalur: Reckoning,2013,https://www.gamasutra.com/view/feature/197269/postmortem_kingdoms_of_amalur_.php,Kingdoms of Amalur: Reckoning,console pc,rpg,single,management-people,delays,"For those keeping track at home, in five years we were bought and sold twice and changed the name and core features of the project three times. Needless to say, its been a long, strange trip. The rest of the postmortem will be restricted to the two and a half years we spent working on Reckoning rather than the two previous false starts."
652,Kingdoms of Amalur: Reckoning,2013,https://www.gamasutra.com/view/feature/197269/postmortem_kingdoms_of_amalur_.php,Kingdoms of Amalur: Reckoning,console pc,rpg,single,management-people,team,"Our cinematic team is awesome but very small. Much like most of our teams on the project, they have to produce more content than would normally be expected for a team that size. Not locking down the major beats of the main quest early really hurt the cinematics team. (...) When we were purchased by 38 Studios, we retained all of our senior management and development staff. The BHG studio was reporting to 38 Studios corporate, then based in Massachusetts. In July 2010, about a year into the development ofReckoning, five of the most senior studio management team at BHG left the company. This easily could have ended Reckoning in a lot of different ways -- the studio could have closed, or the game itself could have become a mess of unrecognizable trash. Luckily, that was not the case. Several people in the BHG studio stepped up to fill the leadership void so we could continue to make the game youll see at release."
653,Kingdoms of Amalur: Reckoning,2013,https://www.gamasutra.com/view/feature/197269/postmortem_kingdoms_of_amalur_.php,Kingdoms of Amalur: Reckoning,console pc,rpg,single,management-feature,cutting-features,"Going from a storyboard to a finished cinematic takes a long time. Once a cinematic is finished, it is very costly to change. Because we werent locked down on the major cinematic moments in the game for so long, we ended up having to cut several cinematics that we really wanted to include. The cinematics we have in the game are awesome, and we got all the major beats that we wanted, but we definitely wanted more."
654,Kingdoms of Amalur: Reckoning,2013,https://www.gamasutra.com/view/feature/197269/postmortem_kingdoms_of_amalur_.php,Kingdoms of Amalur: Reckoning,console pc,rpg,single,management-feature,planning,"What we should have done was make sure we had defined everything that needed defining. We had a basic scope of content, but we hadnt done much to understand the feature set or the games major hook. We decided to go all-in on combat fairly soon afterward, but the development budget and schedule had already been set, and so we werent able to anticipate how many additional animators and designers we would need to bring the combat system to life."
655,Pangalores Knightly Adventure,2013,https://www.gamasutra.com/view/feature/194432/postmortem_pangalores_knightly_.php,Knightly Adventure,console,action adventure,single,production,design," Cultural differences between the dev team in Korea and marketing team (and audience!) in U.S. took some work, especially for a game that uses humor so much. Humor can be very regional and this is an ongoing focus for improvement. Do the jokes carry over? Thats a hard one to objectively gauge at times. We also have to look at player expectations. In Korea, a certain amount of grinding is viewed as absolutely proper, but here in the US players view this gameplay style as boring. So thats another thing we have to watch out for (and we did get dinged for having repetitive gameplay, which we are working on improving through increased variety in our battle quests). One example of cultural differences was the cute look for the turtle monsters in the game. North American players expressed they were not comfortable killing cute turtles, so we made them more mechanized and bad looking to alleviate this concern. Interestingly, players had no problem with the cute frog enemies -- perhaps people just care more about turtles!"
656,Pangalores Knightly Adventure,2013,https://www.gamasutra.com/view/feature/194432/postmortem_pangalores_knightly_.php,Knightly Adventure,console,action adventure,single,production,tools," We discussed the success we had with our synced multiplatform gameplay above. But one area we stumbled on was on the launch timing between different devices. This occurred because we didnt fully understand the differences between the App Store and Googles Play store and their associated hardware. The App Store has a longer approval cycle, leading to a longer cycle not only in development but for updates. With the ability to issue quick fixes, the Play store is more suited to multiple iterations. Ideally, we might have launched first on Android where we could release hot fixes to resolve issues before launching on the larger iOS market. Because we worked hardest on the biggest platform launch (iOS), our Android version was not ready at launch and when launched, did not have full device coverage. This meant the marketing dollars we spent at launch were leveraged less effectively since we couldnt send potential players to an Android download. It did leave us with a stronger story for iOS players but we lost our multiplatform message in the process. To compound matters, we underestimated the time required to tune the game for each supported Android device, further delaying our Android launch. And when we did launch, it was only for a few devices, which was not pleasing (understandably so) to Android players. Were still slowly filling out our roster of Android devices. On the positive side, we did get the game out for the holidays (we launched in November 2012) in time for a positive reception before the market was inundated with holiday shopping and we had our greatest success on the larger/more unified iOS platform. Going forward, we have realigned our expectations for the two stores and have a plan for utilizing the strengths of both. In some cases, quick is good and in others, slow and careful is the right play."
657,Pangalores Knightly Adventure,2013,https://www.gamasutra.com/view/feature/194432/postmortem_pangalores_knightly_.php,Knightly Adventure,console,action adventure,single,production,technical," Our game design focused on high-end graphics, leading to performance issues at launch, especially on older mobile devices. The takeaway for us was to be brutally honest about which devices will work with your game and target your game experience toward those devices. As both the iOS and Android markets continue to be fragmented, this is a critical issue. If you have a 3D action-oriented game like ours you can run into memory and performance bottlenecks very easily. We knew as we approached launch that we had problems with devices like iPod touch 4th generation and iPhone 3 -- they had worked under iOS 5 but with the iOS 6 upgrade and our own additions we were running into memory crashes. Unfortunately, in our case we could not change the supported iOS platforms text in our iTunes description. Devices such as iPod touch 4 that were now problematic were baked into our app information as being supported. As a workaround, we updated our main iTunes description and added device checks to warn players that they would experience problems. If a player with an unsupported device tries to load the game they get a pop up warning advising them of this and the game exits so they can uninstall it. However, this was not ideal and some players were understandably upset when they game they had downloaded would not run! With our most recent update, the issues were largely fixed by compressing our graphics much more heavily. Our environments are not as pretty but ratings are trending toward 4 stars on iTunes. Our next update will restore some graphical sheen with improved resolution and memory optimization so things will get even better (we are stealing some animation frames that are not necessary to the play experience, among other tweaks). However, would have been better to fix this BEFORE launch."
658,Pangalores Knightly Adventure,2013,https://www.gamasutra.com/view/feature/194432/postmortem_pangalores_knightly_.php,Knightly Adventure,console,action adventure,single,management-people,team," Unfortunately, our testing did not reveal some key issues in our largest market -- North America. By conducting QA where our devs were (Korea) rather than where most customers were (U.S.), we failed to spot some tech issues that were an issue at launch. That was a big oversight, and it bit us in the end like a dog going after a mailman! South Korea has much faster and better-integrated internet infrastructure than does the US, and this made us underestimate some issues we would have in the US with downloading and syncing performance at launch. Downloads that seem fine at 20 Mbits per second are much more vexing at 1.5 Mbits/second. During spot-testing in the U.S., we thought the issue was that the development servers we were playing from were based in Korea, but the issue turned out to run deeper than that. Going forward, we are doing QA in North America using a service company. This gives us another channel for external feedback while also insuring that testing is closer to the reality experienced by our players. Lesson learned!"
659,Pangalores Knightly Adventure,2013,https://www.gamasutra.com/view/feature/194432/postmortem_pangalores_knightly_.php,Knightly Adventure,console,action adventure,single,business,monetization," We focused on gameplay at the expense (no pun intended) of monetization. Our goal was to make the game fun first and worry about optimizing monetization later. This isnt an issue that players are complaining about, but our approach did leave dollars on the table. For instance, we originally made it harder to level up, requiring players to have better weapons and armor that would take players more work in game unless they wanted to take a shortcut and buy them outright. But we decided this approach made non-paying players work too hard, making the game less fun, so we adjusted to make it easier to level up. As a first-time developer in this marketplace, we had to choose our priorities, and that was a factor in deciding to focus on making the game fun first and foremost. The best monetization techniques will not help if you havent attracted players and given them a good experience in the first place. So wanted to build an audience, and weve had success in that area. Going forward, we are seeking to find effective ways to monetize play without unbalancing the game. This sounds great, but the hard part is doing it right! For instance, right now you must choose your health and mana potions before a battle, using a limited amount of slots (more slots can be purchased). Allowing players to purchase more potions if they run out in the middle of a quest could provide revenue. Right now, players are essentially being punished if they dont plan ahead. Providing a quick mid-quest purchase opportunity that could help them finish their quest rather than failing and having to load more potions in inventory and start over is a valid option. We want to find these optional opportunities where he can help paying players without impinging on the game flow for everyone else. We are sensitive to the pay to win perception of F2P games and we always want to err on the side of caution in that regard. Another area we plan to work on is adapting our premium weapons and armor in line with expectations from the community. Humor has always been a big part of KA and this is reflected in our premium items. You can buy an umbrella or a giant fork to use as a weapon, for example (and it does look funny when a big knight is whomping monsters with an umbrella). We have to be creative, though, because we cannot offer a huge variety of items due to the memory constraints of mobile devices."
660,Unknown Worlds Entertainments Natural Selection 2,2013,https://www.gamasutra.com/view/feature/187299/postmortem_unknown_worlds_.php,Natural Selection 2,pc,shooter,online,production,technical,"Donald Knuth is famously quoted for saying, ""preoptimization is the root of all evil"". Even as relatively experienced game developers, we have always taken that to mean: optimize after youve implemented most of your game. Weve since learned that this couldnt be farther from the truth. It wasnt until close to release that we realized we had some fundamental engine optimizations to make that we should have caught earlier. So we ended up making some massive technical changes within a week or two of launch. This included making the client prediction multithreaded (!) and making fundamental changes to networking and our server update rate. After seeing even tiny code changes cause huge problems in playtests, the idea of making these fundamental engine changes right before ship made our stomachs churn. But we knew the game needed these performance boosts, so we kept a clear head and made the changes. Miraculously, they went over beautifully, and we had no horrible problems on launch."
661,Unknown Worlds Entertainments Natural Selection 2,2013,https://www.gamasutra.com/view/feature/187299/postmortem_unknown_worlds_.php,Natural Selection 2,pc,shooter,online,management-people,team,"We have a completely unstructured environment, without task lists, priorities, managers, producers, or even job descriptions. We rely on people to figure out the best thing for them to work on, and how to do it efficiently. Early on, we hired some talented folks that didnt fit in. They had the skills and we liked them as people, but we now realize that they were demoralized without structure. We were so consumed with making the game that we didnt notice these team problems -- only that morale was low. We wouldve been better off had we realized that personality fit and talent arent enough: people need to mesh with your working style. When people are unhappy, it spreads through the whole team."
662,Unknown Worlds Entertainments Natural Selection 2,2013,https://www.gamasutra.com/view/feature/187299/postmortem_unknown_worlds_.php,Natural Selection 2,pc,shooter,online,management-feature,scope,"Natural Selection 2 was an ambitious follow-up to our free independent Half-Life mod, Natural Selection. Our original plan was to make a quick commercial sequel on the Source engine to start making money. Instead, we spent six tough years developing our own engine and almost going out of business multiple times. We also decided we wanted to make the most moddable game ever. We did this by implementing 100 percent of our game code in Lua. There wasnt a Lua IDE on the market that we thought was good enough, so of course we spent more time to write our own (called Decoda). The final product was more commercially successful than we had originally hoped, but that came at a big cost. The game was too large in scope, took too long, and because of that, ended up being very high-risk. If we could do this over, we would have reduced the scope of the game significantly, or made a smaller game, so we could get cash flow positive sooner."
663,Unknown Worlds Entertainments Natural Selection 2,2013,https://www.gamasutra.com/view/feature/187299/postmortem_unknown_worlds_.php,Natural Selection 2,pc,shooter,online,management-feature,budget,"We were perpetually broke. Theres no other way to say it. And as CEO, it was my responsibility to make sure the company had proper funding. But as a first-time CEO, my primary skill and interest lied in game design and development -- not finance, nor fundraising. But we were learning about fundraising as we went along. Unfortunately, not having any money is not a good position to be in raise more money. Legal expenses were exorbitant, so we handled the contracts and paperwork on our own as much as possible. And every time we started to run out of money, it was a huge burden to drop everything and try to raise more. It was like a wound that would never heal. Common startup advice says you should raise twice as much as you think you need. In our case, three or four times wouldve been better. The same work is required to raise $1M as it is to raise $100k -- you just have to talk to different people. No matter who you talk to, you have to convince them youre going to make them a profit, and youre still in for months of negotiating and legal work. I often say that starting a company is similar to getting your MBA: it takes about the same amount of time and money (more, in our case) and will teach you everything you need to know to start a business successfully. Maybe your first business wont be a success, but at least you werent in school, where theres not even a chance of success. Looking back, I spent most of my time working on the game, not pitching to investors. If you decide to raise money, jump into it completely. Pitch constantly and refine your technique every time. Constantly meet prospects and work your contacts. Get multiple parties interested so you can leverage their offers against each other. Make sure each party knows youre going to get funding with or without them. In short, do it all at once and make it count."
664,Unknown Worlds Entertainments Natural Selection 2,2013,https://www.gamasutra.com/view/feature/187299/postmortem_unknown_worlds_.php,Natural Selection 2,pc,shooter,online,business,marketing,"We launched Natural Selection 2 on Halloween of 2012 -- exactly 10 years after the original Natural Selection mod. We didnt plan on hitting this date; it just happened. It was the only open slot on Steam before the deluge of high-end holiday shooters. We were unable to predict this day more than a few weeks in advance, so we didnt have much time to prime the press. As a result, we didnt get much press coverage or reviews on launch, and it proved difficult to get covered after as well. We wrote approximately 600 members of the games press and dozens of YouTube channel owners. Each received a copy of the game, a press kit and an invitation to play, review, or interview us. After a full month, we finally had about 35 reviews published, but not many that were recognized by Metacritic. Our rabid fan base then went wild over a poor review and a subsequent Metacritic controversy, but that wasnt the kind of attention we were looking for. With such a long development cycle, it was very difficult to keep the excitement or attention of the press. We are pretty inexperienced in the PR and marketing aspects of game development. Maybe we shouldnt have released our early videos six years in advance, or maybe we shouldve gotten a PR company to help us. It was so difficult to make a good game on new technology that we didnt have any energy or resources left to promote it properly. By the time the game was done, there was no time left for promotion anyways, as the holidays and big releases were going to blow us away. We did learn that press people are totally overwhelmed with e-mail and that they appreciate phone calls. Its not enough to e-mail and expect them to cover you: always call. We found 37 signals Highrise to be a good way to keep contact info in one place and our efforts coordinated. (...) When we were a cash-strapped company trying to figure out how we could show NS2 at PAX East, we couldnt believe how expensive it was to have a professional booth built. Instinctively, we decided to build our own, out of plywood. To make our hastily erected, unpainted plywood planks look intentional, we asked conference-goers and NS community members to doodle on them, permanently inscribing their forum handle on the structure that was literally holding up our game. By relying on our community and our instincts, we had a great show. It was more work and stress than we had originally anticipated, but everything worked out fine, and no one died or got sued -- just like creating Natural Selection 2."
665,Q-Games Pixeljunk 4am,2013,http://www.gamasutra.com/view/feature/189359/postmortem_qgames_pixeljunk_4am.php,Pixeljunk 4am,console,simulation,single,production,design,"In 2010, when the project was still called lifelike, it was crippled by a confused artistic direction as to where it should go. If we had a strong artistic vision early on, we could have avoided building features we would end up not using, and we would have built tools that let us get the visual effect we wanted. Since we didnt have that artistic vision, we had to build very generalized tools that produced a rather generic visual style. (...) We knew that 4am had so many new gameplay concepts and controls that it was going to be hard to explain how to play it. At game shows and events, we found people picked it up extremely easily, given the tactile nature of the Virtual Audio Canvas (vibration feedback). Explaining this idea with just text and images, though, was a completely different story. Even after repeatedly refining the current tutorial and running ""blind tests"" on new people with every iteration, we still havent really achieved a 100% understanding rate for the controls after one tutorial play-though. 4am introduces many new control concepts with no easily available mental reference points -- theres nothing like it we can compare it to -- so its kind of like asking players to read a book and then play a saxophone. (...) 4am began as a passive music visualizer. When it started coming together as more of a music creation tool, a fundamental conflict arose: Players want to manipulate the music, but the artists want to preserve their original idealized state of a track. When we began experimenting with DSP effects, we quickly found that people like to warp music and make it their own. The dichotomy within 4am is that we want players to find their own sound, where traditionally produced music aims to have already achieved that for you by the time you hear it. So when making tracks for 4am, should they be prepped for ""finishing"" inside4am by the players using DSP effects, or should they be ready to go right out of the box? This internal tension had a direct impact on the ranges available to players within the DSP effects. A flanger or chorus DSP might have a wide frequency or feedback range to play within, but by carefully setting a min/max range under the hood, we could safely trim the performers freedom space to something we knew would produce the kind of sound we wanted. Unfortunately, some of these ranges are probably still too subtle for the average user to enjoy, since they can be difficult to hear depending on what track is playing. We had to create effects that were audible and interesting to players, but at the same time stylistically acceptable to the artist. In hindsight, these are two completely opposed ideas, so it was always going to be difficult to satisfy both. The player still needs to have fun, but not at the cost of being a passive appreciation tool for the artists benefit."
666,Q-Games Pixeljunk 4am,2013,http://www.gamasutra.com/view/feature/189359/postmortem_qgames_pixeljunk_4am.php,Pixeljunk 4am,console,simulation,single,production,technical,"In an attempt to make the editor more artist-friendly, we used GameMonkey to expose alot of in-game models behaviors. Unfortunately, we exposed too many parameters and variables, which took down the frame rate. A great example was the jump behavior designed to make small circles jump in time with the music. Over time, the jump behavior became bloated with a variety of other requests like interpolating color based on height, rotating on a pivot point, and other small artistic touches. If it so happened that none of them were being used, the cost of one jumping circle could be astronomical for the visual payoff. This was the price though of wanting flexibility in the visuals but never nailing down any one element. Many of these behaviors were things that could have been (and eventually were) written far more efficiently and optimized for the SPU once we knew exactly what we wanted to make. As a result, early incarnations of the editor on PC were a monstrosity, making it almost impossible to use without an intricate knowledge of each behaviors roots in code. (The original programmer moved on shortly after the prototype, so there are probably still things lurking in there that no one will ever know about now.) The GameMonkey behavior method of using the editor was largely tossed out following the prototype, essentially binning a vast amount of resources and time."
667,Q-Games Pixeljunk 4am,2013,http://www.gamasutra.com/view/feature/189359/postmortem_qgames_pixeljunk_4am.php,Pixeljunk 4am,console,simulation,single,management-people,communication,"There was a degree of miscommunication surrounding the beta for4am. We were the first beta to have two packages (a Free Viewer and a Full Version), which made it tricky before wed even started. Of course, both were critical for testing purposes, but the main problem was people mistaking the Free Viewer as a demo and expecting gameplay. In the context of the full title, the Free Viewer is great and has had a huge uptake, but in a climate where betas are free anyway, that value was lost and people expected playable content. (...) I feel that some people may have been burned on their first impression through the beta. The official beta announcement was a combined effort with our publisher Sony and our own official channels, but ultimately we should have taken more ownership of the message and ensured that word got out about how the beta was going to work (by baking an informative screen right into the package, for example). (...) Overall, the beta was successful in satisfying our development requirements, but from a marketing perspective, I feel there may be a few players out there who might never give 4am a second chance."
668,Q-Games Pixeljunk 4am,2013,http://www.gamasutra.com/view/feature/189359/postmortem_qgames_pixeljunk_4am.php,Pixeljunk 4am,console,simulation,single,management-people,team,"Unfortunately, with the small team size and time restraints, we really couldnt give the beta the time it deserved. "
669,Q-Games Pixeljunk 4am,2013,http://www.gamasutra.com/view/feature/189359/postmortem_qgames_pixeljunk_4am.php,Pixeljunk 4am,console,simulation,single,business,marketing,"4am is not a traditional ""game."" We probably took too long to realize ourselves that it is more of an instrument than a game, and so we slipped into our regular PR habits. The mistake we made was expecting the same response as usual from the traditional game media outlets: Many review sites and journalists clearly didnt know how to approach the title, and either chose to not review because it didnt fall within their definition of a game, or reached in with a lukewarm reviewing hand without really wanting to shake the boat."
670,Resident Evil 4,2013,https://www.gamasutra.com/view/feature/195143/postmortem_resident_evil_4.php,Resident Evil 4,console pc,shooter,single,production,design,"The goal of any games storyline is to expand the depth and perception of that games universe, as well as to inform players of what they are to do. In Resident Evil 4, the storyline was primarily conveyed through our real-time movies. We had a hard time achieving our concept of combining gameplay with the necessary story elements that could evoke a feeling of believability within the in-game movies. Games are a visual medium, and throughout the series, it wasnt always easy to create fresh concepts. It was even more difficult to develop visuals that would continue to advance the series. This is why we thought of a new direction for Resident Evil 4s development, which we call ""complete concept changes."" That is to say, we examined all the previous gameplay features and notions of fear and broke them down to change the entire concept for the game."
671,Resident Evil 4,2013,https://www.gamasutra.com/view/feature/195143/postmortem_resident_evil_4.php,Resident Evil 4,console pc,shooter,single,production,technical,"Because this version of Resident Evil was far more action-based, we often needed to display a very large number of characters at once (see Cutscene Images A–D). As a result, we needed to carefully apply model textures for these types of scenes. Normally, an enemy character in the game has about 3,000 polygons and is about 400K of data space. There are some scenes in the game, though, that had up to 25 characters on screen simultaneously. We werent able to adjust all the memory and image storage to the level that would be required for us to keep those 3,000 polygon models intact. In order to address this issue, we decided to adjust the amount of data per model in each scene, and even in cuts within the scene. First, we would implement the model that required the most data (usually the closest to the camera). Then we adapted it by deciding how it would be drawn and processed, based on memory levels. Limiting the amount of data on all the models would result in poor quality, so we prioritized the portions of the models that would require the best modeling. We came up with three different scenarios for how to distribute the data for texturing the models, which could then be used in various situations by combining them. A normal high resolution model for a Ganado, a generic enemy in the game, consisted of approximately 3,500 polygons. Normally, it would be difficult for us to render several high resolution Ganados on screen simultaneously. Therefore, we created two additional variations of the model: mid-resolution Ganado, which are approximately 2,000 polygons, and a lowresolution model with about 1,000 polygons. These three models would switch depending on the situation. (...) In addition to the models, we also adjusted textures for each scene. We sometimes faced problems with how to adjust the way that characters looked when different lights hit them. This happened especially when we used a lot of penetrating or spot lights. We solved this problem by creating textures for each scene or each cut. (...) Another problem we had to address was related to depth of field within a given scene. One method we used is a blurring effect: We displaced several pieces of a given image at various depths of field when no camera movement was happening. In this case, processing power was light, and the hardware was not overly taxed. The more difficult scenarios came up when manipulating depth of field in a scene that required camera movement. In these cases, we specified a distance from the camera past which we would blur the image. We dynamically blurred the image itself, just as you would in Photoshop. The method was artificial, but it enabled us to convey a depth of field that appears in the actual in-game camera. The processing power was very heavy in comparison with the first case, and therefore, we used the blur only when we needed to move the camera and adjust the depth of field from a creative standpoint. (...) Some situations required real-time rendered textures, which in turn required the use of multiple cameras. By using multiple cameras, the processing strain is increased by about one and a half times the amount used with just one camera. Despite this, we decided to use this method because the workflow system we utilized made it very efficient to adjust the images. This technology was used in a scene in which Leon looks at a monitor on the screen. For the ""video"" displayed on the monitor, we didnt use pre-rendered movies, but animated scenes which were rendered to a texture in real time. With this method, we did not have to render character motion on the monitor in order to change elements of the scene, and so we were able to make changes quite easily."
672,Treyarchs 2002 hit Spider-Man,2013,https://www.gamasutra.com/view/feature/194852/postmortem_treyarchs_2002_hit_.php,Spider-Man,console pc,action platformer,single,production,design," I think designing is overrated; coming up with a 200-page design document only to scrap most of it seems like a waste of resources. Still, you need some design - a bad plan is better than no plan - and you need more than we had. By the time we finished our proof-of-concept, the design consisted basically of a list of bosses, a list of levels, and some ideas on how our new AI system might work. Each item had about a paragraph devoted to describing it. Our story was a page long. By the end of the project, we had a wealth of design: we had the output of each level implementation meeting; we had the script; we had a couple of pages on each boss, describing the moves he would be capable of; we had concept art and storyboards; we had concept art for the front end. If we had come up with that material earlier in the project, we would have been rudderless for less time and could have made more game before shipping."
673,Treyarchs 2002 hit Spider-Man,2013,https://www.gamasutra.com/view/feature/194852/postmortem_treyarchs_2002_hit_.php,Spider-Man,console pc,action platformer,single,production,tools," One of the most valuable things about our game engine is CHUCK, the script language named after its creator, Chuck Tolman. Its a C++-like script language that emulates multithreading, allowing you to have multiple game entities processing their individual scripts at the same time. Its used to script game events, trigger audio, change AI states, speed up or slow down the whole game or individual entities, and even place front-end widgets and text on the screen. One can prototype whole new kinds of gameplay in CHUCK with very little programmer help; this is where the stealth mode of Spider-Man came from, for example. The game designers onSpider-Man are really programmers in their own right. They are empowered. Because CHUCK is such a powerful script language, however, game designers would often take on tasks that could have been handled in code better. CHUCK doesnt really have arrays, and it doesnt have a debugger, so for anything complicated, C++ is the way to go. Unfortunately, it wasnt always the way we went. The worst example of this may have been the front end. Although programmers did the work, we thought it would be clever to write it in CHUCK instead of C++ with the idea in mind that this would open it up for more people to maintain it, if necessary. This idea worked in a way: when we got to the eleventh hour and we still hadnt finished the front end, the game designers stepped in and helped finish it off. If we had done the front end in code, we would have finished it sooner and the game designers wouldnt have had to step in at all. Again, this is a result of our staffing difficulties, because if wed had more staff sooner, programmers could have provided these features in code. Instead, the game designers got fed up and did it themselves, costing us efficiency in the long run."
674,Treyarchs 2002 hit Spider-Man,2013,https://www.gamasutra.com/view/feature/194852/postmortem_treyarchs_2002_hit_.php,Spider-Man,console pc,action platformer,single,production,technical," Because we didnt hire a scriptwriter until fairly late in the project, we didnt get the script approved by Activision and Sony/Columbia until even later. By the time the people who make these decisions had decided to accept the script and get Willem Dafoe and Tobey Maguire to do the voice-over, we were long past the drop-dead date we had given to Activision. It was already alpha, and we had very few of the cutscenes done, because its a waste of resources to do the cutscenes until you have final voice-over. But we soldiered on. We got the final voice-over recorded and transplanted animators into the Spider-Man animation sweatshop to get all of the cutscenes finished as soon as possible. The end result is that a lot of our cutscenes dont look as good as we would like. Audio also suffered from massive disorganization. We didnt have anyone on our team dedicated to managing audio resources. What we needed was a good directory structure, file-naming conventions, and the like to make dropping in final sound effects easy. Too many times we put in a placeholder sound effect without changing the name, resulting in massive confusion about which sound file went with what. After those issues were all resolved, we discovered that the console versions didnt sound the same as the PC version, due to discrepancies created by the different tool chains on the different consoles. We were working out these problems right up until we shipped."
675,Treyarchs 2002 hit Spider-Man,2013,https://www.gamasutra.com/view/feature/194852/postmortem_treyarchs_2002_hit_.php,Spider-Man,console pc,action platformer,single,production,bugs,"Nothing prepared us for how many bugs wed find in this project. The total came in at around 16,000, about half of which were internal and half of which were external. This was more than twice as large as the largest bug count wed ever seen on a project at Treyarch before, partly because we were on three platforms and therefore had more bugs. (The same bug on three different platforms might show up as three or even six bugs, as PAL SKUs were being tested independently from their NTSC counterparts.) Still, even though our find rates were high due to the number of platforms, our fix rates were quite ordinary. Our open bug graph looked like Figure 1. Watching our bug count was like watching the stock market, and we felt lost at sea. On previous projects wed been able to guess fairly accurately how many bugs wed have and develop a good idea when wed be complete. On this project, all we knew was that it was going to take longer than we thought, and possibly a lot longer. All we could do was work extra overtime and mark will not fix or as designed on as many bugs as we could. At this point in the project, its a gray area between a bug and a feature that really has to be there. Although we fought against as many changes as we could during this period, most of the battles were lost, as we reluctantly agreed that the opportunity justified the risk of these features. If wed fought any less hard, or lost any more of those battles against unplanned feature changes, we would not have made our ship date. Normally we like to have the game in testing for a week after we hit zero bugs, to make sure that there arent any lingering, hard-to-detect problems. We didnt have that luxury on this project. A week before our final date to submit we still werent at zero bugs. All we could do was be careful during this week with our fixes: access to SourceSafe was restricted; the team was admonished that they mustnt fix any more lowpriority bugs, lest they introduce a stop-shipment bug; and we did informal inspections on all source changes. When we finally hit zero bugs, we worked overnight to get the burns out and submitted the next morning."
676,Treyarchs 2002 hit Spider-Man,2013,https://www.gamasutra.com/view/feature/194852/postmortem_treyarchs_2002_hit_.php,Spider-Man,console pc,action platformer,single,management-people,team," Some of our other problems can be traced back to staff size. When the project started, we had about four programmers, four game designers, three modelers, one texture artist, one producer, and one creative director. NGL was only in our imaginations at this point. Treyarch was eagerly looking for more staff, but staff doesnt just come out of thin air. Most important, we didnt have a concept artist, we didnt have a writer, and we had so many people working on the proof-of-concept that we didnt really have someone to come up with a full design. Later, when we rolled into full production of our inadequate design, things got even worse, because some of our veterans were taken away to work on other projects, without adequate replacement. Eventually we were fully staffed and then some; we had more than 40 people at points during the project, and more than 50 worked on it at one point or another. We had to make up in the end for what we lacked in the beginning."
677,The Chinese Rooms Amnesia: A Machine for Pigs,2014,https://www.gamasutra.com/view/feature/218372/postmortem_the_chinese_rooms_.php,Amnesia: A Machine for Pigs,console pc,action,single,production,design,"The disagreements between TCR and FG regarding how challenging the game should be, both in terms of enemy encounters and in terms of puzzle-solving, resulted in the difficulty of the final game being much too easy. Once again, TCR should have been much firmer in defending the game that they wanted to develop, but they conceded too many alterations that resulted in much of the games difficulty being suppressed. This impacted a number of scenarios in the game. (...) While disagreements between the two companies caused a number of the games difficulty issues, the designs of some of the games puzzles themselves were simply not complex enough from the outset. Once again, some of the games puzzle scenarios suffered from being simplified in order to meet FGs requests. (...) Ultimately, the tasks that players carry out in the game are not to the level that TCR aimed for, both in terms of challenge and novelty, and this has been one of the main areas of criticism from players and critics alike. (...) The issues with the games difficulty were compounded by the games design too clearly telegraphing transitions between ""enemy"" areas and ""non-enemy"" areas. Analyzing the game in light of the player responses online, this is clearly one aspect of the game in which TCR failed. The encounter in the games fourth level, Alley, highlights this division between the two types of gameplay in the game, and sets up an expectation that players then carry forward into the rest of the game. In Alley, players are tasked with filling a fuel can with fuel in order to move a truck that is blocking their path. While filling the can, the player comes close to being attacked by an enemy Wretch, but the Wretch is unable to break through the nearby door to reach the player. This scenario has suggested that players will not be attacked whilst completing ""puzzle"" objectives, and thus eliminates the tension from future puzzle scenarios."
678,The Chinese Rooms Amnesia: A Machine for Pigs,2014,https://www.gamasutra.com/view/feature/218372/postmortem_the_chinese_rooms_.php,Amnesia: A Machine for Pigs,console pc,action,single,production,documentation,"While FGs milestone requests were detrimental, the development also suffered from TCRs lack of detailed project schedule. While the team were fully aware of the major tasks that needed completing at any given time, and were adept at prioritizing appropriately, there was no central documentation that kept track of tasks, internal milestones or game bugs. This led to a lot of additional communication being required in order to discuss tasks that needed completing, as well as some less critical tasks consistently being overlooked. The lack of a centralized bug database meant that the final testing phase before release needed more time as there was no record of outstanding bugs or of those previously identified and fixed."
679,The Chinese Rooms Amnesia: A Machine for Pigs,2014,https://www.gamasutra.com/view/feature/218372/postmortem_the_chinese_rooms_.php,Amnesia: A Machine for Pigs,console pc,action,single,production,tools," Much of the players interaction with the machine is reduced to button presses, lever pulls and valve turns. Partially, this was a limitation of the HPL2 engine in not being designed to support large, complex set-pieces; however this could have been worked around more effectively had time been allowed. (...) The capabilities of the HPL2 engine and the existing AI system also contributed to the telegraphing of different gameplay sections. Having enemies stalking the player through tight, claustrophobic corridors and rooms filled with various debris and other obstacles was impossible within the limitations of the AI system, meaning enemy encounters had to be moved out into larger rooms and wider corridors. This resulted in players being able to identify likely areas where enemies may be lurking simply based on the level architecture, and this again detracts from the games ability to instill fear and anxiety in the player."
680,The Chinese Rooms Amnesia: A Machine for Pigs,2014,https://www.gamasutra.com/view/feature/218372/postmortem_the_chinese_rooms_.php,Amnesia: A Machine for Pigs,console pc,action,single,production,bugs,"The lack of consistent communication between TCR and FG also meant that when TCR handed over the final build to FG for the final phase of testing, optimization, and polish before the games release, some fixes for critical issues were removed and thus didnt make the initial release version. For example, the color grading process carried out by the TCR art team had drastically changed the look and feel of the games lighting. However, as discovered later, the calibration on the monitor used during the color grading process was corrupted and thus the version initially sent to FG was graphically compromised -- the blue ""fog"" that was noted by a number of players in the initial days following release. TCR implemented fixes for this mistake resulting in the color grading being as intended. (...) However, because these changes were not well communicated between the two companies, changes made by FG during the final stages of development resulted in these fixes being reverted and the game shipping with a visual ""Class A"" bug. The results compared to a fixed build are readily apparent when placed side by side, most notably in the games earlier levels. While this has been fixed in a later patch, the game should not have been released with the color grading system in this condition."
681,The Chinese Rooms Amnesia: A Machine for Pigs,2014,https://www.gamasutra.com/view/feature/218372/postmortem_the_chinese_rooms_.php,Amnesia: A Machine for Pigs,console pc,action,single,production,prototyping,"The games puzzle scenario design and indeed all of the main issues that are discussed in this part of the postmortem stem from poor project scheduling and a mishandled prototyping phase of the project. While FG provided TCR with a high degree of creative freedom in terms of the games content and design direction, the deliverable milestones requested were much less flexible. The first deliverable FG requested was a near-complete version of the games Cellar level (the third level in the final game), which would demonstrate all of the major components of the game, such as puzzle design, enemy encounters, art direction, the infection system and narrative delivery. Meeting this first milestone prevented TCR from grey-boxing the full game at this critical early stage. (...) FGs lack of prior experience acting in a production role is difficult to say. However, it is likely that having a full grey-boxed version of the game early on in development would have made later decisions much simpler and quicker to make, as well as giving TCR a much better idea of the pacing of the game from start to finish. Critically, this complete version of the full game would have allowed much easier mapping of key events, such as enemy encounters, rather than attempting to implement such events while levels were in the process of being fully built, or worse, after they had been built. The lack of a full grey-boxing process, and thus no rapid prototyping of the games core systems meant that even 6 to 7 months into development, the mechanics of the game (such as the infection system) had not been signed off, nor were they in a state to be signed off. While the games narrative and environments were predominantly confirmed at this stage, the mechanical core of the game suffered severely from mistakes in the early stages of development. This noticeably followed through to the final released game, which is much weaker mechanically than it is in terms of aesthetics and narrative. Lastly, a full grey-box of the entire game would have highlighted very early on the issues that were encountered later regarding frame rate drops linked to the number of physics objects being used in a level. This would have allowed design work to be carried out with this limitation in mind from the start, avoiding the need to implement the workaround of making a high number of previously interactive objects static -- something that been criticized in a high number of critical and player reviews."
682,The Chinese Rooms Amnesia: A Machine for Pigs,2014,https://www.gamasutra.com/view/feature/218372/postmortem_the_chinese_rooms_.php,Amnesia: A Machine for Pigs,console pc,action,single,management-people,communication,"There was a level of naivety on both sides of the collaboration between TCR and FG, as neither company had worked in such a collaborative scenario previously. While the creative freedom provided was welcomed, the hands-off approach taken by FG may also have caused some of the apparent misunderstandings and contradictory feedback that TCR received on deliverables. Many areas of the game were reworked two, three, or even more times based on different and often conflicting feedback on deliverables. Some of these reworked areas are much stronger because of this back and forth between TCR and FG, however in some situations it is evident that TCR should have been firmer when defending their initial design decisions."
683,The Chinese Rooms Amnesia: A Machine for Pigs,2014,https://www.gamasutra.com/view/feature/218372/postmortem_the_chinese_rooms_.php,Amnesia: A Machine for Pigs,console pc,action,single,management-people,team,"The lack of dedicated marketing staff was certainly a problem for TCR, and it is likely that a more consistent drip-feed of media throughout development would have been a better strategy in keeping interest higher. "
684,The Chinese Rooms Amnesia: A Machine for Pigs,2014,https://www.gamasutra.com/view/feature/218372/postmortem_the_chinese_rooms_.php,Amnesia: A Machine for Pigs,console pc,action,single,business,marketing,"While this is in the ""What Went Wrong"" section, early marketing by FG in the form of an Alternate Reality Game (ARG) served to generate a lot of interest both amongst the established Amnesia fan base as well as across a selection of other websites and discussion forums. However, from this early success later media releases were too few and too far apart given the extended development time and delayed release. This was very much a problem of balance from TCRs perspective. On the one hand, the creation of additional trailers or the release of other teaser media would have maintained interest and maintained the good will of patient fans. On the other hand, the creation of such media requires time, and with no dedicated marketing staff, this time would have been drawn from the core development team, thus causing further delays in the development and release of the actual game. Furthermore, releasing more media risked giving away too much of the game and thus spoiling the eventual enjoyment of it for players. (...) The early release of a review copy to YouTube personality Pewdiepie was an unexpected decision by FG made without TCRs knowledge, and demonstrates the difference in aims for the game between the two companies. Pigs was intended from the outset to provide a different approach to gameplay than that offered by The Dark Descent and this style was far less conducive to the Lets Play audience, requiring direct engagement with the game itself in order to get the most back from the experience. It was expected that Pigs would likely appeal to a smaller number of players seeking a deeper level of narrative engagement, rather than the likely wider appeal of The Dark Descents more action-heavy gameplay. Thus, this marketing decision was a poor match for the game it was intended to market, as was demonstrated by the responses of the core Amnesia fan base, many of which were as confused by the decision as TCR were. Fortunately many players chose to avoid watching the early footage so as to avoid spoiling the game before they had bought it. However this marketing decision remains an odd decision by FG given the highly successful start to the marketing campaign through a more cryptic, cerebral channel in the form of the ARG."
685,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,production,tools,"Dead State was made using Torque 3D both because of the lead programmer’s familiarity and because it was cheap/free – and unfortunately, like most engines, it does not natively support the tools and features needed to create RPGs. While we originally planned to use Iron Tower’s tools to speed up development, we ended up tweaking or creating new ones specifically for Dead State. While it was nice to have separate tools to do what we wanted, we had to take time not only to concept each one design-side, but build it programming-side, troubleshoot it QA-side, and start it all over again if we ran into any issues or new needs. Major features, such as character Perks and Traits, were often significantly delayed because the toolset needed to create them had run into a snag. Torque is decent for making PC games, but is an older engine, and not exactly state of the art, or a great fit for Mac/Linux/console ports. Sticking with Torque 3D instead of switching to Unity early on was a big mistake, and the lack of ability to easily port the game impacts our ability to profit off of potential future ports. When choosing your tech, make sure it’s not only right for your game but for potential expansions or different systems down the road. In the future, we’ll try to rely on out-of-box systems more, or make sure that we have a stronger custom infrastructure before attempting to create a significant amount of content with it."
686,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,production,technical,"Dead State was still implementing some of the game’s features very late in development -- although to be fair, many RPGs struggle with this because of their complexity. For future titles, we’re developing tools to iterate quickly to get to Alpha earlier in the process, then using the back end of development to polish or enhance the existing content."
687,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,production,prototyping,"Get the game design up and running as soon as possible. Stub in temp art menus. Use temp art to test concepts. If it’s not fun with temp art, revamp it -- art is great, but it’s not going to magically make design fun. If your systems/GUI demands are getting too complex, cut some. Figure out your time remaining and team size, then scale the rest of the game’s scope to the production time you have remaining. These may sound like common sense ideas, but we definitely fell into the trap of trying to get the project looking like a full game before it was ready for it."
688,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,management-people,crunch-time,"Dead State could have used twice the number of team members than we had for its development, which meant lots of time crunching to meet deadlines. Our future titles will be built on the team size we have the budget to support. For now on, we will cut or revise anything that needs major crunch to get implemented."
689,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,management-people,communication,"Communication breakdown can happen even when everyone is under the same roof, but when you’ve got a team spread out over multiple time zones, the odds are pretty good that communication will break down. And it did. There was an inherent difficulty in tracking progress: Sometimes emails wouldn’t be answered for 24 hours, builds would hit a major snag and need to be reuploaded, or critical bugs wouldn’t be fixed for a day. Without the team in the same room, meetings went overlong, issues took more time to explain, and momentum/excitement about progress was less tangible. New builds would not always go out on a timetable that was helpful for the Seattle team, where the majority of DoubleBear team members were located. A large amount of gatekeeping of certain systems and code exacerbated delays greatly, and frequently, team members would have to log on at early/late hours to discuss work or fix a bug. We improved communication over time, but many of our delays can be attributed to communication issues and not having a centralized team. If you’re going to use remote team members, make communication a top priority and prepare for the issues that it can cause. (...) Dead State could have benefitted from more team interaction and lead meetings. For our next project, we have already adopted the process of meeting as a group and going over the design and builds together, with lots of opportunity for team feedback to be considered during the early stages. Even if you work remotely, as DoubleBear does, it is intensely helpful -- even vital -- to try and meet on a regular basis, even if you must use stand-ins like Skype if you cannot meet in person."
690,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,management-people,team,"Most RPGs I have worked on have had a minimum of about 25-30 people working on the game for most of production, while Dead State only had about 8-10 at any time. Without the ability to bring on additional team members, it meant a lot of us were working extremely long hours and were wearing multiple hats throughout development. (For example, for most of the project I was the only fulltime designer, the project lead, the business guy, the level lead, the lead writer, the systems and combat lead, and an additional scripter.)The lack of additional personnel slowed the development of key systems and created bottlenecks for both the creation/refinement of those features, and for getting feedback from key team members."
691,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,management-feature,feature-creep,"There are over 45 allies in the game, with 6 to 30 branching dialogues for each ally. The amount of dialogue added up quickly and took a lot of time to write, script, and revise, especially when it was done by two designers that also had to oversee other systems. The biggest problem stemmed from our allies being around the shelter for a period of up to 85+ days of game time. There was definitely a player (and reviewer) expectation that the allies should have had dialogue refreshed nearly every day, or that they should have as much to say as companions in other RPGs. However, most RPGs spread their companion dialogue and reactivity over 8-10 companions or non-playable characters, and update it in stages according to a set of linear plot points (another thing that Dead State, by and large, happened to avoid). By the end, Dead State was already pushing the 15,000 line count with our massive cast, and that’s not even counting combat/reactive barks. While I think we did a great job making the allies diverse and as interesting as we could for their screen time, I can honestly say I would never recommend anyone attempt to have 45+ companions in your game unless it’s going to be a very short game."
692,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,management-feature,budget,"Almost everything in game development comes down to money. Money buys additional team members or experienced team members, which in turn shaves time off the production and potentially helps create a better game. While we did well on Kickstarter and budgeted accordingly, it was only enough money to keep the team on the small side. (...) We planned the game around the Kickstarter budget, without making the mistake of counting on Early Access to prop us up if we got into trouble. If we had a budget closer to some of the other bigger RPGs released in 2014, it would have allowed us to hire on a few more seniors earlier in the process, and allowed for B-teams to help build out, test, and polish the game. While we were able to achieve an impressive scope for the project, we definitely had to work with the base of what we could afford. Most reviewers called us out on the lack of activity in the Shelter or the turn-based combat not being interesting enough, and while we would have liked to have done more with them, we simply did not have the budget to make those features happen."
693,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,business,marketing,"Don’t announce until you’re much closer to release. You risk losing momentum for sales and patience from fans. And even though the final push of development can take a lot out of a small team, leave some dev time to promote the game. Some games are only going to get a press bump when they announce, so you need to capitalize on that hype closer to release or you may be forgotten or written off as vaporware if you announce too early. (...) Press, for the most part, seemed to want to compare the features of the game to much higher-budget RPGs and strategy games, and dinged us for not having stylized/better graphics, not adding a cover mechanic 8/9 or interrupts (basically not recreating XCOM’s most recent iteration from 2012) to combat, and not having even more frequent dialogue interaction and animation in the Shelter portion of the game. The general “zombie fatigue” of the press definitely did not help get us much in the way of release coverage, and we found it fairly difficult to get attention by traditional press outlets, despite the focus of the game being anything but another zombie-killing game."
694,DoubleBears Dead State,2014,https://www.gamasutra.com/view/news/236847/Postmortem_DoubleBears_Dead_State__Controlling_scope_in_an_RPG.php,Dead State,pc,rpg,single,business,monetization,The budget was the bare minimum needed and the game has thus far sold on the lower end of our projections
695,"Jetpack High sur iOs, Android et Black Berry",2014,https://www.gamasutra.com/blogs/ThibautAubrun/20140925/218511/Postmortem_Jetpack_High_sur_iOs_Android_et_Black_Berry.php,Jetpack High,mobile,platformer,single,management-feature,budget,"Research funding is impossible if you are not a company. Im sole proprietorship and in this case the doors are locked and publishers are more cautious. To finance the production I also wanted a publisher early.In March 2012, when a prototype is beginning to be playable, I approach publishers of mobile games. I first searched on the playstore the industry leader and I contacted publishers.I could also find lists on different websites. Most wanted a completely finished product before deciding and do not want to invest in this concep.t"
696,"Jetpack High sur iOs, Android et Black Berry",2014,https://www.gamasutra.com/blogs/ThibautAubrun/20140925/218511/Postmortem_Jetpack_High_sur_iOs_Android_et_Black_Berry.php,Jetpack High,mobile,platformer,single,business,marketing,"Eggball-games was ready to edit the game and promote it but it closed its doors in April 2013 after a liquidation and therefore I had no publisher. I let go of anything and I went Jetpack High Android the 3rd July 2013 and the iOs version on August 20, 2013 . I was totally new to the marketing of video game and I made a few mistakes . Jetpack High was released on January 21, 2013 on BlackBerry without special promotion.But I could benefit from increased visibility from a brand new store and a bit empty and label Built For BlackBerry. Moreover, the game was almost always at the top of the best free games and BFB in the category best free games. With this successful launch, I released Jetpack High on Android in July 2013 in the same way. Or Google Play Store is a jungle.You should know that when you leave a game on Play Store you have 30 days to appear in the category of best new games. Once you have achieved this top ranking you must successfully enter the top of the best free and paid games. Otherwise you disappear in the depths of the store. I spent a lot of time on the forums to announce the game which I think is a waste of time. I also contacted several sites offering reviews and previews. Most will ask between $ 50 and $ 300. Do this only if the rank of the site is good. For that use the Alexa rank and page rank for your choice.Its pretty long and I m not sure of results. However link contacts on sites with large audience that they do not necessarily ask you a contribution.If they like the game then they will talk about it. Prepare your press releases and send them to these sites and news sites ( gamespress , blues news , ... ). One thing I did not do that and I would recommend is to have in the month of your output to a store, a large boom downloadH. ow ? Well using the banners but not just any. Facebook and Admob does nothing on the short term and are very expensive.$2 to $4 CPI ( cost per install) for $100 used. However use services such as Heyzap or Chartboost can listen much cheaper (about $ 1.5 CPI) and is much more focused player with more potential ROI. You can also use appbrain that is cheaper but user acquisition is not as good for the retention. Or you can find a partner like App of the Day.This is a service that costs a little expensive but, if properly used, can bring your game in the top of the news very quickly. In this case it can be the jackpot. This marketing stage has taken me from September to late October for a very poor result. I contacted about 100 sites in English, French 30 sites to 10 published news. I posted about 35 specialized forums in Android and iPhone video games without actually feel influence."
697,"Jetpack High sur iOs, Android et Black Berry",2014,https://www.gamasutra.com/blogs/ThibautAubrun/20140925/218511/Postmortem_Jetpack_High_sur_iOs_Android_et_Black_Berry.php,Jetpack High,mobile,platformer,single,business,monetization,"Monetization of the game was not what was expected. I have read that 1% to 5% of players buy something in gameshere. I think these numbers are only valid for the best games with the best monetization. For Jetpack High monetization is of the order of 0.1%. Based on this observation it is no longer 2,000,000 players I should aim to monetize my game but 40 million players. I feel bad because when I write these lines I am about 300000 downloads."
698,Pinball RPG hybrid Rollers of the Realm,2014,https://www.gamasutra.com/view/feature/233340/postmortem_pinballrpg_hybrid_.php?page=2,Rollers of the Realm,console mobile pc,action adventure puzzle,single,production,design," We took a big risk in combining two very different game forms. We didnt expect to satisfy hardcore pinball or hardcore RPG fans -- we figured the game would appeal to mid-core gamers. Based on early reviews, opinion differs greatly (weve got superfans, haters, and everything in between). Were not sure if trying to find a new audience with this mash-up was the best way to go for our first major title. As mentioned in our what went right section, our playtesting provided valuable insight for balancing and audience appeal, but the testing was mostly limited to the first few chapters. We misjudged the games difficulty curve and the willingness of players to solve some of the games strategy puzzles or manage party members and their upgrades. On its face, the game appears to be similar enough to pinball -- many people believe anyone can play pinball, and this is true -- but mastery is another story. Our game doesnt look like it requires a lot of skill, but it does. Our final boss battle was, for most players, punishingly hard. To add insult to injury, failing the last boss in the series could cost about 30 minutes of time and a replay of the entire battle. This left a sour taste for many players and reviewers. We added checkpoints in the final battle in an early patch for Steam and hope to bring this and other improvements to the Sony platforms soon. Our System Failure didnt make it easy on ourselves to tune the overall balance, let alone do it remotely (via external data, which would have allowed us to nerf a few things without patching). We wont be making this mistake in future projects (this is something weve already institutionalized)."
699,Pinball RPG hybrid Rollers of the Realm,2014,https://www.gamasutra.com/view/feature/233340/postmortem_pinballrpg_hybrid_.php?page=2,Rollers of the Realm,console mobile pc,action adventure puzzle,single,production,technical," We ended up with a wide variety of character stats and abilities that sat on the separate character objects. When we got production funding, we planned to beef up stats and abilities, but never took a step back to look at what we had -- we were planning to add and work them all into a cohesive externalized system. This made design, implementation, testing and balance more difficult, but we only realized our mistake when it was too late to change it. This even haunted our UI process -- it made our Port (where you hire characters and upgrade them) UI/UX a challenge, and we went through several major versions. Our final version is the best of the bunch, but were still not 100 percent happy with it. Most of the games major systems arent wired up to external data sources, and are pretty hard-coded, so we were never able to implement a difficulty system or tweak game balance remotely. Future games wont get past prototyping without a nice neat external data system. battle was, for most players, punishingly hard. "
700,Pinball RPG hybrid Rollers of the Realm,2014,https://www.gamasutra.com/view/feature/233340/postmortem_pinballrpg_hybrid_.php?page=2,Rollers of the Realm,console mobile pc,action adventure puzzle,single,production,prototyping," We were eager to move from our original 6-month prototype into full production -- maybe too eager. We front- 7/10 loaded resources to try to overcome our potential Unity learning curve, but everyone picked up Unity so quickly we ended up with a bottleneck in programming. Our designers were waiting to port over workable ideas to the Unity project from our XNA prototype and our creatives had to wait to test content before the basic framework was in place. We pushed ahead with design before the core set of scripts and combat system was complete, which contributed later to awkward workarounds (both in design and programming) that were difficult to QA -- many of these were redone from scratch when the system was completed, which ultimately was a waste. Obviously some better production planning and resourcing could have helped here. Throughout the course of the entire project, we created a number of demos related to industry events such as GDC, and sometimes ended up rushing features that we later wouldnt have time to properly polish. In the future, well plan our production schedule around key demos. On the design side, our team worked through the game in chronological order, which meant the first half of the game got the most polish and finesse (as well as the most audience testing / feedback) whereas the last half of the game didnt get as much love. We might have solved some of this by picking the star levels from each chapter and working on those first, then filling in the gaps later."
701,Pinball RPG hybrid Rollers of the Realm,2014,https://www.gamasutra.com/view/feature/233340/postmortem_pinballrpg_hybrid_.php?page=2,Rollers of the Realm,console mobile pc,action adventure puzzle,single,management-feature,scope," It took almost exactly three years from conception to launch worldwide on all platforms. While a long production cycle proved necessary, it also gave time for issues to bloom. We had planned to launch the PC version of Rollers in late 2013 / early 2014, but we pushed this when we partnered with Atlus USA and added two additional launch platforms (PS4 & Vita). Having the production timeline stretch out meant Rollers rubbed against the work-for-hire projects that we lined up because we need to keep the studio lights on. We needed to split our resources into two project teams. Phantom Compass often works on multiple projects at once, and in many ways this is a strength, but in this case it caused more strain on finishing up Rollers than we would have liked and hurt our ability to polish. Staffing was also challenging: From our original six-month concept through to finding financing for the full game we lost many of our original team members as they found full-time industry jobs. Onboarding dozens of parttimers and contractors in the early days of our prototyping was an expected, but nevertheless a strain. Our lead programmer position was also a bit of a revolving door, with four lead programmers coming on and off the project over the development cycle. This cost time in bringing each replacement up to speed and resulted in legacy code kicking around that they were wary of removing. We really couldnt avoid the long development cycle for this project, but there is value in keeping them shorter when possible."
702,Friends forever: The story of Sportsfriends,2014,https://www.gamasutra.com/view/feature/216912/friends_forever_the_story_of_.php,Sportsfriends,console pc,sports,multi,production,design,"""Very early on, it was me, Bennett, and Ramiro thinking, like, What should this compliation be?"" says Wilson. ""Super Pole Riders and Hokra were the two confirmed games. Originally, I thought it should be more than four games -- which I was definitely wrong about. A few people, including Bennett, talked me down from that, saying it would devalue them if we put too many in the package"". ""I thought Wii Sports has five, maybe we should have five. But actually these games are pretty meaty -- so four at most, otherwise you start losing track of the games you have"". So it was decided - Sportsfriends would have four games. But this meant that the team still needed two more games, and the big problem was that, well, there arent really that many sports-related games out there, especially indie ones. In fact, it took nearly another year before the third game was added to the package. (...) ""We were all super hooked on TENNNES"", continues Wilson. ""Its really pretty incredible. But JW was pretty burnt out from Ridiculous Fishing and all his Vlambeer stuff, and he was like, I cant commit to this. He foresaw how much work this was actually going to be for everyone involved. (...) ""So then we had a few ideas for the fourth game, but nothing was really sticking"", says Wilson. ""We didnt really just wanna do just general-purpose local multiplayer -- this was even before we had the name Sportsfriends."" (...) Sticking with the sporty theme meant that more months dragged on, and no fourth game was showing its face. Then, as the summer was drawing to a close, final Joust publisher negotiations fell through, and Wilson said, ""Screw it, were gonna throw in Joust"" -- thus, the package was complete."
703,Friends forever: The story of Sportsfriends,2014,https://www.gamasutra.com/view/feature/216912/friends_forever_the_story_of_.php,Sportsfriends,console pc,sports,multi,production,technical,"This was Jousts core problem -- people seemed to love it when they got their hands on it, but it was a hard sell when it came to actually releasing it. How many people would buy a local multiplayer only game that required multiple PS Move controllers? (...) As it turns out, development and porting -- far longer than any of them were expecting. The menu design for connecting the games together turned out to be difficult, while porting the games was also not so simple, especially given that all four games were written in different engines. Super Pole Riders in particular took a fair amount of time, as Foddy decided to completely rebuild the game from the ground up. ""I basically rewrote the game,"" he says. ""I felt like I had this opportunity, and you dont get that when youre writing Flash games."" ""I just kinda wanted to reinvent the whole thing,"" Foddy adds. ""New art, new levels... but I think most importantly, the ability to point the pole anywhere that you want -- so you can stand up on the end of it, or use it to push the ball, or jump around on it, or hold the other person down. There are all these actions you couldnt do in the original. So that was the kind of reason for that. I had a vision for it which, just for technical reasons, I couldnt pull off the first time around."
704,Friends forever: The story of Sportsfriends,2014,https://www.gamasutra.com/view/feature/216912/friends_forever_the_story_of_.php,Sportsfriends,console pc,sports,multi,management-people,communication,"""Its a pretty weird choice, to be honest"", muses the dev. ""This has been a big messaging problem for us. Joust is this physical installation game, but the other games are couch games. So then some people think that all the games are motion-control games, which isnt true. Then the people who want BaraBariBall and Pole Riders probably think Joust is this weird, dumb kids game"". (...) Of course, internet forums and comments sections are already filling up with people complaining about the lack of online play. ""And we know were going to face that"", notes Foddy. ""But for me, the whole point of the project is to recreate the feeling that we had at those events, which was super significant for us, and for other people as well"". ""What were trying to do is open peoples eyes to something that is new. Video game fans have found what they love and enjoy, and I think they feel threatened by people who are trying to change what video games are, and what they mean. Theres a certain kind of defensiveness, which is sort of understandable at one level"". But what were hoping is that the games themselves will be convincing enough, that after a struggle, friction, a kind of argument with those people, well win them around with the way that you feel -- the joy that you can have when youre playing these sorts of games"". (...) The team is wary of appearing defensive on this stance, giving players the impression that online could have been implemented, but the developers just didnt because it would be additional work. The fact is that most of the games wouldnt even work as online experiences. ""Weve been talking about doing a video of us playingJoust online, standing in different rooms, dancing around by ourselves"", laughs Foddy. ""I hope that point will be obvious to people, but maybe it wont be. Well see""."
705,Friends forever: The story of Sportsfriends,2014,https://www.gamasutra.com/view/feature/216912/friends_forever_the_story_of_.php,Sportsfriends,console pc,sports,multi,management-feature,planning,"""In retrospect, I wasted way too many months,"" Wilson admits. ""Thats part of the reason development got stalled. I was also finishing up my PhD at the time, so I wasnt paying attention to the games development"". (...) ""But it was weird,"" admits Wilson. ""The contracts were weird, and we were sort of in uncharted territory. Our project has been crazy in every aspect. As if console development isnt tricky enough, in so many ways this project does stuff thats not traditional. Weve had to fight through a lot of weird bureaucratic snags. But luckily Nick and those guys have helped guide us through it."""
706,Friends forever: The story of Sportsfriends,2014,https://www.gamasutra.com/view/feature/216912/friends_forever_the_story_of_.php,Sportsfriends,console pc,sports,multi,business,marketing,"The Kickstarter itself was a bit of a nail-biter. While the pledges started coming in thick and fast to begin with, it all sort of died down pretty quickly, and suddenly the funding goal seemed like quite a way to go. With days left, there was a final boost and Sportsfriends was clear -- but only just. ""I think we could have done a bit better job with the videos"", says Wilson, ""but I think its just a really weird project thats hard to convey. It was one of these cases where the core games were proven and designed, and we had toured them aggressively. So it was this kind of underground thing, where the games had a very passionate fanbase""."
707,Starting From Scratch: Haemimont Games Tropico 5 postmortem,2014,https://www.gamasutra.com/view/news/237667/Starting_From_Scratch_Haemimont_Games_Tropico_5_postmortem.php,Tropico 5,console pc,strategy,multi single,production,design,"Two months later we had a working prototype. It was different, it was interesting, there was definitely a nice new simulation game somewhere there. Only one problem - this game didnt feel like Tropico. Not to us and not to our publisher. Turns out that by tweaking our core mechanics weve strayed too far away from the franchise roots and were on our way towards making a game that just wouldnt feel true to the series. We talked a lot, took a cold shower and 3/4 decided to scrap almost everything and revert to the individually simulated units, only this time implementing them smarter than before. There was a lot of good work thrown away, but when you are making a sequel you cant afford to make a product that doesnt feel true to its predecessors. (...) Tropico 5 is the first game in the series that features a multiplayer mode. True multiplayer in a citybuilder/simulation game is still a rare sight, so we were exploring largely uncharted territories with this feature. (...) The Dynasties were another major new feature that had to go through a few re-designs to fit with the game. It turned out to be one of those ideas that sound good as a concept on paper, but are difficult to pull off in practice. The Dynasty is the extended family of the ruler of the island. It consists of several individuals with their own traits and quirks that can either rule the island or be assigned as directors to one of the buildings on the island. They gain skills, go through all sorts of wacky events and generally create trouble and drama for game designers."
708,Starting From Scratch: Haemimont Games Tropico 5 postmortem,2014,https://www.gamasutra.com/view/news/237667/Starting_From_Scratch_Haemimont_Games_Tropico_5_postmortem.php,Tropico 5,console pc,strategy,multi single,production,technical,"Still, we underestimated the challenge of adding a multiplayer to a game that is not naturally built around multiplayer. Too often our test games felt like we were playing single player on the same map, so weve added a bunch of diplomacy actions that allowed the players to interact with each other, share resources, workforce, and money. There were a bunch of technical difficulties as well. Multiplayer development took way more resources than anticipated, even post-release. We were fighting bugs that caused asynchronous states of the game between players. We had to implement some anti-cheating code in a patch. We also had to address the problem of mods that made synchronous multiplayer impossible. (...) Tropico 5 is developed for multiple platforms - Windows, Linux, OS/X, Xbox 360 and PlayStation 4. It is our first game for PlayStation 4. We faced a unique set of challenges for each platform we targeted. For the Xbox 360 those were the challenges we knew from previous projects - say, optimizing the frame rate and loading times within the given hardware constraints of the platform. It was not an easy task, but we knew what to expect on that front. In contrast, PlayStation 4, our new platform, was terra incognita for us. Knowing that the game already runs on Xbox 360, we severely underestimated the challenges of going next-next gen. Figuring out how our code will interact with the foreign code, double-checking and reading documentation at every step, familiarizing ourselves with new certification requirements, all of those took way more time than we anticipated. Starting with only two dev-kits also didnt help matters. We finally emerged from PS4 development with a hard-earned lesson. It doesnt matter that your game works just fine on those old consoles and low-end PCs. You will face many, many challenges that are not related to memory limitations and processor power. Going to a new platform is always a huge challenge and should never be underestimated. (...) Weve created enough city-building games to know that two numbers matter very much to our players - map size and population cap (which also translates to buildings cap, since most of our buildings have to be staffed to work). Weve set the population cap at 2000 on PC - more than that and we wouldve had serious performance issues on low-end platforms. It sounded more than enough! To finish the campaign you rarely needed to go above 500 citizens anyway and we doubled the number from Tropico 4. Still, our fans were disappointed; (...) We decided that it is better to deliver late than never and patched the game with an option that allowed players to increase the population cap up to 10000 at their own risk."
709,Starting From Scratch: Haemimont Games Tropico 5 postmortem,2014,https://www.gamasutra.com/view/news/237667/Starting_From_Scratch_Haemimont_Games_Tropico_5_postmortem.php,Tropico 5,console pc,strategy,multi single,production,testing,"Another thing that we miscalculated was how hard it was to support the game updates and the DLC content across all the platforms. Even tracking all the different versions was a challenge, our QA needs increased exponentially and a little change could trigger the Tropico Butterfly Effect, having huge and unexpected impact on a specific platform."
710,Starting From Scratch: Haemimont Games Tropico 5 postmortem,2014,https://www.gamasutra.com/view/news/237667/Starting_From_Scratch_Haemimont_Games_Tropico_5_postmortem.php,Tropico 5,console pc,strategy,multi single,production,bugs,"After all the good things I said about our decision to dump the old game code and design and start from scratch for this sequel, let me confess that there were several negatives attached to this decision. When you start on a blank sheet, you are more likely to make mistakes. Not the minor mistakes that are part of the daily life of a developer; but big costly mistakes worth months of development time."
711,Stardock and Oxide Games Ashes of the Singularity,2015,gamasutra.com/view/news/270965/Postmortem_Stardock_and_Oxide_Games_Ashes_of_the_Singularity.php,Ashes of the Singularity,pc,simulation strategy,online single,production,design," This is not just me falling on the sword. For most of the game’s development cycle, I was not available to focus on the day to day design decisions that were needed.I took on the responsibility of lead designer, but because of all of my other obligations and projects, I was unable to focus on it exclusively until Summer 2015 (only 8 months before it shipped). And of course, “exclusively” in my case means exclusive - except for my day job running Stardock, designing products like Start8, Object Desktop, Multiplicity, Sorcerer King, and keeping an eye on all our other endeavors. (...)  This is related to the limited budget, but visual eye candy on the maps like ancient ruins or other props were not considered to be important enough to budget art on. Unlike in other areas where we had endless concept drawings for things like units, buildings, etc, we didn’t even entertain trying to add “fluff” to the maps since they would not have any game-play effect."
712,Stardock and Oxide Games Ashes of the Singularity,2015,gamasutra.com/view/news/270965/Postmortem_Stardock_and_Oxide_Games_Ashes_of_the_Singularity.php,Ashes of the Singularity,pc,simulation strategy,online single,management-people,crunch-time," I was vocally against having any sort of campaign in Ashes of the Singularity. We didn’t have one in Sins of a Solar Empire and I saw no reason to have one in this game either. Despite being a Diamond StarCraft player and having worked on StarCraft: Retribution, I have never played a StarCraft campaign. My concept of the game’s Ascendancy Wars was essentially a large map of the galaxy with dozens of planets with the player and several AI factions trying to conquer it planet by planet. However, during development our friends at Uber had introduced a similar concept into their game, Planetary Annihilation. Combined with Oxide’s strong recommendation that we needed a story-driven campaign and the early access feedback, I reluctantly agreed to have a campaign in the game. Having a campaign was the right decision, but I wish we had planned on having one from the outset so that we would have had more time to flesh it out and polish it. You can see this in the reviews where some reviewers only played the campaign which was designed only as an introduction to the heart of the game: the infinitely replayable sandbox part. On a given project like this, you make thousands of decisions. Not recognizing that PC gamers have come to expect highly polished, story driven campaigns was a mistake. Fortunately, we are in a position to not just update the campaign with voice-overs and more content, we can ensure that future campaigns we add to the game are given the kind of depth that players seem to enjoy."
713,Stardock and Oxide Games Ashes of the Singularity,2015,gamasutra.com/view/news/270965/Postmortem_Stardock_and_Oxide_Games_Ashes_of_the_Singularity.php,Ashes of the Singularity,pc,simulation strategy,online single,management-feature,budget," What I wouldn’t have given to have had more artists. Or, you know, artists. Oxide employs a total of 2 of them. We were able to work with some of the best artists in the industry who gave us absolutely amazing concept art, but we often lacked the manpower to make full use of it for 1.0 due to budget. When Windows 10 shipped with DirectX 12, we knew the game was going to be a winner. Unfortunately, we were so far into the project that a much bigger budget wouldn’t help much. The game was designed around our initial budget."
714,Stardock and Oxide Games Ashes of the Singularity,2015,gamasutra.com/view/news/270965/Postmortem_Stardock_and_Oxide_Games_Ashes_of_the_Singularity.php,Ashes of the Singularity,pc,simulation strategy,online single,management-feature,planning,Our hardware requirements include a 2GB GDDR 5 video card and a CPU with at least 4 cores. Those requirements cut off about half the user base. We knew this going in and it was a price we were willing to pay to make sure we could create a future-proof game. What we didn’t realize is just how rough that would be for us both in terms of Steam reviews (people buying the game with marginal hardware) and game reviews. It was striking how many game sites struggled to find a reviewer who met the system requirements to review the game. This meant that our game didn’t necessarily go out to strategy game experts but whoever could run the game.
715,Stardock and Oxide Games Ashes of the Singularity,2015,gamasutra.com/view/news/270965/Postmortem_Stardock_and_Oxide_Games_Ashes_of_the_Singularity.php,Ashes of the Singularity,pc,simulation strategy,online single,business,marketing," I won’t say we will never do Steam Early Access again. But I will say that I’m not inclined to use it on a game that is using a brand-new engine. Throughout the game’s development, we had to slowly make our way back from a very low Steam Early Access review score. Many users either don’t know or don’t care that “early access” means the game isn’t done. As I write this, post-release, the positive Steam reviews are slowly moving our review score up. But it is not a great situation to start day 1 with “Mostly Positive” and have to try to inch your way back to “Overwhelmingly Positive.” No matter how clear you make the game remind people in Early Access that not all the features are in and that the game will probably have bugs, there is a sufficient percentage of players who will download the game, play it for 10 minutes, find it “unfinished”, give it a negative review, and return it. Even more seriously, we felt locked into our Early Access price. When we started making the game, the price we had chosen was the industry norm. However, since then, the flood of iOS ports and just sheer volume of games showing up on Steam now has pushed down the price people now expect to pay for PC games in general. Thus, our initial $49.99 list price became a significant barrier to entry."
716,Goat Simulator,2015,gamasutra.com/blogs/ArminIbrisagic/20150220/236427/Goat_Simulator_Post_Mortem.php,Goat Simulator,mobile pc,simulation,single,production,design," Workshop support was one of the biggest features we had planned for the release of Goat Simulator. No matter how hard you work, people are always going to be able to play through content faster than you’ll be able to create it, so it just made sense to let players create and share content with each other. It’s worked okay so far, we haven’t stumbled upon any major problems, but we’ve learned that you can’t just put Steam Workshop in a game, ship it, and then forget about it and expect players to run everything by themselves. For example, even though it says on a game’s store page that it has Steam workshop, not all players will see that. Some might see it when they buy the game, but forget about it later. Some might see it, download some mods, then just play them once. There are tons of possible outcomes for players when it comes to how much they will engage in a mod-community. What we could have done better was to promote Steam workshop more without our own game, help funnel more players into actually trying out the mods that are available, and being better at encouraging content creators. It’s become apparent to us that implementing Steam Workshop is just maybe one third of the work, the other two thirds should be continuous community management of the players making the mods, and updating the modding tools and making them easier to use for everybody. If you’re looking to add Steam Workshop into your game, I’d definitely recommend to not just make time for the integration of Steam Workshop into your game, but also for all the programming maintenance and community management around it. Without it, you’ll never reach up to Steam Workshop’s full potential."
717,Goat Simulator,2015,gamasutra.com/blogs/ArminIbrisagic/20150220/236427/Goat_Simulator_Post_Mortem.php,Goat Simulator,mobile pc,simulation,single,production,technical," Our biggest mistake with the optimization was that we didn’t work with it from the very start. We never planned on selling the game on a mass market, so we thought that as long as it ran on our computers, we were fine. However, it became clear to us pretty fast that this was one of the game’s biggest issues. A common misconception is that “if the graphics aren’t super pretty, it’s probably not a very demanding game”. It’s possible that a lot of people bought Goat Simulator and expected it to run on their computers since it doesn’t look like a AAA-game. However, one of the main problem when it comes to performance is the fact that there are so many physics objects in Goat Simulator, which is very taxing on even the strongest computers. So just the coregameplay of the game (crashing into physics objects) is very heavy on performance, especially since the physics need to be turned on all the time. If you accidentally knock a basketball across the map and it hits an NPC in the head and he falls down and knocks a table over, which has 10 other props on it that also need to simulate physics, it easily becomes too much for your computer. We get complaints sometimes that the game lags for no reason, and it’s usually when people are unaware that they start a physics-chain reaction on a part of the map that they can’t even see themselves."
718,Goat Simulator,2015,gamasutra.com/blogs/ArminIbrisagic/20150220/236427/Goat_Simulator_Post_Mortem.php,Goat Simulator,mobile pc,simulation,single,management-feature,scope," Once the requests started flooding in to make Goat Simulator into a real game on Steam and we started scrambling to finish the game until April 1st (because no matter how you think about it, April 1st is a hilarious release date and we just had to release it then). During these stressful months, the last thing on our minds was a mobile port. We had no idea if the game would sell well on Steam, as we were afraid that people would watch the game on Youtube and joke about it, but never buy it for real. We basically thought that we would release it on Steam first, and then if that goes well, we’ll release it on mobile. However, only a couple of weeks after the first video of Goat Simulator went viral, there were already clones on the App Store and Google Play that had millions of downloads. Some people actually thought they had bought the real Goat Simulator, and were emailing our Coffee Stain support mail once their app crashed. We realized that it didn’t matter if we wanted to make a mobile version of Goat Simulator or not, there were already mobile versions of the game out already, whether we liked it or not."
719,Goat Simulator,2015,gamasutra.com/blogs/ArminIbrisagic/20150220/236427/Goat_Simulator_Post_Mortem.php,Goat Simulator,mobile pc,simulation,single,management-feature,planning," Yeah, there were definitely setbacks to having no planning or long-term thinking. One of them was that we had to refactor a lot of programming once we decided that the game was to be launched on Steam. Earlier on, we kind of implemented things in fast-but-bad ways, so now when we implement new things today, we still have to keep in mind all the ugly coding we did earlier in the first couple of weeks of development. When you’re making a joke prototype game where the main character is a goat, you don’t exactly focus on thinking proactively. In hindsight, it’s resulted in a lot of extra work. An example of this is the fact that we never planned on having multiple maps at the start of development, but when we chose to release the game on Steam and later, make a new map for our first 1.1 patch, we had to do a lot of copy-pasting of classes from one level to the other."
720,Postmortem: Deck13 Interactives Lords of the Fallen,2015,http://www.gamasutra.com/view/news/236275/Postmortem_Deck13_Interactives_Lords_of_the_Fallen.php,Lords of the Fallen,console pc,action rpg,single,production,technical,"At the start of the production, technicians were clever enough to set up strict asset limits based on their best estimates. This was supposed to ensure that the artists would not create assets with an insane amount of polygons or use a crazy amount of material layers, slowing the engine down to a point where even technical optimization would not be able to save the day. During preproduction, however, these limits were largely ignored with the argument that we would ""first need to find the right look"" and that we would be able to ""boil the whole thing down later anyway."" But it turns out that if you show people a scene full of great stuff, they will not want to go back to scenes that look more scarce, whatever argument of reason you might offer them (like ""framerate"")."
721,Postmortem: Deck13 Interactives Lords of the Fallen,2015,http://www.gamasutra.com/view/news/236275/Postmortem_Deck13_Interactives_Lords_of_the_Fallen.php,Lords of the Fallen,console pc,action rpg,single,production,testing,"Still, we did not have enough time left for proper beta testing. Even though testing was ongoing and a great QA department at the publisher supported our small internal QA management team all along, there was just not enough feedback on balancing and, even worse in our case, on compatibility."
722,Postmortem: Deck13 Interactives Lords of the Fallen,2015,http://www.gamasutra.com/view/news/236275/Postmortem_Deck13_Interactives_Lords_of_the_Fallen.php,Lords of the Fallen,console pc,action rpg,single,management-people,crunch-time,"That seemed extraordinarily tough, and it was only doable by crunching throughout the final months, to the point where people got so stressed that you could barely talk to them."
723,Postmortem: Deck13 Interactives Lords of the Fallen,2015,http://www.gamasutra.com/view/news/236275/Postmortem_Deck13_Interactives_Lords_of_the_Fallen.php,Lords of the Fallen,console pc,action rpg,single,management-people,communication,"At the beginning of the project, both publisher and developer sides did not feel that it was very important to approach things too formally, and therefore there were (in some areas) no clear hierarchies or responsibilities in place. (...) Throughout large portions of the development time, we were not really good at communicating. While we were not so bad talking internally (well, there still were issues but we had them under control), we were really miserable communicators when it came to publisher discussions. As there wasnt one person channeling all requests and feedback, there were times when it actually felt as if everyone was talking to everyone, without clear rules or structures, resulting in a lot of negative vibrations, confusion, and anger. Basically we had not thought about establishing guidelines for communication, and things only got better when we did so."
724,Postmortem: Deck13 Interactives Lords of the Fallen,2015,http://www.gamasutra.com/view/news/236275/Postmortem_Deck13_Interactives_Lords_of_the_Fallen.php,Lords of the Fallen,console pc,action rpg,single,management-feature,planning,"We tried to counter the lack of a managing producer with building up management power at Deck13, firstly by establishing two-week sprints together with the publisher to have a clear overview of the tasks that were to follow next and to see early enough what would inevitably slip. Still, every sprint basically felt like the team would fail to meet the goals, and people were close to resigning, as they could not keep up with the psychological stress this was causing."
725,Into the asylum: A postmortem of Human Head Studios Lost Within,2015,http://www.gamasutra.com/view/news/252242/Into_the_asylum_A_postmortem_of_Human_Head_Studios_Lost_Within.php,Lost Within,mobile,adventure,single,production,design,"At the start, the story was too long and too detailed. There were too many reveals, too many twists, and too much content to create in order to convey it all. We had to chop down parts of the story, rework reveals, and ensure that the key beats were properly conveyed to the player. Keeping the dialogue comprehensive, natural-sounding, and to-the-point required a lot of unexpected iteration time. (...) But because of how integrated the narrative was to components such as cinematics, level design, and some aspects of game design, delays to the story caused other departments to stall or have to throw out work and redo it when aspects of the narrative changed."
726,Into the asylum: A postmortem of Human Head Studios Lost Within,2015,http://www.gamasutra.com/view/news/252242/Into_the_asylum_A_postmortem_of_Human_Head_Studios_Lost_Within.php,Lost Within,mobile,adventure,single,production,technical,But as the narrative developed we found that the number of cinematics we needed was steadily creeping up. We were also finding that the camera motion and distortions required a significant amount of iteration time to reach the quality bar we demanded.
727,Into the asylum: A postmortem of Human Head Studios Lost Within,2015,http://www.gamasutra.com/view/news/252242/Into_the_asylum_A_postmortem_of_Human_Head_Studios_Lost_Within.php,Lost Within,mobile,adventure,single,production,testing,"Luckily for us, Amazon was in the process of developing a top-of-the-line usability testing lab. (...) Because the usability testing process wasn’t completely in place, everyone spent a lot of time interpreting and acting upon the results. Ultimately, we were all on the same page when reviewing the data and together we determined which feedback was valid and actionable and which could be safely ignored."
728,Into the asylum: A postmortem of Human Head Studios Lost Within,2015,http://www.gamasutra.com/view/news/252242/Into_the_asylum_A_postmortem_of_Human_Head_Studios_Lost_Within.php,Lost Within,mobile,adventure,single,production,prototyping,"Once the prototype is approved, then it should be replaced with a proper system that is typically rewritten from scratch. Due to the rapid pace of development, we began to make use of the prototype game systems, fully intending to go back and rewrite them later. However, once systems -- such as doors -- became entrenched in the game, ripping them out and rewriting them threatened to create wide repercussions for other departments such as level and overall game design. In addition, a full rewrite would have taken too much of a programmers time relative to the remaining tasks/bugs to finish before release."
729,Postmortem: Monolith Productions Middle-earth: Shadow of Mordor,2015,http://www.gamasutra.com/view/news/234421/Postmortem_Monolith_Productions_Middleearth_Shadow_of_Mordor.php,Middle-earth: Shadow of Mordor,console pc,action,single,management-people,team,"One of our major challenges during the course of development was that Monolith Productions condensed a couple of smaller game teams that were finishing products into a large, single team set-up. (...) This meant that new team members had to be integrated together very rapidly, and new production processes had to be re-organized for best efficiency and results. Some team members also had to adapt to working on a new genre."
730,Postmortem: Monolith Productions Middle-earth: Shadow of Mordor,2015,http://www.gamasutra.com/view/news/234421/Postmortem_Monolith_Productions_Middleearth_Shadow_of_Mordor.php,Middle-earth: Shadow of Mordor,console pc,action,single,management-feature,feature-creep,"The Nemesis System started with a fairly simple idea of personal villains, then during pre-production, it went through quite a bit of feature creep which made it significantly more complex and took it further away from the core promise."
731,Postmortem: Monolith Productions Middle-earth: Shadow of Mordor,2015,http://www.gamasutra.com/view/news/234421/Postmortem_Monolith_Productions_Middleearth_Shadow_of_Mordor.php,Middle-earth: Shadow of Mordor,console pc,action,single,management-feature,cutting-features,"We not only had to trust each other in terms of the process of creating the game, we also had no clear benchmarks or data to demonstrate that it would work even once it was created. This insecurity about our core systems led us to direct a lot of effort to peripheral systems such as side activities and even some epic features like a climbable Great Beast that later got cut."
732,Postmortem: Monolith Productions Middle-earth: Shadow of Mordor,2015,http://www.gamasutra.com/view/news/234421/Postmortem_Monolith_Productions_Middleearth_Shadow_of_Mordor.php,Middle-earth: Shadow of Mordor,console pc,action,single,management-feature,planning,"During pre-production, we didn’t have good metrics on our production capacity. This led to the specification of the game being over-ambitious, which as we started to get a clearer picture of reality required us to make some pretty big and painful cuts."
733,"Postmortem: E-Line Media and Upper One Games Never Alone
",2015,http://www.gamasutra.com/view/news/236049/Postmortem_ELine_Media_and_Upper_One_Games_Never_Alone.php,Never Alone,console mobile pc,platformer puzzle,multi single,production,bugs,"We found issues with the system and fixed them. We found triggers that werent set up properly and updated them. And then we did a complete playthrough again and fixed even more issues. (...) Another problem came when it was time to distribute review copies of the game to the European press. At the time, we were still working on the 1.01 patch that fixed some of the big issues we discovered after submission but before release."
734,"Postmortem: E-Line Media and Upper One Games Never Alone
",2015,http://www.gamasutra.com/view/news/236049/Postmortem_ELine_Media_and_Upper_One_Games_Never_Alone.php,Never Alone,console mobile pc,platformer puzzle,multi single,management-feature,cutting-features,"For an upcoming milestone, we spent many weeks building a big, nonlinear village environment that featured multiple questgivers. We added the ability to lift small objects and move them around. And most notoriously, we added a ""catch fish as they jump out of the water to get enough food for the village for dinner"" minigame. Even though it was in service of being stewards of an important culture, that milestone was what we now refer to as ""The Dark Ages"". (...) We went back to basics and returned to the roots of the project, until it started to look remarkably like what was in those original documents. Before we got there, though, a lot of people spent a lot of time on a lot of concepts that were either barely used or cut entirely."
735,"Postmortem: E-Line Media and Upper One Games Never Alone
",2015,http://www.gamasutra.com/view/news/236049/Postmortem_ELine_Media_and_Upper_One_Games_Never_Alone.php,Never Alone,console mobile pc,platformer puzzle,multi single,management-feature,planning,"But over the course of development, we realized that to make the game we wanted to make — and to make the game that was faithful to the culture we were representing — we needed to switch to targeting the Xbox One and PlayStation 4. (...) So we made the call to switch with less than a year before launch, but there was still enough time (barely) to make the transition. (...) Unfortunately, we didnt get the dev kits for another three months — a few weeks before it was scheduled to be playable by the public in Microsofts booth at E3."
736,"NFL RUSH Heroes & Rivals Postmortem
",2015,"http://www.gamasutra.com/blogs/ScottFine/20151209/261443/NFL_RUSH_Heroes__Rivals_Postmortem.php
",NFL RUSH Heroes and Rivals,mobile,sports,single,production,design,"I sometimes think about if I had known then what I know now, maybe I could have worked harder to fix the problems and fought harder for good design choices. Sadly, I can’t. The only thing I can do is take my experience and make sure the same mistakes aren’t made in the next project I get to be apart of."
737,"NFL RUSH Heroes & Rivals Postmortem
",2015,"http://www.gamasutra.com/blogs/ScottFine/20151209/261443/NFL_RUSH_Heroes__Rivals_Postmortem.php
",NFL RUSH Heroes and Rivals,mobile,sports,single,production,technical,A lot of mobile games today have preloaders. This is so app developers can release apps which are larger than 100 mb and not require WiFi for an initial download.
738,"NFL RUSH Heroes & Rivals Postmortem
",2015,"http://www.gamasutra.com/blogs/ScottFine/20151209/261443/NFL_RUSH_Heroes__Rivals_Postmortem.php
",NFL RUSH Heroes and Rivals,mobile,sports,single,management-people,team,"This one was to be smaller and more family focused. So Heroes and Rivals was meant to be targeted at a hardcore football fandom, while GameDay Heroes was meant to be played by families in one room. This split the team."
739,"NFL RUSH Heroes & Rivals Postmortem
",2015,"http://www.gamasutra.com/blogs/ScottFine/20151209/261443/NFL_RUSH_Heroes__Rivals_Postmortem.php
",NFL RUSH Heroes and Rivals,mobile,sports,single,management-feature,scope,"Had we done only one app or the other, we probably could have released a truly polished experience. Instead, we scoped the games poorly, and for that they both suffered."
740,Postmortem: Moon Studios heartfelt Ori and the Blind Forest,2015,http://www.gamasutra.com/view/news/242530/Postmortem_Moon_Studios_heartfelt_Ori_and_the_Blind_Forest.php,Ori and the Blind Forest,console pc,action platformer,single,management-people,crunch-time,"Having said that, we ultimately did have to crunch a couple of times during development in order to actually finish the game."
741,Out There: A Postmortem,2015,http://www.gamasutra.com/blogs/MichaelPeiffert/20150402/240302/Out_There_A_Postmortem.php,Out There,mobile pc,adventure roguelike,single,management-people,delays,"It was at this time that I started rereading my translation with a professional who graciously accepted to do it free of charge. There would eventually be a total of 28,000 words (I had not finished writing) to read in French and 24,000 in English. I thought it would take 5 days. We sat face to face while she read, corrected, etc. After 15 minutes, I asked her how much she had done so I could estimate the total amount of time we would need. She was still on the first sentence. It took several months."
742,Out There: A Postmortem,2015,http://www.gamasutra.com/blogs/MichaelPeiffert/20150402/240302/Out_There_A_Postmortem.php,Out There,mobile pc,adventure roguelike,single,management-people,team,Early 2013: Michael is busy uncluttering some of the more abstract aspects of the game and making a little cash by doing side gigs (...)
743,Out There: A Postmortem,2015,http://www.gamasutra.com/blogs/MichaelPeiffert/20150402/240302/Out_There_A_Postmortem.php,Out There,mobile pc,adventure roguelike,single,management-feature,scope,"Writing adventures, multiple choices, conditions, the balanced integration into the gameplay and then translating the whole thing into English was making my brain explode."
744,Postmortem: Joel McDonalds Prune,2015,http://www.gamasutra.com/view/news/264930/Postmortem_Joel_McDonalds_Prune.php,Prune,mobile,action,single,production,tools,"After talking to some friends, I worked up the courage to essentially reboot the game. (...) I had to completely rewrite how the trees grew in the game, and it took me several tries over a couple months’ time to get it right."
745,Postmortem: Joel McDonalds Prune,2015,http://www.gamasutra.com/view/news/264930/Postmortem_Joel_McDonalds_Prune.php,Prune,mobile,action,single,production,prototyping,"I spent the next six months prototyping all kinds of things--shield power-ups, infinite fractal trees, tree planets, weird inverted trees, and countless game modes like 2-player coop, FRENZY!, and endless modes."
746,Postmortem: Joel McDonalds Prune,2015,http://www.gamasutra.com/view/news/264930/Postmortem_Joel_McDonalds_Prune.php,Prune,mobile,action,single,management-feature,scope,"The game was originally supposed to be a short two to three month project to get my feet wet as a solo indie game designer. (...) Unfortunately, three months quickly turned into six months, and finally into a year and three months. (...) I had completely unrealistic expectations."
747,Postmortem: Joel McDonalds Prune,2015,http://www.gamasutra.com/view/news/264930/Postmortem_Joel_McDonalds_Prune.php,Prune,mobile,action,single,management-feature,planning,"I would waste hours of my time tweaking the look of a soon-to-be-cut mechanic, days of my time picking the exact right font, and weeks or months of my time deliberating over decisions such as how to represent the score in game. (...) The point is, our time as developers is incredibly precious, it’s limited. I should have asked myself more often than I did, what’s most important and what will nobody ever care about? (...) Here’s how it would generally go down. I would first make a crude schedule, not based on anything reasonable or sane but based on what I delusionally wanted to get done. I would give myself a fraction of the time actually needed to accomplish the remaining tasks. And then I would let this schedule sit in a dark corner of my hard drive for a while and get to working on stuff. Then one day I’d happen to unearth the schedule and look at the calendar and realize it was now 45 days later and I hadn’t even finished half the tasks on my list."
748,Postmortem: Flippflys Race the Sun,2015,http://www.gamasutra.com/view/news/264127/Postmortem_Flippflys_Race_the_Sun.php,Race the Sun,console mobile pc,running,single,production,tools,"We decided early on to use the built-in leaderboard features for each new platform we brought the game to, believing players would appreciate this. The downside is that we essentially have to re-write leaderboard support for each platform, which always takes significant time."
749,Postmortem: Flippflys Race the Sun,2015,http://www.gamasutra.com/view/news/264127/Postmortem_Flippflys_Race_the_Sun.php,Race the Sun,console mobile pc,running,single,management-people,delays,"The ports have taken longer than we planned, and each new platform has added varying degrees of overhead."
750,Postmortem: Flippflys Race the Sun,2015,http://www.gamasutra.com/view/news/264127/Postmortem_Flippflys_Race_the_Sun.php,Race the Sun,console mobile pc,running,single,management-feature,scope,We’ve also come to grips with the fact that we consistently under-estimate how long things will take by at least a factor of 2x.
751,Postmortem: Flippflys Race the Sun,2015,http://www.gamasutra.com/view/news/264127/Postmortem_Flippflys_Race_the_Sun.php,Race the Sun,console mobile pc,running,single,business,marketing,"we decided to go into marketing mode, and started emailing press, and essentially trying to move into an “alpha sales” mode for the game, selling early versions of the game on our website. (...) At this point we started talking about our experience on our blog, and then decided to launch the “Not on Steam” sale for our game and other indies who didn’t have access to Steam. These two events combined really helped raise the attention on our game, and we were finally greenlit in the fall of 2013. (...) Despite re-working the game’s visuals and gaining significant community support in our Kickstarter, we simply weren’t getting enough attention for the game to get past Greenlight’s barriers. So we launched the game via our website - and (quite predictably,) the revenue for the game fizzled out after just a couple weeks."
752,Postmortem: Flippflys Race the Sun,2015,http://www.gamasutra.com/view/news/264127/Postmortem_Flippflys_Race_the_Sun.php,Race the Sun,console mobile pc,running,single,business,monetization,"Around the 6 month mark, we were running out of money, the press was ignoring our game, and we weren’t selling any pre-orders. In this sad state, we decided to put together a Kickstarter to try to fund the rest of development. It got off to a horrible start, further demoralizing us as a team. After a week on Kickstarter with less than 10% funding, we seriously considered dropping the project."
753,"An indie-style experiment at a AAA studio: Insomniacs Slow Down, Bull",2015,http://www.gamasutra.com/view/news/259163/An_indiestyle_experiment_at_a_AAA_studio_Insomniacs_Slow_Down_Bull.php,"Slow Down, Bull",mobile pc,puzzle,single,production,design,"The result is that the first couple of areas balance out pretty well, but then you get difficulty spikes around Area 3, and the last area of the game has too lax of a stamp requirement to beat. The progression pacing is just off. Doing more thorough pre-release testing and telemetry with external playtesters would have helped iron out the balancing."
754,"An indie-style experiment at a AAA studio: Insomniacs Slow Down, Bull",2015,http://www.gamasutra.com/view/news/259163/An_indiestyle_experiment_at_a_AAA_studio_Insomniacs_Slow_Down_Bull.php,"Slow Down, Bull",mobile pc,puzzle,single,production,tools,"Though the initial prototype for Slow Down, Bull was built in Construct 2, we decided to go for Unity for the final game for a variety of reasons (performance issues, a seasoned Unity programmer on the team, a few technical features that were not possible in C2). We decided early on to make use of Unity’s animator tool, rather than controlling how and when animations were played in code, mostly because a general look at what it was capable of seemed like it was usable."
755,"An indie-style experiment at a AAA studio: Insomniacs Slow Down, Bull",2015,http://www.gamasutra.com/view/news/259163/An_indiestyle_experiment_at_a_AAA_studio_Insomniacs_Slow_Down_Bull.php,"Slow Down, Bull",mobile pc,puzzle,single,production,testing,"We did a ton of playtesting and telemetry in the early stages of the project when everything was coming together, which was super useful for deciding early on what features to keep and to drop and get an idea of if the overall game was going to be fun. However, towards the end of the project, we got caught under the timeline of finishing the game on time and didn’t devote as much time and resources to telemetry and playtesting."
756,"An indie-style experiment at a AAA studio: Insomniacs Slow Down, Bull",2015,http://www.gamasutra.com/view/news/259163/An_indiestyle_experiment_at_a_AAA_studio_Insomniacs_Slow_Down_Bull.php,"Slow Down, Bull",mobile pc,puzzle,single,production,bugs,"We also had a lot of trouble with bugs in more complicated state transitions between animations for certain characters, especially anything that involved any sort of layering (Annette the bullcatcher was notorious for not transitioning properly through her various tell states, even when all the variables were set, due to the unintuitive transition settings in the animators overriding what animation was being told to play in the state machine)"
757,"An indie-style experiment at a AAA studio: Insomniacs Slow Down, Bull",2015,http://www.gamasutra.com/view/news/259163/An_indiestyle_experiment_at_a_AAA_studio_Insomniacs_Slow_Down_Bull.php,"Slow Down, Bull",mobile pc,puzzle,single,management-people,delays,"It was important for the company to not divide its message across games, so the result was there was a big delay between wrapping up the developer streams and the launch of the game so we couldn’t tie launch promotion to the streams. "
758,"An indie-style experiment at a AAA studio: Insomniacs Slow Down, Bull",2015,http://www.gamasutra.com/view/news/259163/An_indiestyle_experiment_at_a_AAA_studio_Insomniacs_Slow_Down_Bull.php,"Slow Down, Bull",mobile pc,puzzle,single,management-feature,cutting-features," When we had a final understanding of our timeline and I decided to cut leaderboards up front so that we could actually finish the game on time, there was some response of confusion since, after all, I’d gotten leaderboards up and running within a couple of weeks for the prototype. "
759,Postmortem: Failbetter Games Sunless Sea,2015,http://www.gamasutra.com/view/news/237657/Postmortem_Failbetter_Games_Sunless_Sea.php,Sunless Sea,pc,roguelike,single,production,design,"I said above that we nailed the thematic and mechanical focus of the game. That’s true, but there was one area where we vacillated badly. Was Sunless Sea a CRPG or a roguelike? My answer to this, for most of the development time, was ‘Yes!’ and that was our biggest mistake - specifically, I have to say, my mistake (...) This is the source of very nearly everything that’s wrong with the game. It’s left us with an uneven difficulty curve. It’s irritated players who don’t relish repeating early story. (...) Unfortunately, the original implementation just wasn’t very compelling. We worked on balance issues, and we had something interesting in the core mechanic - where you had to light up your enemy while avoiding being lit up in turn - but the fundamental problem was that the separate battle arena yanked the player out of our carefully layered atmosphere into something aggressively ludic."
760,Postmortem: Failbetter Games Sunless Sea,2015,http://www.gamasutra.com/view/news/237657/Postmortem_Failbetter_Games_Sunless_Sea.php,Sunless Sea,pc,roguelike,single,production,tools,"[Insufficient time building tools] We found some limited automation solutions to speed up these issues at the end, but we all agreed that we wished we’d spent more time on initial tooling up front. "
761,Postmortem: Failbetter Games Sunless Sea,2015,http://www.gamasutra.com/view/news/237657/Postmortem_Failbetter_Games_Sunless_Sea.php,Sunless Sea,pc,roguelike,single,production,technical,"The game relied a lot on JSON configuration files. Some of those were output from the CMS, some of them were just edited by hand. This was fine when we were experimenting, or aiming for an early launch, but as time wore on and the game grew, it became (to quote Liam, our lead dev) ‘like chopping down trees with your hands’. That only works in Minecraft. (...) we inherited a bunch of non-ideal UI issues. Our story engine was designed to work with a web UI, and has in any case remained largely unchanged for some years. It’s flexible and effective, but it can also look clunky and ugly. We imported that clunkiness directly in our game."
762,Postmortem: Failbetter Games Sunless Sea,2015,http://www.gamasutra.com/view/news/237657/Postmortem_Failbetter_Games_Sunless_Sea.php,Sunless Sea,pc,roguelike,single,management-feature,scope,"This was a product of two things: our relative inexperience, and the way that scope gradually increased. "
763,Postmortem: Failbetter Games Sunless Sea,2015,http://www.gamasutra.com/view/news/237657/Postmortem_Failbetter_Games_Sunless_Sea.php,Sunless Sea,pc,roguelike,single,management-feature,cutting-features,"So we had a Serious Team Meeting. We noted that we’d added a Unity dev with AI and animation skills to the team; that even the hardcore Fallen London players didn’t love original combat; that we needed a fundamental change. We threw out the original mechanic completely, and took the extra dev time to make it as good as we could afford"
764,Postmortem - Swing Racers,2015,http://www.gamasutra.com/blogs/CorySpooner/20151124/260239/Postmortem__Swing_Racers.php,Swing racers,mobile,racing,single,production,design,"UI sucked a disgusting amount of development time. I think even when you have a good UI system it can be a pain, but I was manually positioning, scaling and animating *everything* in code without any live preview (the only other alternative in UDK was Scaleform, which I’d read performed really bad on mobile and would’ve meant learning Actionscript as well). Change position, compile, run, check, go back, change again, etc."
765,Postmortem - Swing Racers,2015,http://www.gamasutra.com/blogs/CorySpooner/20151124/260239/Postmortem__Swing_Racers.php,Swing racers,mobile,racing,single,production,technical,"Amateur coding might suffice for something small but mine got big... like 10x bigger than I expected, and it becomes hard to manage if you didn’t do it right."
766,Postmortem - Swing Racers,2015,http://www.gamasutra.com/blogs/CorySpooner/20151124/260239/Postmortem__Swing_Racers.php,Swing racers,mobile,racing,single,production,testing,"However, I struggled to get much testing done when I had a more finished product (beyond getting your friend’s kids to play the game) - I mean the kind of testing that finds bugs, not suggests new features. You tend to jam a lot of stuff in at the very end and that’s when you’re likely to introduce bugs, particularly if you’re a novice programmer."
767,Postmortem - Swing Racers,2015,http://www.gamasutra.com/blogs/CorySpooner/20151124/260239/Postmortem__Swing_Racers.php,Swing racers,mobile,racing,single,management-feature,planning,Many times since release I have wished that I knew things about people playing my game - how many players chose the “left-handed” option? how many strived to unlock everything? which levels did they go back to the most? Knowing these things would help make better decisions on features for the next project.
768,Postmortem - Swing Racers,2015,http://www.gamasutra.com/blogs/CorySpooner/20151124/260239/Postmortem__Swing_Racers.php,Swing racers,mobile,racing,single,business,marketing,"Swing Racers was the first time marketing for me - I’d read a few guides about it and kinda had an idea of what to expect but I was still fairly naive. I’ve learnt that it is indeed a full-time job - there is always more marketing that can be done! (...) Youll see mentioned in various places that screenshots are super important. They are! As are the trailer and promotional art (app icon or box art). (...) I also rushed the trailer. Next time I would like to plan it properly and spend more time on it (or even better, pay a pro if costs allow). I feel like I did an OK job on the app icon considering I’m not that comfortable with that kind of stylized art, but I won’t forget to make that a priority next time, as well."
769,Vanishing Point Postmortem,2015,http://www.gamasutra.com/blogs/KevinWong/20150520/243620/Vanishing_Point_Postmortem.php,Vanishing Point,console,racing,single,production,design,"The creative direction for the project was unclear throughout its first half, aside from a high level social goal; questions of tone, mood, theme, and purpose were left very ambiguous. (...) When I had it in my hands at start of fall and was asked to build levels and new mechanics out of it, I never really felt the mechanic granted me enough room to be creative with design. "
770,Vanishing Point Postmortem,2015,http://www.gamasutra.com/blogs/KevinWong/20150520/243620/Vanishing_Point_Postmortem.php,Vanishing Point,console,racing,single,production,tools,Development on Vanishing Point originated in Unity but switched to Unreal 4 to give exciting challenges to engineers and permit use of its powerful lighting engine and blueprint system. This was not the best decision for the game or its players because developers had to spend the first several months learning a new toolset and transitioning to an unfamiliar workflow.
771,Vanishing Point Postmortem,2015,http://www.gamasutra.com/blogs/KevinWong/20150520/243620/Vanishing_Point_Postmortem.php,Vanishing Point,console,racing,single,production,prototyping,"[CORE MECHANIC NOT PROTOTYPED ENOUGH] Early prototypes of the game were mechanically identical to The Museum of Simulation Technology, where the scale of an object was relative to the object’s position in relation to the player. Over the summer, the mechanic was changed to work by the position of the player in relation to the object"
772,Vanishing Point Postmortem,2015,http://www.gamasutra.com/blogs/KevinWong/20150520/243620/Vanishing_Point_Postmortem.php,Vanishing Point,console,racing,single,management-people,delays,"This slowed development greatly, and entire weeks were spent bumbling around the engine trying to figure out how to make the game with these tools. That delayed that early, exploratory development phase where you are figuring out how to bring out the fun in what you have, prototyping new mechanics and discovering what works lasted all the way to the end of the first semester. "
773,Vanishing Point Postmortem,2015,http://www.gamasutra.com/blogs/KevinWong/20150520/243620/Vanishing_Point_Postmortem.php,Vanishing Point,console,racing,single,management-people,crunch-time,"Crunching under a tight deadline when you and the people around you lack it feels like a tragic death march towards an inevitable defeat. In our first semester, we ended up in this state of mind as our major Winter Demo Day deadline loomed by."
774,Vanishing Point Postmortem,2015,http://www.gamasutra.com/blogs/KevinWong/20150520/243620/Vanishing_Point_Postmortem.php,Vanishing Point,console,racing,single,management-people,communication,"If any of these parameters are not met, that asset must be sent back to whoever built it. With different individuals working at each step of this process, it could take a while for art assets to be ready for integration in the game."
775,Vanishing Point Postmortem,2015,http://www.gamasutra.com/blogs/KevinWong/20150520/243620/Vanishing_Point_Postmortem.php,Vanishing Point,console,racing,single,management-people,team,"One of the things that we struggled with was the dearth of 3D artists and animators local to USC. Much of Vanishing Point’s 3D art had to be outsourced to volunteer freelancers or non artists. Thus, asset production was slow and fraught with errors. (...) Furthermore, since most of our team was made out of volunteers who were not taking the AGP class for credit, we had no way to keep volunteer members accountable for completing their tasks on time to a high standard since there was no consequence for receiving a red on a task."
776,"Amazia, a CCG for mobile",2016,gamasutra.com/blogs/SinaShahbazi/20180401/315886/Postmortem_Amazia_a_CCG_for_mobile.php,Amazia,mobile,strategy,single,production,design," A lot has been said on the importance of polish. Its a bit of vague term. It could mean balancing and fine-tuning the gameplay, it could mean getting rid of bugs or it could mean getting the art to be that little bit prettier. In our team what we usually meant by polish was game-feel and sparkly animations and effects. Allocation of funds was lopsided to say the least. We ended up with very high quality card art, but we didnt get any animations or visual effects to go with the game, so as a result we implemented a generic animation that would be used for all effects, only differing in its sound effect and color depending on the type of effect it was producing. Games like Hearthstone and all other Blizzard games live by their high degree of polish. It was a shame Amazia lacked this quality as it was evident that younger and casual players in particular had a harder time getting into the game due to it not being exciting enough."
777,"Amazia, a CCG for mobile",2016,gamasutra.com/blogs/SinaShahbazi/20180401/315886/Postmortem_Amazia_a_CCG_for_mobile.php,Amazia,mobile,strategy,single,management-people,communication," If theres just one lesson to give from the development of Amazia, its that a shared and clear vision for a game must be established and held onto through the entire dev cycle. This is especially true of a small indie team like ourselves, and even more critical that its shared between the co-founders. The problem in the case of Amazia was that I had laid out a vision and a strategy to achieve it at the start of pre-production and the game was being developed with this vision in mind for some time until my partner and the lead programmer of the game decided that it would be a better idea to pivot to an easier and more manageable target of 1/6 releasing for the local market. I was convinced because it was supposed to be a soft launch to gather feedback about the game. In an unclear vision though, targets shift and change and some months down the line we were not soft launching, we were in full production mode for the game. Its easy in theory to settle this problem with having a team member like the game designer or producer be the person making the final calls, but in reality team dynamics are more complicated than that. Game development is a team effort and theres no place for a dictator. At the same time, that shouldnt be an excuse for the team to lack vision and direction as well. Sometimes the lack of clear vision is not critical but for Amazia it was fatal."
778,"Amazia, a CCG for mobile",2016,gamasutra.com/blogs/SinaShahbazi/20180401/315886/Postmortem_Amazia_a_CCG_for_mobile.php,Amazia,mobile,strategy,single,management-people,team," An online F2P CCG that was to handle many different features was a massive task. It was made even bigger by the fact that pretty much all the programming was done by one person. Thats not to say no one else did any programming ever, but the contributions were small and in the long run the team was hit hard by this constraint, especially towards the end where our programmer was getting somewhat tired. Its a remarkable achievement nonetheless and when talking to different publishers, both local and abroad, they were all astonished by the feat of completing the entire thing with all its features in one year. 2/6 That being said, as the designer on the team, there were many work-hours that I felt I wasnt contributing as much as I could. Now Im not exactly a programming illiterate, and I did code the different cards of the game which was the bulk of the content, but I could have been a sort of junior programmer as well, working on systems and other features. Maybe I could have done the tutorial, or improved the game feel. Our lead never agreed on training me, always arguing that it would take time and were just about to release and finish the job. This went on for months unfortunately so he wasnt justified in his assumption. Should the game had more than one programmer, we could have saved on time and money more and the power dynamics of the team would have been more balanced."
779,"Amazia, a CCG for mobile",2016,gamasutra.com/blogs/SinaShahbazi/20180401/315886/Postmortem_Amazia_a_CCG_for_mobile.php,Amazia,mobile,strategy,single,business,marketing," Both of the co-founders for Amazia have academic backgrounds in business, so its astounding how we missed some of the very basics of marketing. No, I dont mean advertising and public relations, Im talking about market analysis and strategy. Though I had initially done an STP analysis and guide for Amazia, it was all thrown out after we switched to the local mobile version, because the entire market was changed. Keep in mind that originally Amazia was meant to be a game that was targeting a niche of players who wanted a deeper game than Hearthstone but easier to access than games like Yu-gi-oh or Magic. Its a niche thats also been attempted to be filled by many other games such as Duelyst, Faeria and Shadowverse, so it wasnt as if the competition was light, but thats also where the smaller details of the marketing strategy come in play as for where to focus the PR message on. These plan would be no more after the pivot. Everything changed, the whole landscape was different, from the audience, to our product, to our distribution and communication channels. Worse however was that we didnt sit down and re-do these marketing basics. We never segmented the local market, or thought how we could reach them. We didnt consider what need we were fulfilling. What was our core product? A strategy game. Ok, now does that core product have demand in this local market? These were all questions that should have been answered and werent answered all the way until it was too late and there was only blame to pass. Our marketing was terrible. We targeted the wrong market, we didnt give our target what they needed, we didnt have a plan to get fans involved and we could never position ourselves in a place that fit our game."
780,"Amazia, a CCG for mobile",2016,gamasutra.com/blogs/SinaShahbazi/20180401/315886/Postmortem_Amazia_a_CCG_for_mobile.php,Amazia,mobile,strategy,single,business,monetization," Of course conventional wisdom tells us not to do that. Conventional wisdom tells us everythings important though and we cant leave out some aspect of the game for late in development to think about. As with most other parts of the game, monetization was also thought of in detail for the original vision but had to be changed for the new game. The scheme we went with was the Hearthstone path of buying packs that open random cards. Later I decided to add the Clash Royale 3 cards-a-day rotational offer as well to buy with real cash. Nothing seemed to work despite our much lower prices compared to our competitors. This is the result of a society not valuing paying for games after decades of pirating them for free. Iranians just dont pay for games. Our conversion rate only increased after I added a one-time purchase value offer that gave a lot for a very low cost, but even then it was much lower than anything sustainable. We found too late that for a game to be financially successful in this local market, it must have the capacity to practically earn endless amount from a paying consumer. This is the targeting whale strategy, and due to very low sub 1% conversion rates, its the only viable strategy to earn money with games. This is the case with Clash of Clans, Clash Royale and most other 3/6 Clash clones that have been financially successful earning thousands of dollars from individuals. Amazia had no bottomless pit to spend money in. You could get all content with around $50 in microtransactions, and thats without playing and earning cards with in-game rewards."
781,Postmortem: Dinosaur Polo Clubs Mini Metro,2016,http://www.gamasutra.com/view/news/273284/Postmortem_Dinosaur_Polo_Clubs_Mini_Metro.php,Mini Metro,pc,simulation strategy,single,management-people,delays,"Most of the time this work would be on something that would have had to be worked on at some point—performance on low-end devices, a build pipeline for automatic deployment to devices, reworking the interface to be touch-friendly, etc.— but ultimately it was diversifying and confusing our efforts, and delaying both releases."
782,Postmortem: Dinosaur Polo Clubs Mini Metro,2016,http://www.gamasutra.com/view/news/273284/Postmortem_Dinosaur_Polo_Clubs_Mini_Metro.php,Mini Metro,pc,simulation strategy,single,management-people,team,"We did a lot of things that we’d have never gotten away with if a producer was on the team. (...) We’re not the typical start-up, and the two of us have almost 100% skill crossover. This means that we’re fine when it comes to coding and designing, but there are a many gaps in our expertise: art production, creative direction, marketing, PR, but most of all business development"
783,Postmortem: Dinosaur Polo Clubs Mini Metro,2016,http://www.gamasutra.com/view/news/273284/Postmortem_Dinosaur_Polo_Clubs_Mini_Metro.php,Mini Metro,pc,simulation strategy,single,management-feature,feature-creep,"We structured our work on a very casual basis. We’d have rough ideas about what we wanted to work on next but no formal plan of who was doing what and when. This led to feature creep “Oh, it’d be cool if we did this…” and to us having no realistic idea of the final scope or how long it would take us to get there."
784,Postmortem: Dinosaur Polo Clubs Mini Metro,2016,http://www.gamasutra.com/view/news/273284/Postmortem_Dinosaur_Polo_Clubs_Mini_Metro.php,Mini Metro,pc,simulation strategy,single,management-feature,multiple-projects,"At the time we started Mini Metro I had a web development job that I enjoyed, and saw my future there, so I wasn’t looking for a career change. (...) . I would come home from a reasonably high-pressure job, embedded in a bank and working on internet banking software, and then try to shift gears for a few hours of development. Almost always I would sideline it and invest time in my other hobbies that let me wind down instead."
785,Postmortem: Dinosaur Polo Clubs Mini Metro,2016,http://www.gamasutra.com/view/news/273284/Postmortem_Dinosaur_Polo_Clubs_Mini_Metro.php,Mini Metro,pc,simulation strategy,single,management-feature,planning,"We knew that a mobile release was inevitable—in fact, that was what we were originally focusing on, until we changed tack to desktop because of the viability of Early Access. Because of this, during the Early Access period we’d often jump the gun on mobile work instead of focusing on finishing the core game."
786,Postmortem: Dinosaur Polo Clubs Mini Metro,2016,http://www.gamasutra.com/view/news/273284/Postmortem_Dinosaur_Polo_Clubs_Mini_Metro.php,Mini Metro,pc,simulation strategy,single,business,monetization,"Our lack of business interest has also led us to not consciously identify and seek out opportunities for Mini Metro, and Dinosaur Polo Club in general. We’re just going after the standard platforms and distribution models— desktop, mobile, maybe consoles—and haven’t given much more thought to it than that."
787,Postmortem: s Early Access campaign Offworld Trading Company,2016,http://www.gamasutra.com/view/news/274240/Postmortem_Offworld_Trading_Companys_Early_Access_campaign.php,Offworld Trading Company,pc,strategy,multi single,production,testing,"Each update had to go through a round of QA, with bugsbeing assigned to developers who had to interrupt their normal development flow to ensure the update waspolished and ready. Some of these bugs were critical, but others were of subjective importance. The QA teamwas trying their best to be thorough, but during active development, not every bug needs to be fixed, especiallyfor systems that are currently just placeholders. I gave each team member the right to make a judgment call onwhich bugs to ignore, but the process itself absolutely took time away from more important, long-term tasks."
788,Postmortem: s Early Access campaign Offworld Trading Company,2016,http://www.gamasutra.com/view/news/274240/Postmortem_Offworld_Trading_Companys_Early_Access_campaign.php,Offworld Trading Company,pc,strategy,multi single,production,bugs,"Its hard to read over and over again that the game doesnt have enough content, has crummy voicework, is missing a tutorial, and so on – as the team is working to fix those issues."
789,Postmortem: s Early Access campaign Offworld Trading Company,2016,http://www.gamasutra.com/view/news/274240/Postmortem_Offworld_Trading_Companys_Early_Access_campaign.php,Offworld Trading Company,pc,strategy,multi single,production,prototyping,"Also, being on Early Access for half of the game’s development cycle meant that we couldnt include half-baked features with just debug text and programmer art. This type of prototyping is an important way to make progress while a feature is experimental so that polish would be a waste of resources. Sometimes, we would lock away features that we knew were not ready for a general audience by enabling them only in special developer builds, which helped mitigate the problem. "
790,Postmortem: s Early Access campaign Offworld Trading Company,2016,http://www.gamasutra.com/view/news/274240/Postmortem_Offworld_Trading_Companys_Early_Access_campaign.php,Offworld Trading Company,pc,strategy,multi single,business,marketing,"One common argument against Early Access is that “you only get one launch” – meaning that a game’s Early Access launch is, in truth, it’s only launch. 14 months later, however, we had a much harder time getting press attention for the game’s real launch;"
791,Postmortem: s Early Access campaign Offworld Trading Company,2016,http://www.gamasutra.com/view/news/274240/Postmortem_Offworld_Trading_Companys_Early_Access_campaign.php,Offworld Trading Company,pc,strategy,multi single,business,monetization,"This wave of media interest led to very strong sales during our first few weeks on Steam even though we launched at $40, making Offworld one of the highest-priced games on Early Access. (At launch, only Galactic Civilizations III - also published by Stardock - was more expensive.)"
792,Postmortem Ratchet & Clank (2016),2016,"http://www.gamasutra.com/view/news/272694/Ratchet__Clank_2016_postmortem.php
",Ratchet & Clank,console,platformer shooter,single,production,documentation,"Youd think wed value our own work. But sometimes, we move from project to project so quickly that we forget to label and store everything. If I had a time machine, Id send myself a nasty letter-give everything a descriptive name and archive it, you idiot! (...) Finding things usually involves messaging the person who made it, which makes asset wrangling the domain of the few people who remember that sort of thing. "
793,Postmortem Ratchet & Clank (2016),2016,"http://www.gamasutra.com/view/news/272694/Ratchet__Clank_2016_postmortem.php
",Ratchet & Clank,console,platformer shooter,single,production,tools,"We simply don’t have access to our source files from the PS2 era. (...) Idol Minds went through the painful process of extracting our assets from the PS2 master disc for the collection. We realized early on that we could use those libraries. So we enlisted support from technology consulting firm Tin Giant to extract data from the collection and convert it to our engine formats. Amusingly (to us, anyway) the assets retained metadata from the PS2, so we got to revisit our asset numbering system and remember our fledgling development practices."
794,Postmortem Ratchet & Clank (2016),2016,"http://www.gamasutra.com/view/news/272694/Ratchet__Clank_2016_postmortem.php
",Ratchet & Clank,console,platformer shooter,single,management-people,communication,"We’re not being glib here. We have to list this in both categories. It was the single biggest win for the project, but it was also the single biggest source of pain. Why? Because culture. (...) You’re probably aghast, but that’s not the worst of it. We also used Hot Wheels as an asset control system. Seriously—if you wanted to check out a level, you’d grab the corresponding Hot Wheel to signal that it was yours for editing. Level 6 was the 1968 Beatnik Bandit. I always liked that one. Wait, maybe that system was pretty cool)"
795,Postmortem Ratchet & Clank (2016),2016,"http://www.gamasutra.com/view/news/272694/Ratchet__Clank_2016_postmortem.php
",Ratchet & Clank,console,platformer shooter,single,management-people,team,"Finally, on the leadership side, we discovered that our flat hierarchy and reliance on individual empowerment doesn’t always work for remote development. (...) We had the opportunity to extend development by several months. But most of the production team needed to roll onto other projects based on our original Gold and besides, we didn’t have the headroom in the budget to accommodate a significant increase in labor. (...) We had only two programmers responsible and for the last few months, only one designer."
796,Postmortem Ratchet & Clank (2016),2016,"http://www.gamasutra.com/view/news/272694/Ratchet__Clank_2016_postmortem.php
",Ratchet & Clank,console,platformer shooter,single,management-feature,scope,"We take pride in our ability to hit our dates and finish strong. So while the prospect of delivering the gold master in ten months seemed a little crazy, it was also the sort of crazy that an Insomniac could get into."
797,Postmortem Ratchet & Clank (2016),2016,"http://www.gamasutra.com/view/news/272694/Ratchet__Clank_2016_postmortem.php
",Ratchet & Clank,console,platformer shooter,single,management-feature,feature-creep,"We always forget to take ambition into account. We’re never satisfied with just the story cutscenes, just the basics. We want elegant transitions between every gameplay segment. We want NPCs to have more fluidity and expression than we initially planned. "
798,Postmortem Ratchet & Clank (2016),2016,"http://www.gamasutra.com/view/news/272694/Ratchet__Clank_2016_postmortem.php
",Ratchet & Clank,console,platformer shooter,single,management-feature,planning,Here’s another one for the depressingly thick “mistakes we make every single time” file. We’re really bad at scheduling cinematics.
799,Red Skies,2016,http://www.gamasutra.com/blogs/GrhyllJDD/20160518/272962/PostMortem_Red_Skies.php,Red Skies,mobile,action,single,production,tools,"I’ve read enough posts on Gamasutra to know that analytics are crucial for any project, yet my analytics implementation was very, very poor. I didn’t take the time to really understand the important metrics and how to gather them, so I ended up with a bunch of events impossible to analyse in a way that make sense, and I only have a very vague idea of how players behaved in the game."
800,Red Skies,2016,http://www.gamasutra.com/blogs/GrhyllJDD/20160518/272962/PostMortem_Red_Skies.php,Red Skies,mobile,action,single,production,testing,"I didn’t test seriously enough my implementation of events, just putting some here and there (yes, exactly the way most articles warn you not to do), and it probably would have been easy to improve that if I dedicated a bit more time to think about it"
801,Red Skies,2016,http://www.gamasutra.com/blogs/GrhyllJDD/20160518/272962/PostMortem_Red_Skies.php,Red Skies,mobile,action,single,management-feature,planning,"We didn’t spend a lot of time thinking about our audience, and I believe it’s one of the core aspects of mobile development. "
802,Red Skies,2016,http://www.gamasutra.com/blogs/GrhyllJDD/20160518/272962/PostMortem_Red_Skies.php,Red Skies,mobile,action,single,business,marketing,"The bad side is that we tried to
offer a free-to-play, ad-monetized experience to players, without any marketing knowledge of the thing. (...) I sent about 50 personalized and targeted e-mails to press, got two answers and 0 review. "
803,Red Skies,2016,http://www.gamasutra.com/blogs/GrhyllJDD/20160518/272962/PostMortem_Red_Skies.php,Red Skies,mobile,action,single,business,monetization,"On the commercial side, this project is a disaster, and I’m glad I never saw it as a real mean to make money (of course, one could say it happens the other way around: if you start to make a game without wanting to make money out of it, it won’t happen). "
804,Renowned Explorers,2016,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renowned Explorers,pc,strategy,single,production,design,"Another big risk we took with Renowned Explorers was the sheer amount of new things we wanted to try out. Not having a good game to found your new innovations on is already risky business, but we kept going further. (...) Another mistake I personally made was trying to evade common design principles because I thought they were the devil. For example, I avoided Skinner Boxes like the plague... in a Rogue-lite, which is basically one big skinner box. (...) While the development of the engine hampered development, the innovative ways of Renowned Explorers hampered both development and later on the launch of the game. Little did we know then: we, and I in particular, were pretty convinced that finding new ways of having fun and cut back on old-and-trusted incentive based mechanics like skinner-boxes was the way to go."
805,Renowned Explorers,2016,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renowned Explorers,pc,strategy,single,management-people,team,"I took it especially hard at the time. I didnt really agree with the philosophy or the way the projects were handled, had a lot of money on the line, and I had just overcome my minor impostor syndrome as a designer and director, just to be pushed back. It went as far that the combination of emotional stress and a lack of sunshine provoked a stress attack, requiring an ambulance to check up on me."
806,Renowned Explorers,2016,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renowned Explorers,pc,strategy,single,management-feature,budget,"On top of that, we went on to hire people to make a game and form a company culture. Not because we needed them directly, but because we thought it would help to promote ownership if everyone was a full member of the team from the beginning. For most of them, we didnt have any specific task to do right from the bat. This is quite obviously a financial mistake, since those people are being paid for doing nothing or for trying to find work."
807,Renowned Explorers,2016,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renowned Explorers,pc,strategy,single,management-feature,planning,"As mentioned before we started to create AbbeyCore, our own engine, a month before we started development on Renowned Explorers. Lets just stop there, because explaining why this is not a good idea is an insult to your intelligence. I dont know why we did it, I dont know why no one objected, (we even had folks who already created engines before!) so lets just say we were collectively drunk for 2 months. Once we started producing the game, AbbeyCore was far from ready for it. Add in the costs of learning new tech, and you got yourself set-up for months of delay. We paid a heavy short-time price in both time and money, with the hope that it would all pay out in the long-term. But there was a question we didnt ask ourselves: Isnt the price so high that we might not make it to long-term? (...) In short: we were very happy with the result (it became a good, deep game with plenty of interesting choices), but the costs were huge (most importantly, reliance on authority, and customers not knowing what to expect). "
808,Renowned Explorers,2016,https://www.gamasutra.com/blogs/AdriaanJansen/20160905/266289/Post_Mortem_Renowned_Explorers.php,Renowned Explorers,pc,strategy,single,business,monetization,"But then we released the game for PC on September the 2nd of 2015. Oh man, it was horrible. Sales were seriously lagging. You can read on our thoughts on ""why?"" in the blog about the price of innovation. It was clear within a few days that we would have to seriously downsize Abbey Games. Within a month we generated about 10K sales: not even close to the numbers of Reus (which was more like 100K) and certainly not the revenue to keep a 10 man studio. We had to let people go and cut back on other expenses. Many of them were our friends we have happily worked with for years."
809,Rpublique,2016,http://www.gamasutra.com/view/news/269970/Postmortem_Bringing_Camouflajs_Rpublique_to_PlayStation_4.php,Republique,console mobile pc,action adventure,single,production,tools,"we upgraded to Unity 5.0 early last year to take advantage of the engine’s new physically based shading features-a herculean task that strengthened our game’s visuals but also resulted in months of extra work and headaches. (...) We eventually upgraded our Unity version once again (from 5.2.2p2 to 5.2.2p4) during PS4 development to resolve some of our mobile issues-engine-related crashes, incompatibilities between Unity and iOS9—which also cost us valuable time."
810,Rpublique,2016,http://www.gamasutra.com/view/news/269970/Postmortem_Bringing_Camouflajs_Rpublique_to_PlayStation_4.php,Republique,console mobile pc,action adventure,single,production,technical,"In between marathon in-editor sessions, the team dealt with cripplingly long build times. At worst, generating a new build could take between 14 to 20 hours. (...) The build times eventually turned a corner once we upgraded our Unity project to 5.2.2p4, began to properly separate physically-based and legacy materials, and invested in a more powerful machine that could create multiple builds simultaneously. (...) We spent years reverse-engineering stealth action titles that utilize 16-button controllers and channeling them into a “one-touch” scheme with our initial release. And then, we set ourselves up for the daunting task of reengineering the reverse-engineered République on PS4."
811,Rpublique,2016,http://www.gamasutra.com/view/news/269970/Postmortem_Bringing_Camouflajs_Rpublique_to_PlayStation_4.php,Republique,console mobile pc,action adventure,single,production,testing,"Playtesting République on PS4 was very difficult, and came way later than we’d hoped. Unlike PC/Mac, which we were able to begin showing to outsiders almost immediately, the PS4 version contained so many dramatic, system-wide changes that I knew we should hold off until they’d progressed past a certain point."
812,Rpublique,2016,http://www.gamasutra.com/view/news/269970/Postmortem_Bringing_Camouflajs_Rpublique_to_PlayStation_4.php,Republique,console mobile pc,action adventure,single,production,bugs,"we were forced to work around it, which meant partaking in the excruciatingly slow process of going line by line and meticulously scanning files for signs of the 111 bug before submitting."
813,Rpublique,2016,http://www.gamasutra.com/view/news/269970/Postmortem_Bringing_Camouflajs_Rpublique_to_PlayStation_4.php,Republique,console mobile pc,action adventure,single,management-people,crunch-time,"To complicate the time crunch in which we found ourselves, we were dealing with more République than ever."
814,Rpublique,2016,http://www.gamasutra.com/view/news/269970/Postmortem_Bringing_Camouflajs_Rpublique_to_PlayStation_4.php,Republique,console mobile pc,action adventure,single,management-people,team,"(...) we had five episodes worth of content to manage, but our QA team was the same size. Oftentimes with only two or three QA folks on the game, there just wasn’t enough time for adequate coverage."
815,Rpublique,2016,http://www.gamasutra.com/view/news/269970/Postmortem_Bringing_Camouflajs_Rpublique_to_PlayStation_4.php,Republique,console mobile pc,action adventure,single,management-feature,feature-creep,We began with an emergency motion capture session to get unique movements and poses for Hope that we never needed previously.
816,Rpublique,2016,http://www.gamasutra.com/view/news/269970/Postmortem_Bringing_Camouflajs_Rpublique_to_PlayStation_4.php,Republique,console mobile pc,action adventure,single,management-feature,cutting-features,"There’s trophies, rumble support, optimizing the game for PS4, making sure your game’s “save area” conforms to televisions properly, to say nothing of the hundreds of TRC compliancy issues that caught us by surprise. We were forced to overcome lot of unique challenges that resulted from Republique having not been originally designed for console."
817,Postmortem: Paradox Development Studios Stellaris,2016,"http://www.gamasutra.com/view/news/274018/Postmortem_Paradox_Development_Studios_Stellaris.php
",Stellaris,pc,strategy,multi single,production,design,"I also had to give up some of my favorite features, like adjacency bonuses on planet surfaces - all buildings of the same base type used to give each other an adjacency bonus until relatively late in development. (In the final version, you only get such a bonus from the planetary capital building.) We had to abandon the adjacency bonuses because of resource inflation; you used to bathe in Minerals and Energy Credits. I still feel bad about that because it makes planning your buildings less interesting... (...) I thought that we would relatively easily be able to adapt some of our best mechanics from games like Europa Universalis. In reality, it wasn’t easy at all. (...) This mechanic has worked very well for us in the past, but it wasn’t simple to translate to a situation where empire borders grow dynamically. (...) Is Stellaris a typical 4X or a GSG? Well, to be perfectly honest I’m not sure, it is a hybrid. This meant that we couldn’t take everything that we know works in a GSG and apply it to Stellaris, and we couldn’t apply all typical 4X elements either (...) Now, to deal with this lack of relatedness, we could have gone down the traditional route and made Stellaris about a few, pre-designed alien empires with very distinct personalities and backstories. However, we needed to keep the game Grand in scope, with many more playable entities than that. "
818,Postmortem: Paradox Development Studios Stellaris,2016,"http://www.gamasutra.com/view/news/274018/Postmortem_Paradox_Development_Studios_Stellaris.php
",Stellaris,pc,strategy,multi single,production,prototyping,"As a studio in the old days we used to live on a financial knife’s edge. (...) There was no room for compromise and no time to dick around with prototypes at the start of a new project. (...) We have grown too big and well established and need to start doing proper prototyping, with everyone realizing that it’s normal for some features to fail during this early, comparatively very cheap, stage of development. The failure to do this is, in large part, why Runemaster was ever announced (it should have been scrapped or reenvisioned much earlier, during a proper prototype phase.) And, of course, it would have made the development of Stellaris a much smoother ride. (...) I’m going to be blunt here; not doing proper prototyping is stupid, plain and simple. There are no excuses. Even if you can’t prototype everything, you can at least isolate some parts of a system that you can try out. It is always better to discover problems sooner rather than later. One of the systems that suffered for lack of prototyping in Stellaris was the fleet combat system."
819,Postmortem: Paradox Development Studios Stellaris,2016,"http://www.gamasutra.com/view/news/274018/Postmortem_Paradox_Development_Studios_Stellaris.php
",Stellaris,pc,strategy,multi single,management-people,team,We had a tiny team making games in 24 month (or often shorter) cycles
820,Postmortem: Paradox Development Studios Stellaris,2016,"http://www.gamasutra.com/view/news/274018/Postmortem_Paradox_Development_Studios_Stellaris.php
",Stellaris,pc,strategy,multi single,management-feature,scope,"Now, iteration and revision is an expected part of the process, but these challenges were a lot tougher than I had thought, and it’s only due to the dogged efforts of designers like Joakim Andreasson and Daniel Moregård that we pulled through."
821,Postmortem: Paradox Development Studios Stellaris,2016,"http://www.gamasutra.com/view/news/274018/Postmortem_Paradox_Development_Studios_Stellaris.php
",Stellaris,pc,strategy,multi single,management-feature,cutting-features,"We (or at least I) underestimated many of the mechanics that we thought would be fairly simple to nail. This mired us in design iterations too late in the development cycle. Although the game turned out great in the end, some of the more advanced design concepts suffered for it. Things like Federations, Alliances and Uplift - although functional on release - should have received more love."
822,Postmortem: Paradox Development Studios Stellaris,2016,"http://www.gamasutra.com/view/news/274018/Postmortem_Paradox_Development_Studios_Stellaris.php
",Stellaris,pc,strategy,multi single,management-feature,planning,"When we started out the development the general feeling was that we were quite certain of what game we were trying to make. After a while it however became pressingly clear that we were not certain on how the game should be played out, or how it should feel"
823,Postmortem: Stoic Studios The Banner Saga 2,2016,http://www.gamasutra.com/view/news/274238/Postmortem_Stoic_Studios_The_Banner_Saga_2.php,The Banner Saga 2,console mobile pc,rpg,single,production,tools,"Since Johns time was almost entirely consumed in creating new features and supporting localization and porting efforts, the content development tools didnt advance as much as they could have. Many of the irritants and inconveniences of the tools from the first game persisted throughout development. (...) Our heavy usage of Inkle Writer, however, has exceed its intended limits and causes problems on a regular basis. (...) The game engine itself is based on Adobe AIR, which is a fairly capable piece of technology. (...) The kicker is that its a total black box, and no source code license is available, so when something goes wrong, you may well just be screwed"
824,Postmortem: Stoic Studios The Banner Saga 2,2016,http://www.gamasutra.com/view/news/274238/Postmortem_Stoic_Studios_The_Banner_Saga_2.php,The Banner Saga 2,console mobile pc,rpg,single,production,technical,"The game content is almost entirely data-driven, but some of the systems, notably the ability system, has no tool to assist in its data creation. So combat abilities, some of the most complex behaviors in the game, have to be created by editing JSON in a text editor. There are other subsystems that likewise have no tool, and require manual JSON intervention. (...) One of the things that consumed a heap of Johns time was console porting. (...) This particular console porting house was not able to do gameplay enhancements like implementing the gamepad controller interfaces."
825,Postmortem: Stoic Studios The Banner Saga 2,2016,http://www.gamasutra.com/view/news/274238/Postmortem_Stoic_Studios_The_Banner_Saga_2.php,The Banner Saga 2,console mobile pc,rpg,single,management-people,delays,"In the meantime, the console porting company missed milestone after milestone. (...) As soon as the first major milestone was missed, we should have laid down an ultimatum and pulled the plug."
826,Postmortem: Stoic Studios The Banner Saga 2,2016,http://www.gamasutra.com/view/news/274238/Postmortem_Stoic_Studios_The_Banner_Saga_2.php,The Banner Saga 2,console mobile pc,rpg,single,management-people,crunch-time,"For all of our efforts to avoid it, we ended up once again falling into months of crunch. While I do believe that nothing great can be made without sacrifice, I am in opposition to the idea of jettisoning all the other import parts of your life for long periods of time. "
827,Postmortem: Stoic Studios The Banner Saga 2,2016,http://www.gamasutra.com/view/news/274238/Postmortem_Stoic_Studios_The_Banner_Saga_2.php,The Banner Saga 2,console mobile pc,rpg,single,management-people,communication,"When you are multitasking, it is very likely that the neglected or down-priority tasks are blocking other people from getting their work done effectively or on time. As with most games, each of the elements and systems depend on most of the others, inevitably creating circular dependencies and feedback loops. (...) Our team works completely remotely. Not a single member is in the same room with another. On top of that, we are spread out across the entire globe, from Australia, every time zone of North America, Europe, and reaching all the way to Russia. Despite our best efforts at creating a routine and maintaining constant communication, it often breaks down. The biggest problem with remoting is not being sure exactly when someone will get back to you with answers to questions or other requirements. Without diligent status updating, its impossible to tell if someone is at their desk or not. Wed like to come up with a way to more closely replicate the feeling of being in
a physical studio together, without doing something invasive like leaving the video chat room up at all times. "
828,Postmortem: Stoic Studios The Banner Saga 2,2016,http://www.gamasutra.com/view/news/274238/Postmortem_Stoic_Studios_The_Banner_Saga_2.php,The Banner Saga 2,console mobile pc,rpg,single,management-people,team,"A downside to having a small team is that each member is responsible for a wide variety of tasks. (...) The bulk of their team left the company, leaving the entire weight of the project on a single capable developer. The company hired several short term programmers, each of which jumped ship shortly after coming on board. After 6 months of turnover and churn, the porting company finally threw in the towel and abandoned their contract."
829,Postmortem: Stoic Studios The Banner Saga 2,2016,http://www.gamasutra.com/view/news/274238/Postmortem_Stoic_Studios_The_Banner_Saga_2.php,The Banner Saga 2,console mobile pc,rpg,single,management-feature,cutting-features,"After the initial development period, we had more and more difficulty in identifying parts of the game we could cut. It seemed like we had cut it as far as we could, and everything else just had to make it in by pure force."
830,Postmortem: Stoic Studios The Banner Saga 2,2016,http://www.gamasutra.com/view/news/274238/Postmortem_Stoic_Studios_The_Banner_Saga_2.php,The Banner Saga 2,console mobile pc,rpg,single,management-feature,planning,"We had some false starts, but a year later, with E3 2015 looming on the horizon, we started production in earnest."
831,Fatsharks Warhammer: End Times - Vermintide,2016,https://gamasutra.com/view/news/284228/Postmortem_Fatsharks_Warhammer_End_Times__Vermintide.php,Warhammer: End Times – Vermintide,console pc,shooter,online,production,testing,"We underestimated the testing and infrastructure investment necessary to complete the project in a smooth way, especially in the later stages of development. The main reason for underestimating the testing – we didn’t have help from a publisher. Another reason was that Vermintide was a much larger project than previous endeavors. (...) We had to make sure everyone at the company played the game daily in addition to adding external QA to bring stability up to speed in the end. It would have certainly paid off and saved us a lot of time if we’d set aside more resources for continuous integration and internal testing systems, including fine tuning our automated tests. With automated tests QA could have focused on other tasks and we would faster know if a certain map or feature were broken when running the automated tests. We also waited with large scale external testing until too late in the project, including compatibility testing, optimization, performance, tuning of progression and in game economy."
832,Fatsharks Warhammer: End Times - Vermintide,2016,https://gamasutra.com/view/news/284228/Postmortem_Fatsharks_Warhammer_End_Times__Vermintide.php,Warhammer: End Times – Vermintide,console pc,shooter,online,production,bugs,"We simply had not done self-published games on this scale before and underestimated the amounts of bugs that would rise from having up to 50 people working in the same files. A publisher with experience of delivering these type of high quality games would probably have seen that the amount of QA resources we planned for were too few. (...) Once released, we weren’t prepared for the amount of helpdesk tickets. The problem was exacerbated because it was hard to reproduce many of the hardware issues experienced. The flood of support issues was something one could call a luxury problem - an unavoidable effect of a very successful release in terms of sales. (...) We had a Beta on Xbox One the week before launch that helped us know more about the state of the game but it would have been beneficial to run Betas a couple of months prior to launch. This resulted in some unexpected matchmaking issues for some console gamers around launch which resulted in a lot of stress and hard work right after launch to fix these issues as soon as possible. Even though we were fixing those bugs as soon as we could, it hurt some of our reviews of the game. As the console platform owners have a quality check, which is great, the round trip can be longer than on PC when putting patches out."
833,Fatsharks Warhammer: End Times - Vermintide,2016,https://gamasutra.com/view/news/284228/Postmortem_Fatsharks_Warhammer_End_Times__Vermintide.php,Warhammer: End Times – Vermintide,console pc,shooter,online,management-people,team,"It’s certainly difficult to estimate a 2.5 year project’s exact needs in terms of staffing, and we learned again that time spent planning resources is never wasted. Despite our best efforts, certain positions were understaffed, which hampered the process or led to unnecessary delays. For example, we had too few designers in the project’s early phase, and on the production side only one. We could have definitely put two additional producers to good use. Another mistake was not continuously reevaluating the project’s needs and composition: as the team grew we didn’t properly adjust the lead structure, which led to periods of unclear communication and leadership. When it came to the final push to release the game, we were somewhat unprepared in terms of HR planning. Although several key project members became overworked in the last month of the project, we had reasonable overtime before that and no extended crunch periods. Every project, especially of this size, will be noticeably strained during the chaotic release period, which requires extra attention to scheduling and communication. (...) But, we should have had extra staff and outsourced resources on standby in case the release exceeded projections. Everyone on the team worked day and night answering questions at the help desk. As it turned out, our response times were very good, but it strained a team, which had just gone through a hectic period before the release. (...) Stability in the project up until spring/summer 2015 was unacceptable. There was an understandable frenzy to get things in and done, and it wasn’t properly balanced with resources fixing things that were broken. The number of people testing and working on bug fixes were too few in comparison to the large amount of features and content that had to be added to the game all the time."
834,Fatsharks Warhammer: End Times - Vermintide,2016,https://gamasutra.com/view/news/284228/Postmortem_Fatsharks_Warhammer_End_Times__Vermintide.php,Warhammer: End Times – Vermintide,console pc,shooter,online,management-feature,planning,The lack of Betas was mainly due to bad scheduling on our part and a maybe too tight release schedule for the consoles.
835,AuroraBound Postmortem and Sales Figures - A Modest Part-Time Success,2017,https://gamasutra.com/blogs/DanielOByrne/20170814/303637/AuroraBound_Postmortem_and_Sales_Figures__A_Modest_PartTime_Success.php,AuroraBound,mobile,puzzle,single,production,design,"I feel confident enough at this point to say that AuroraBound is a good game, and a lot of players seem to really like it - but it’s not a great game. It’s not exceptional or different in any major way and it has no major, unique hook to attract press or streamers. This made it very difficult to get the attention of the press and major platform holders or for it to stand out noticeably amongst other puzzle games."
836,AuroraBound Postmortem and Sales Figures - A Modest Part-Time Success,2017,https://gamasutra.com/blogs/DanielOByrne/20170814/303637/AuroraBound_Postmortem_and_Sales_Figures__A_Modest_PartTime_Success.php,AuroraBound,mobile,puzzle,single,production,technical,"One of my shameful little secrets as a programmer is that I love quickly writing terrible, throw away code and, since the editor was only ever for my use, I was able to throw the first version of it together in just a few hours. It looked terrible, and it ran even worse - for most of the project’s development it had a rather impressive memory leak of ~0.5mb a second that would eventually cause it to crash if I didn’t restart it… But for what I needed, it was perfect. Most of the editor actually ended up being rewritten several times (with equally appalling code) as the underlying structure of the puzzles substantially changed and it needed to be ‘updated’ to match. 3/12 Even with the editor, creating new puzzles manually was very time consuming. To fix this I ended up creating a level generator that could create new levels based off a small set of parameters such as target difficulty, color set, pattern set and distribution of rotatable tiles to movable tiles. When designing the generator, about 30 puzzles were manually created in the editor and then used to work out desirable puzzle traits (like symmetry and repeated patterns in the final solution ). These traits were then programmed into the generator. (...) I have even less musical ability than artistic talent, and since there was no sound budget, I was left to search through the various online collections of royalty free music and sound effects. The goal was to find or create something soothing and relaxing, but since there were going to be an infinite amount of puzzles, there was a very real risk of whatever was chosen eventually sounding repetitive. There were a couple of free music tracks which seemed to provide the desired atmosphere, but filling the app with enough to prevent the music getting repetitive would have bloated it’s size. I decided instead to try and write a simple musical generator that would procedurally create and play simple melodies, unique to each puzzle and world. (...) The basic idea was to get a collection of ~6 notes for a wide variety of orchestra instruments and then set up some basic parameters for how that instrument to play. (...) One of the first issues I had was that certain notes apparently just clashed and didn’t sound right when played together - a fact that I didn’t know about and had problem hearing on my own when it was happening. The note samples I had all came from a variety of different sources and as such were different qualities - requiring a lot of time spent in Audacity trying to normalise, amplify or reduce noise. A lot of time was also lost culling instruments that just didn’t give an appropriate sound (an organ for example, didn’t really seem to provide the relaxed atmosphere being aimed for). After about two solid weeks of making and iterating over the system, I reached a point where I just had to accept defeat, cut my losses and move on with other aspects of the project. The system was simplified a lot and set up to only play one instrument at a time while the overall volume of the instruments was reduced and the volume of the ambient pad loops I was playing them over was increased. The end result sounded okay, it even earned a few complements in reviews, but it never achieved the originally desired effect. I am convinced that an approach similar to the one I attempted could work for games like this, but I eventually had to accept that I just didn’t have the required time or aptitude to implement it. (...) Very early on in development, maybe a month in, I spent a few days creating a solver that, at the time, I was extremely proud of - it was probably the cleanest code I had written in years. Since this was a feature players would effectively be charged to use, a lot of effort went into making it as ‘efficient’ for them as possible. A single hint would effect a single tile, so it was designed to look over the current state of the board and programmatically find the shortest path to a correct solution from where the player was now by removing as few incorrectly placed pieces as possible. When it was done, it worked like a charm - always finding the best possible solution for the player… It just had one, tiny little (glaringly obvious in retrospect!) flaw… You see, when it was created all of the levels were hand-made and very small - but the puzzles would need to get a lot larger to provide an interesting challenge for most players. When tested later on with midsized levels the solver failed. Well, it technically still worked and found a perfect solution - it just took about half an hour to get there on a development desktop… Because of the multiple levels of recursion in the solver, each puzzle piece added resulted in a more than exponential increase in time taken to find a solution."
837,AuroraBound Postmortem and Sales Figures - A Modest Part-Time Success,2017,https://gamasutra.com/blogs/DanielOByrne/20170814/303637/AuroraBound_Postmortem_and_Sales_Figures__A_Modest_PartTime_Success.php,AuroraBound,mobile,puzzle,single,management-people,team,"When work started on AuroraBound, I was determined to finish and ship the game and not just add it to my huge list of unfinished prototypes and side projects. To do this, I adopted a hard and fast rule of working on it every day for 1-2 hours ( more on weekends ). I generally didn’t 7/12 allow myself any exceptions to this unless something unavoidable came up. I also never allowed myself to work for more than 2.5 hours on a given day, no matter how well or poorly things were going - I don’t crunch to finish projects, ever. This gave a clear amount of development time for the project, since the target timeline was six months, and it was possible to design, estimate and cut features to hit that target. At first, the system seemed to work very well, but about halfway through, I started noticing issues - my attention and motivation were lagging and the temptation to ‘just take today off’ was getting stronger. It wasn’t due to the work being done though - individual features were being finished every day or two and I was regularly swapping between different types of work (and if I really didn’t want to work on something, I just cut it). The simple fact was, I was burning out."
838,AuroraBound Postmortem and Sales Figures - A Modest Part-Time Success,2017,https://gamasutra.com/blogs/DanielOByrne/20170814/303637/AuroraBound_Postmortem_and_Sales_Figures__A_Modest_PartTime_Success.php,AuroraBound,mobile,puzzle,single,management-feature,cutting-features,"If you read my previous blog posts, you’ll know that I developed AuroraBound in my spare time and, in what can only be described as a game development miracle, it kept pretty much to the original estimates of 6 months for development. To do this, the core game design and mechanics were purposely kept as simple as possible and any ‘extra’ features that weren’t absolutely needed were brutally cut. When pre-production started, the rough goal was actually to make a space based RPG with a ship building & combat system loosely inspired by the Galaxy Trucker board game. The first thing prototyped was the ship building mechanic however - where you can only match up square component based on their connector types. I realized I was having fun just matching colored squares in a little grid and decided to cut everything else from the concept after a day or two and just focus on that. Not the easiest decision I have ever made, but since the main goal was to release a finished game, it was the right choice."
839,AuroraBound Postmortem and Sales Figures - A Modest Part-Time Success,2017,https://gamasutra.com/blogs/DanielOByrne/20170814/303637/AuroraBound_Postmortem_and_Sales_Figures__A_Modest_PartTime_Success.php,AuroraBound,mobile,puzzle,single,business,monetization,"You may have noticed that while the game has only 372 unique paying users, it has sold 2,483 IAPs - most users who make a purchase end up making several ( in a few cases over a hundred ). 72 users have spent over $20 in the game, while another 111 have spent between $5 and $20. The most popular IAP by far is the 25 hint pack for 0.99 cent, with some users purchasing it hundreds of times despite it being worse value that the other hint packs ( the 2020 hint pack for example is $19.99, and so would give 4 times the amount of hints per dollar as the 25 hint pack ) I’m not sure if this is due to me not making the value proposition clear enough or some users only wanting to buy enough hints to get them through the current puzzle. Unsurprisingly the least popular IAP is the ‘Tip the Developer’ gratuities, with 6 purchases in total. It was added it as an experiment in case there were users who wanted to support the app, but didn’t want to buy any hints. Despite only generating $10 in revenue, I am glad I included it as a few of the reviews reacted positively to it being there as an option. Besides, with other In-App purchases already hooked up, $10 pretty much covers the dev and localisation cost of adding the gratuity option as well."
840,The totalitarian puzzle-platformer Black The Fall,2017,https://gamasutra.com/view/news/307674/Postmortem_The_totalitarian_puzzleplatformer_Black_The_Fall.php,Black The Fall,console pc,platformer,single,production,technical,"Speaking of consoles, even though Unity is our best friend when it comes to porting, do bear in mind the TRC’s you need to meet for each platform. Complying with this thick set of rules can take longer than polishing to get a decent frame rate on Xbox One. Porting to consoles took us around four months -- double the anticipated two-month window we’d allocated for it -- though we had two strong allies: Adrian, our programmer dedicated to working on porting the game, and our second ally: Square Enix’s QA team, based in Canada. I can also dare to assume that if Square Enix Collective hadn’t been our publisher, somehow this TRC compliance thing would’ve taken even longer."
841,The totalitarian puzzle-platformer Black The Fall,2017,https://gamasutra.com/view/news/307674/Postmortem_The_totalitarian_puzzleplatformer_Black_The_Fall.php,Black The Fall,console pc,platformer,single,production,bugs,"Additionally, a bug we couldn’t have anticipated is that somewhere in the Steam back-end the game is recorded to have launched on July 4, 2014, rather than July 11, 2017. This severely affected the game showing up on any Steam chart or list. That was a worry because a lot of websites pull their data directly from Steam, and it also meant the game showed up as having launched in 2014 on Humble Bundle as well. We slowly figured all of this out after the launch and got it fixed, but the visibility you get on Steam for clean launching the game was forever lost to us."
842,The totalitarian puzzle-platformer Black The Fall,2017,https://gamasutra.com/view/news/307674/Postmortem_The_totalitarian_puzzleplatformer_Black_The_Fall.php,Black The Fall,console pc,platformer,single,management-people,communication,"Any collaboration you have, from a device acquisition to closing contracts, always try to anticipate gray areas and ask the right questions just to rain check if things can go as you expect them to. More often than not we have expectations based on best-case scenarios, and real live development of events can leave us disappointed. Also, never assume you’re the first person in the world that’s had a particular issue or need. Anything can be Googled and there’s a nice indie community online that will share recommendations or give a piece of advice if they’ve encountered something similar. (...) If you need something from someone else, don’t expect them to drop everything and make you their priority. You don’t know what their agenda is and sometimes our initial messages can get lost. If you urgently need something from someone else, don’t be ashamed to follow up with them, or their colleagues, by email or phone. Or ultimately look for alternate solutions."
843,The totalitarian puzzle-platformer Black The Fall,2017,https://gamasutra.com/view/news/307674/Postmortem_The_totalitarian_puzzleplatformer_Black_The_Fall.php,Black The Fall,console pc,platformer,single,business,marketing,"When you’re new in the development and the publishing business, you feel like trying it all, but some actions have long-lasting consequences. For example, launching your game on Early Access as a way of testing it out and see how the audience receives it. But we didn’t consider the game’s replayability, the prospect of completely changing the initial prototype after a couple of months or that we might launch the final game three years after Early Access. Our Early Access ran for about three months, but we had to close it as we were about to launch our Kickstarter campaign, which doesn’t fit in at all with the idea behind Early Access. (...) Steam is not something you can tackle overnight, nor is it a platform that you can trust will work to your advantage. It’s a brilliant, dynamic creature that can act as either your ally or your enemy -- it really depends on how well you read the documentation. Try and build a strategy and use it to your advantage, and bear in mind the algorithm changed significantly once Steam dropped Greenlight."
844,Valuable but not profitable: Garden Wars Postmortem,2017,https://www.gamasutra.com/blogs/CorySpooner/20170321/292481/Valuable_but_not_profitable_Garden_Wars_Postmortem.php,Garden Wars,mobile pc,strategy,multi single,production,design,"Even though I had taken an existing strategy mechanic, it still took quite a lot of time continually balancing things. Energy generation rates for different difficulties, scaling for multiplayer, making sure the AI was always balanced enough (because thats all I had to test against). Developing a full RTS would be extremely hard even if you were just remaking something - I cant even imagine how hard it would be to balance if the mechanics were completely original."
845,Valuable but not profitable: Garden Wars Postmortem,2017,https://www.gamasutra.com/blogs/CorySpooner/20170321/292481/Valuable_but_not_profitable_Garden_Wars_Postmortem.php,Garden Wars,mobile pc,strategy,multi single,production,tools,"Nearing the Steam release, I was running into multiplayer issues and leaderboard limitations, and the only solutions seemed to involve code changes and plugins. What that meant for me was: I needed to actually make UE4 C++ changes and compile the engine. Of course, this adds compile times to the mix, along with a more complicated engine upgrade process... and I dont really know what Im doing with visual studio either which was a tad scary. But even worse was: it meant I needed a Mac just to build and package for the iOS version (you can do everything from a PC if you dont recompile the engine). So that was more new territory for me. On top of that, there seemed to be a bug with deploying directly to my device from the Mac, and I really couldnt be bothered going through the steps needed to get support. So I just uploaded builds to testflight and installed it that way... which cumulatively added a lot of time. To rub salt in the wound - I probably didnt need the code changes in the end, and the extra plugins I used were for very small Steam/PC/Multiplayer features anyway, so I couldve avoided being a compiled project altogether! Next time, although itll have to be a code project eventually, Im going to avoid it for as long as possible to keep things simple."
846,Valuable but not profitable: Garden Wars Postmortem,2017,https://www.gamasutra.com/blogs/CorySpooner/20170321/292481/Valuable_but_not_profitable_Garden_Wars_Postmortem.php,Garden Wars,mobile pc,strategy,multi single,production,technical,"Multiplayer makes everything take 5 times as long, maybe more, in my opinion. Every little event or action that happens, you have to go through exactly whats happening on the server, whats happening on the client, and control it explicitely. It takes even longer when youve never dealt with multiplayer before, and youre on your own. Sheesh what a headache. It probably added 3-4 months of development time in total, I think. (...) Being more of a designer than an artist, I find it easier to re-create realistic or real-world stuff than actual drawing, so doing something in a toon art style was very hard and time consuming. I spent a fair bit of time learning Inkscape so that I could create all of the art in a scalable fashion."
847,Valuable but not profitable: Garden Wars Postmortem,2017,https://www.gamasutra.com/blogs/CorySpooner/20170321/292481/Valuable_but_not_profitable_Garden_Wars_Postmortem.php,Garden Wars,mobile pc,strategy,multi single,management-people,delays,"Even though it was a ""practice"" project, it took waaaay longer than it should have. I was aiming for something more like 6-8 months but it took about 13 months to get it Steam-ready, then it was another 4 months until the mobile release (I probably could have released it simultaneously but it just felt a bit rushed, and I didnt want to release with the Christmas flood)"
848,Valuable but not profitable: Garden Wars Postmortem,2017,https://www.gamasutra.com/blogs/CorySpooner/20170321/292481/Valuable_but_not_profitable_Garden_Wars_Postmortem.php,Garden Wars,mobile pc,strategy,multi single,management-people,team,"I wrote a fairly honest blog post about laziness and procrastination, but it seems I am still not extremely disciplined myself. Its quite hard to develop on a fine day at home when there has been a lot of bad weather and there is a lot of work outside that needs doing. And if Im honest, I have to say that when development gets tough, its much easier to just play a game of Age of Mythology than to actually solve the problem! Im also partial to a round of golf, which is very easy to come by here. I shudder to think how much time in total was spent on these kinds of things - I dont think it could all be cut out and replaced with actual development, but a lot of it could."
849,Valuable but not profitable: Garden Wars Postmortem,2017,https://www.gamasutra.com/blogs/CorySpooner/20170321/292481/Valuable_but_not_profitable_Garden_Wars_Postmortem.php,Garden Wars,mobile pc,strategy,multi single,management-feature,multiple-projects,"I spent quite a lot of time expanding on ideas for the next project, and doing prototyping. Particularly when I had run into a tough problem on the current game, its much easier to just think about something else. "
850,Valuable but not profitable: Garden Wars Postmortem,2017,https://www.gamasutra.com/blogs/CorySpooner/20170321/292481/Valuable_but_not_profitable_Garden_Wars_Postmortem.php,Garden Wars,mobile pc,strategy,multi single,management-feature,planning,"Despite writing a concise postmortem for Swing Racers and having the best intentions, I basically ignored most of my own advice and developed with very little planning or discipline. I didnt have tasks lined up and ready to go each day (nowhere near as well as I had on the previous project). This resulted in a lot of wasted mornings, only getting productive toward the afternoon because Id spent the first half remembering what my priorities were, or working on things that didnt really need to be done. Its amazing how quickly time disappears in thinking."
851,Gorescript Classic,2017,https://www.gamasutra.com/blogs/SergiuBucur/20170322/294276/PostMortem_Gorescript_Classic.php,Gorescript,pc,shooter,single,production,technical,"Collision detection and response was another huge issue to tackle. After reading every article I could find, I finally pieced together a working version using ellipsoid to triangle tests for the player and projectile collisions and 2D AABB tests for the monsters. It’s decent enough if you ignore the fact that monsters can’t step over each other, even if one of them is flying 30 feet above. That’s a Doom limitation which I gleefully added into my own engine, 20 years later. To tie it all together, I used a uniform grid scene graph instead of BSP trees. (...) One of the main complaints in the first half-year since its release was performance. It was quite resource-intensive and didn’t reach 60fps on most systems, so around Christmas 2014 I decided to pick it up again and try to improve the performance. Eventually, after a few weeks I implemented antiportal rendering, which proved to be a substantial boost. While not perfect, the game ran much better now on a significant slice of systems."
852,Gorescript Classic,2017,https://www.gamasutra.com/blogs/SergiuBucur/20170322/294276/PostMortem_Gorescript_Classic.php,Gorescript,pc,shooter,single,business,marketing,"The initial response was lukewarm, although I probably saw it differently at the time. People seemed to like it for the most part, and it even got praised by Ricardo Cabello (aka Mr.doob), the creator of three.js. Apart from the game being showcased on threejs.org and Chrome Experiments, it pretty much went under the radar. Since I had no further plans to develop it at the time, I moved on with my life."
853,Muse Games Guns of Icarus Alliance,2017,https://gamasutra.com/view/news/298271/Postmortem_Muse_Games_Guns_of_Icarus_Alliance.php,Guns of Icarus Alliance,console pc,shooter,online,production,design,"One last mechanical issue is the game’s teaching systems. Running an airship is a complex experience, and every crew member needs to be doing their job well, because their mistakes aren’t just frustrating for them but for the entire team. With that in mind, we built a complete tutorial system that can teach anyone how to be a valuable crew member. That tutorial has never been perfect, though. It’s gone through many iterations and tweaks, and even today we could go back and touch places where it’s probably too heavy handed or could be made more engaging. (...) The lesson, really, is that a tutorial system for a game this complicated is always going to be a massive design challenge, so give it the time and resources it needs."
854,Muse Games Guns of Icarus Alliance,2017,https://gamasutra.com/view/news/298271/Postmortem_Muse_Games_Guns_of_Icarus_Alliance.php,Guns of Icarus Alliance,console pc,shooter,online,production,technical,"We released Guns of Icarus Alliance on Steam in a way that has never been done before (gulp...) allowing players in two games (Guns of Icarus Online and Guns of Icarus Alliance) to contact each other in-game and share data, communications, and achievements across two Steam App IDs. (...) Unfortunately, since nobody had ever been foolish enough to attempt this before, nobody else had gone through the same experience to map out the territory. This was exacerbated by the fact that there was only do so much testing we could do on our own pre-release, so we went live on launch day and plowed straight into unknown waters. We ran into massive problems with Steam’s backend configurations (with our new, previously untried communications system - go figure!) with the main issue being that Alliance appeared to have nobody playing. This caused a chain reaction: nobody was able to review the game for the first three days, which in turn led to it appearing to be completely dead on arrival with no one owning or playing it, and this then led to Steam not featuring it on the front page of the store despite it being a top seller. We also did not do a good enough job explaining this to our players, which resulted in accusations of us trying to squeeze money out of players, so dismay and confusion were voluminous in our player base on launch day."
855,Muse Games Guns of Icarus Alliance,2017,https://gamasutra.com/view/news/298271/Postmortem_Muse_Games_Guns_of_Icarus_Alliance.php,Guns of Icarus Alliance,console pc,shooter,online,management-people,communication,"The problem was expectations. While Guns of Icarus Alliance actually delivered more than was promised based on the achieved Kickstarter stretch goals, some people definitely felt we under delivered. The negative feelings springing from this confusion and belief they had been let down were carried forward into the development process and through to release. We tried our best to make peace with the people who were disappointed, offering refunds and extra rewards, and tried to be as diligent as possible in responding to their messages. I think the primary lessons to take from this are twofold. First, establish tight, clear communication of your project’s scope and vision. Second, consider bootstrapping more in the earlier stages of development and try to run any Kickstarter campaign only after a solid design has been finalized. Some backers form a very fixed idea of what they are backing and will refuse to allow any slack or flexibility during the development process for the developer to adjust the project."
856,Muse Games Guns of Icarus Alliance,2017,https://gamasutra.com/view/news/298271/Postmortem_Muse_Games_Guns_of_Icarus_Alliance.php,Guns of Icarus Alliance,console pc,shooter,online,management-feature,planning,"With the scale and ambition of our project and the small size of our team, we failed to allocate adequate resources for localization, meaning that localization is now a near-impossibility within the existing game framework. It pains us to know that there are many players who had a difficult playing experience, and others who missed out on the game altogether, all because it only provides support for English-speaking players."
857,Muse Games Guns of Icarus Alliance,2017,https://gamasutra.com/view/news/298271/Postmortem_Muse_Games_Guns_of_Icarus_Alliance.php,Guns of Icarus Alliance,console pc,shooter,online,business,marketing,"In the months leading up to release we explored different possibilities through Steam, ranging from relaunching the existing Guns of Icarus Online store page to creating a new store page 10/14 connected from the old. Each had advantages but also significant risks and drawbacks. Following Steam’s recommendation about a month before release, we finally arrived at our current solution: release Alliance on its own store page with links from the old Online store page that tempt owners of the older game to visit the new page with a loyalty discount, and and also putting the old game on sale. This meandering route of new creations and adjustments to old assets created confusion in people who thought this was going to be a DLC. Quirks of the Steam system also meant that people who were entitled to a discount could only see it on the Alliance store page itself, which led to even more confusion. Because Guns of Icarus is a continuing series, many people would read the title in the subject line or headline of an email or newsletter and make assumptions about what Alliance would be. Many assumed it was just a minor expansion, like a map pack, and even today we face a lot of headwind. Yet, it’s also a great opportunity and a fresh challenge for us. With the new content that we’re planning, we’ll continue to have chances to re-engage with the players who owned Guns of Icarus Online. Each new content update will also present an opportunity to explore fresh ideas about how to reach out to players and the media."
858,KleptoCats Post-mortem,2017,https://www.gamasutra.com/blogs/AntonioUribe/20170329/294672/KleptoCats_Postmortem.php,Kleptocats,mobile,adventure,single,production,design,"An example at the beginning of development, due to the randomness of the game, there were many complaints from the players because the cats were bringing repeated objects. Although in the game when this happens we give more coins to the user, we wanted to do something so that the player did not feel like it was a mistake. To correct the issue, we decided to remove the repeated objects and instead show a bag of money, so it would be more obvious that we were giving more coins. It did not work as expected, although internally the game worked the same, many users complained because by only showing the money bag it was much more obvious when the cat was not giving you a new object. Not long ago we added another feature to the game where we showed a bubble with the description of the object that the cat brings, because of that, we decided that it was a good idea to return the repeated objects so the user could see again the descriptions that are an important part of the game. Again, it backfired, there were many complaints because the cats were bringing repeated objects and many thought it was a bug in the game. In all iterations about duplicate objects, things worked exactly the same, the changes were only graphical. Either way the fans always reacted in a negative way, which taught us that sometimes it is better not to pay too much attention to what they say and it is better to see how they act on it."
859,KleptoCats Post-mortem,2017,https://www.gamasutra.com/blogs/AntonioUribe/20170329/294672/KleptoCats_Postmortem.php,Kleptocats,mobile,adventure,single,production,technical,"Not everything went super smoothly, the Android feature got us a lot of attention and with that attention we were flooded with 1 star reviews because the game didn’t work on several low end devices. Those reviews put our game below the 4.0 stars threshold and it was dropped out of the feature. "
860,KleptoCats Post-mortem,2017,https://www.gamasutra.com/blogs/AntonioUribe/20170329/294672/KleptoCats_Postmortem.php,Kleptocats,mobile,adventure,single,management-people,team,"At the start of the development we weren’t in the best position. We were sad. The office had lost half of its people because the game we made before wasn’t the success we needed financially speaking, and we were a couple months away of losing the other half. All the people involved in the project thought that this was going to be the last game we made together as a team. (...) Even though to our standards KleptoCats was a success, after months of work and trying to do something new, we found trying to continue the project got tiresome. That’s why we decided after months of working, it was a good idea for the original team to move onto other things while the new members could take it and give it a fresh and different vision."
861,KleptoCats Post-mortem,2017,https://www.gamasutra.com/blogs/AntonioUribe/20170329/294672/KleptoCats_Postmortem.php,Kleptocats,mobile,adventure,single,management-feature,multiple-projects," Unfortunately, The Balloons (the prior project mentioned above which failed financially) was still under development during our exploration and our boss thought the prototype was kind of silly. So, before we got to explore these ideas further we archived the prototype in our “to do” folder."
862,KleptoCats Post-mortem,2017,https://www.gamasutra.com/blogs/AntonioUribe/20170329/294672/KleptoCats_Postmortem.php,Kleptocats,mobile,adventure,single,business,monetization,"The mobile market is a complicated platform. Not only do we get little respect in the industry, we also have to find a way to make money in an ecosystem that refuses to pay and is saturated with free high quality options such as Supercell, King and in recent months Nintendo with IPs like Pokémon and Mario. This topic could be explored even further but for now I do not want to get too distracted."
863,Leaving Lyndow,2017,https://www.gamasutra.com/blogs/DannyWeinbaum/20170508/297229/Postmortem_Leaving_Lyndow.php,Leaving Lyndow,pc,adventure simulation,single,production,design,"From a developers perspective, I feel game length is a bit of a paradox. The harder you work to hone the experience, cutting the weak parts, streamlining the tedious actions, the shorter the game becomes, yet the better whats left of it is, and consequently the greater the loss is felt for lack of content. Leaving Lyndow, for its shortness, is fairly dense. Much to the sorrow of many players, your avatar cannot run. Yet despite your movement being slow, the games pace doesnt feel slow, because within under an hour, you experience six entirely distinct environments, and five unique music tracks. Compare this to other adventure games, where you might see the same number of environments and hear the same number of songs but over the span of six hours. I believe its this density of audio visual content that makes each moment you spend in Leaving Lyndow exciting, but its exactly this density that collapsed the game into such a short play-time. (...) The most devastating mistake I made was the design of the character faces. I had in mind to do them part monkey, part human, and devised the cultural quirk that they cover their mouths (largely to avoid lip syncing the jibberish greeting lines each character dispenses when you speak to them). I have no problem with them looking hideous. I think we as a species would likely be better off if we minded looks less. My issue with them is that for all their hideousness, the design isnt creative, clever, or even iconic. Its bland and hideous at the same time. We likely would have done better to go full anthropomorphic, and put any other animal head on (an animal that isnt already so darn close to human anatomy). To make matters worse, the jaw line and mouth is an extremely important feature in facial recognition, and it became even harder to create distinct appearances for the characters"
864,Leaving Lyndow,2017,https://www.gamasutra.com/blogs/DannyWeinbaum/20170508/297229/Postmortem_Leaving_Lyndow.php,Leaving Lyndow,pc,adventure simulation,single,management-feature,scope,"I dont think this was so much a mistake we could have corrected, but rather an inevitable consequence of doing something as bizarre as we did.Leaving Lyndow is a short game that looks similar toEastshade at first glance, is set in the same world, is only 45 minutes long, yet its totally self-enclosed, isnot a demo, costs money, and has nothing to do with Eastshade mechanically. From a branding perspective, does it get more confusing than that? We knew this would confuse people, so we went through great lengths to make things clear in every press release"
865,Leaving Lyndow,2017,https://www.gamasutra.com/blogs/DannyWeinbaum/20170508/297229/Postmortem_Leaving_Lyndow.php,Leaving Lyndow,pc,adventure simulation,single,management-feature,planning,"I told myself I had one night to produce a prototype. If I didnt have a skeleton prototype that could be played start to finish by morning, Id end it right away. By 6 am Id accomplished just that. And rather handily! I knew it could be done. And once Id discussed it with my co-designer girlfriend, we verified the sanity of the idea from a business perspective. Even with all this sanity checking, my scheduling was off by double"
866,Leaving Lyndow,2017,https://www.gamasutra.com/blogs/DannyWeinbaum/20170508/297229/Postmortem_Leaving_Lyndow.php,Leaving Lyndow,pc,adventure simulation,single,business,marketing,"Given the low price point of $3.99 USD I decided to release without a launch discount. I thought discounting such a low price was unnecessary. After all, 20% off would have only been 80 cents less! In hindsight, I have a feeling this was a mistake. I can never know for sure how much damage it did, but I suspect we would have more than sold enough extra copies to compensate, and more importantly, we would have had a better chance of holding in the popular new releases list"
867,Post mortem for Meganoid 2017,2017,https://www.gamasutra.com/blogs/PascalBestebroer/20170420/296438/Post_mortem_for_Meganoid_2017.php,Meganoid,mobile pc,platformer,single,management-people,communication,"Some comments and replies I got thrown at me were along the line of ""a quick money grab"". My bad on writing the article and not being clear about things, so heres to rectifying it: The game was made in ""just 2 months; and 13 years of experience"". (...) The possible down-side of this is that a lot of people dont seem to be clear of understanding what ""Early access"" means on Google Play, so there was a lot more buying going on than I had planned for, and that means I was pushing updates daily to work out some ""obviouslybeta"" features. Early-access users cant leave reviews during that phase, so that might have been a positive thing, the down-side of that is that many people forget to leave a review once the game was released.. so not as many reviews as I normally have during the launch period. Not sure if I would do that again on Android, but its been an interesting experiment."
868,Post mortem for Meganoid 2017,2017,https://www.gamasutra.com/blogs/PascalBestebroer/20170420/296438/Post_mortem_for_Meganoid_2017.php,Meganoid,mobile pc,platformer,single,business,marketing,"The launch week I started looking at youtube streamers for the PC version, so I basically searched for big youtubers that covered games like: Spelunky, Meat boy, and a few other more recent pixel-art indie games that fit the same category as Meganoid. I mailed all of them, close to a 100, which at least one steam-key included (for some groupyoutubers I included up to 5 keys) and this all resulted in an awesome 0 streams. I did a follow up email to a large portion of them a week later, and this resulted in 1 Streamer playing it, yay results! (...) For some reason the game only showed up in the ""Games we play"" on Monday/Tuesday for the USA App-store, at which point it spiked to slightly below the launch spike so effectively doubling the sales in the 3/4 days it had that front page feature. Im pretty sure it would have done better if it did have that feature in the first-weekend (during the sale) but those things are pretty much out of my control and Im glad it eventually did get a feature after-all (something I kind had planned for in setting my revenue targets). (...) Game-site wise, well thats a mixed bag of thingies. As mentioned before, the game was made ""game of the week"" on Toucharcade, and it was part of the ""best games for iOS and Android"" that week on Pocketgamer. On the other side Toucharcades review gave it just a 3.5/5 rating, and Pocketgamer managed to give it a 7/10. So thats the same two websites already making for mixed-reviews. Not sure what to think about it, and its mostly the reason I focus on the average user-rating on app-stores since those people play the game even after a review. PC game sites pretty much ignored the game completely, except for a few news-posts on one or two sites. But the whole game-review-site business is something for another topic. In short, those sites only talk about your game if people are already talking about your game, or if theres something controversial to be found, because that brings in readers and thus advertising-money."
869,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,production,design,"Designing Poncho was tough. As well as designing each level plane and making sure things like jump distances and obstacle placement was perfect like any other 2D platformer, it had to be designed so that it would work in sync with basically 2 other levels that you can move freely in between. We had to make sure that puzzles and obstacles on one layer couldn’t simply be bypassed by shifting to another layer without some thinking. Additionally to make things more complicated for us, we wanted to make the game pseudo open world, so the player could choose to go left or right and still complete each area, with multiple paths and choices in which puzzles to tackle. So levels also had to work in a way where each plane would have to match up to the levels either side of the current one. Each “world” is made of a ring of levels, so by moving in one direction, eventually the player would be moving in circles effectively. This removed a lot of the stress of backtracking, instead of being at the end of a level and having to move all the way back from where they came, the player could take a shortcut by continuing to move in the same direction. (...) Additionally, instead of using a tile tool or something to create levels, I placed every single sprite by hand. That image above is before any decorative sprites like flowers or bushes are added, and there are hundreds of those in any given level. It took a very long time, but I wanted to do it that way in order to give the game a more “wild” look, as well as have absolute control on the visuals. Suffice to say, designing a game of this kind was a much bigger undertaking compared to other games than we could have ever realised when we first started. In hindsight, we should have made the game a little more linear and less ambiguous."
870,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,production,tools,"Before PONCHO, I had coded mainly for iOS and in C++. I had no idea how to use Unity, but decided it would be the best option since it had easy porting and was more accessible at the time than the Unreal engine. Throughout 2011 and most of 2012 we went through a bunch of prototypes, re-designs and recodings as I learned how to use the Unity engine more effectively."
871,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,production,technical,Porting from PC to console is not the same as porting from PC to Mac or mobile in Unity. It’s a lot of work.
872,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,production,bugs,"Until we realised there was a crash bug in our demo, which required us to get out a keyboard to reboot the game. It was awful, it was just like that scene from “Indie game: the movie” where Phil Fish is rebooting FEZ at PAX because the build keeps crashing. It was exactly like that, complete with us apologising and being like: “You can try again from the beginning if you want…”. About 75% of people never got it though, so it wasn’t too bad."
873,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,management-people,crunch-time,"In the Summer, me and Jack quit our jobs. There had been a lot of crunching at the studio I worked at in the spring, and development of PONCHO had been slow. Anyone who works in the industry knows how hard it is to come home and develop your own projects, when your day job is 60 hours a week minimum. Luckily I had saved enough money to sustain myself for awhile, and we finally went full time on the game. (...) Pressure was starting to build, we were all working very hard and stopped seeing friends. We stopped leaving the house. We stopped living. Nothing mattered except making this game as good as it can be."
874,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,management-people,team,"I had been a programmer for years. I thought I knew what it was to be tired after working weeks of crunch at studios. But I had never been so tired as I was at EGX. (...) After the first day, our legs felt like blocks of numbed wood, our throats was sore as hell, and it was also the day I took up smoking. (...) I started to smoke cannabis in order to just kinda cope with things. But, after months of pain, stress and general depression, we hit a release date. PONCHO was released on PS4 and STEAM on November 3rd 2015. After seeing the sales, we celebrated the release by writing out our CVs to start looking for a day job. It wasn’t nearly as much as we were expecting, even by a pessimistic standard. It was truly awful. (...) We pretty much stopped writing updates and social media posts, it was too depressing to think about. I had trouble holding jobs after going through a series of mental breakdowns."
875,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,management-feature,cutting-features,"It’s a been a long, almost 5 year journey that has changed us forever. Now, a year after the initial release, it’s time to spill the beans on everything we’ve been through. Before we do that, first we must say with a heavy heart that we’ve been forced to give up on the Vita port of the game. Things out of our control are stopping us from actually sending it to Playstation, and we have no choice but to cease development of it. Unfortunately, we can’t give any hard reasons for the cancellation without incurring some kind of legal penalty. (...) Originally, there were going to be about 3 times as many story scenes as there are currently. Unfortunately they had to be cut due to lack of funding. (...) Due to these events, we had no money, I lost my home, we lost our sony dev kits, I was thousands in debt and we had to cut a great deal of the designed content from PONCHO, including key characters and story elements in order to release something at least. And no one would help us. In a sense, what we released was not the full game, especially the PS4 version which was taken away and finished by another company. We were never even able to test the PS4 version before it was released either, later finding out changes had been made that we didn’t want and it was full of bugs. We even had to cut the reward for collecting all of the junkyard king’s minions, which was gonna give the player a bonus end credits scene. (...) A year after the initial release, we released the Wii U version which had similar result as the first one. We’ve since developed patches for the Wii U and PS4 versions while working new day jobs, but we have been prevented from actually handing them over to the platforms."
876,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,management-feature,budget,"I was thousands in the hole, and I had spent all my money on it without having a job. (Looking back on it, I was an idiot, but in a way I’m glad I did it). £22.5k was the goal we landed on for the Kickstarter. We figured it was the minimum we needed to finish off the game, I was fine with surviving instead of living for awhile to see it through. £22.5k between 3 people over 6 months is less than minimum wage, but we were prepared to do it. Only PONCHO mattered. (...) We launched the Kickstarter on the 2nd of September, 2014. (...) To go from 15% in one day to only get 2% on the next was worrying. And it continued. By the time the end of the kickstarter was drawing near, we were only at about 25% of our goal. (...) Well, I’m sure you can guess, but the Kickstarter failed. In the end we only got to 38% of our goal. This, was the turning point from optimistic game development, into a terrible, sinking, depressive state for all of us. We had no money. I was literally down to under £100 after EGX, we were banking everything on the publicity of the expo making the kickstarter a success. It did give a bit of a boost, but it wasn’t enough. (...) I took out more loans just to survive and finish the steam version of the game, as we were not able to attempt to try and secure funding elsewhere. (...) Forgetting the political and celebrity deaths aspects of 2016, it has been one of the saddest years of our lives. All that time. All that money. All that sacrifice. Nothing in return but huge debts. Money was never important to us, but we hoped to at least have enough to spend on another game full time."
877,PONCHO - A Postmortem,2017,https://www.gamasutra.com/blogs/DanHayes/20170106/288790/PONCHO__A_Postmortem.php,PONCHO,console pc,action,single,business,marketing,"First off, our hearts sunk into our stomachs when we saw the booth. It was cool and all, I mean, we were at EGX with PONCHO! But, it was literally the worst placed booth in the entire complex. It was right on the outside of a main booth area, on the second floor, where footfall was at it’s lowest. On the other side of the partition there were hundreds of people. On our side were people who might catch a glimpse of the game as they passed to make their way to the toilet we were next to. Yes, we were next to a goddamn toilet. I was furious, after spending just as much money as everyone else, we got far less value. To top it off, our booth alone was dark and had no lighting. In order to get press to play the game, we literally had to go out into the expo and grab as much press as we could and lead them to our own booth, because no one knew where it was. Additionally, due to the lighting situation, some press that wanted to conduct interviews couldn’t do it in front of our booth because it was too dark. That’s how bad it was. (...) Steam made me furious, upon releasing, we were in the new releases tab on the front page for about 3 hours, and then the game could only be found by searching for it or by it possibly turning up in someone’s recommendations. Slightly older games that had released earlier that day remained in that tab for days, and despite having a 90% review rating at the time, it seemed we weren’t selling enough copies in those few hours for steam to keep it on the front page. The Steam store isn’t much better than the Apple App store these days it seems. Also, the reviews were confusing. We have a metacritic score of about 65, but only based on 4 reviews. There are, in fact, over 50 reviews on the web, and the average is about 7/10. Not bad for a first game! But they were all over the place. Some reviews gave it a 5/10, citing it was too hard. Others, gave it 5/10 citing that it was too easy. Others gave it an 8 or 9/10 saying it was great. We didn’t really know what to think. But we did learn a lot. Maybe the reviews just went that way because of the game’s marmite feel. It’s worth noting that, despite having a publisher on board, none of the really big sites like Kotaku, PC gamer, IGN, Rock Paper Shotgun, etc, ever covered our game. Destructoid only covered us after we got in contact with them ourselves. So don’t think that having a publisher handling the marketing will make a difference when it comes to press actually replying to emails. (...) DO NOT DO GIVEAWAYS. You’ll get emails all the time from people saying they’ll market your game by giving it away. Even if you’ve only sold a few hundred copies, it’s not worth it. It won’t benefit anyone but the person doing the giveaway. (...) If you get a request from a youtuber who has a million subscribers, that should raise a red flag. Popular youtubers do not request keys. If you give them a key, your game will be all over torrent and pirate sites within a week."
878,Mimimis Shadow Tactics: Blades of the Shogun,2017,https://www.gamasutra.com/view/news/310894/Postmortem_Mimimis_Shadow_Tactics_Blades_of_the_Shogun.php,Shadow Tactics: Blades of the Shogun,console pc,strategy,single,production,design,"After showing our first graphical prototypes, we got a lot of feedback about the game looking too much like a mobile game. This was certainly not our goal when developing a PC/console title, but also came out to be kind of ironic as the first pitch for Shadow Tactics was for mobile and some of the graphical ideas had been explored around that idea. So ultimately it might have influenced our art style for the PC/console version in the beginning. (...) We accepted the feedback and pushed ourselves further into developing a less abstract art style, which we also felt was needed for creating a richer and more detailed game world. It turned out to be an unexpectedly long process until we landed on our final style, which then was also more time-consuming to produce. (...) Looking at other tactical/strategy games, most of them choose a photo realistic art style, which includes the old Commandos and Desperados games. We now assume that our art style being stylized instantly deters many hardcore tactics fans from even taking a closer look at Shadow Tactics. We only got some feedback about the graphics as being too “comical” but never determined how much influence this really has. We also missed the chance of doing AB tests in the beginning of the production for figuring out a style that would appeal to the majority of the real time tactics fans. On a more personal level of choice and taste, we are quite happy with the final graphics and also received a lot of positive feedback. And trying to create a “plain” realistic art style was not really an option for us at any time because it does not meet with the taste of our team and is also hardly manageable in production with a small team."
879,Mimimis Shadow Tactics: Blades of the Shogun,2017,https://www.gamasutra.com/view/news/310894/Postmortem_Mimimis_Shadow_Tactics_Blades_of_the_Shogun.php,Shadow Tactics: Blades of the Shogun,console pc,strategy,single,production,technical,"Bringing a classic PC genre with mouse and keyboard controls to consoles is a real challenge that thankfully some great games like Diablo 3 and XCOM: Enemy Unknown managed to overcome. While designing the console control scheme, we tried to support the habits of console players as much as possible because we did not want to overwhelm them with a new genre and new controls. This was not really possible though because some systems like freely moving, rotating and zooming a camera are rare on consoles and there is no controller standard for them. In the end we came up with the following layout on PS4. (...) There are some “natural” fits like square for killing and cross for jumping; some other common mappings like the shoulder buttons L1 for the skill-wheel and L2 for aiming. And then there is the right trigger R2 for activating the special camera mode which is not common at all because it is mostly mapped for shooting, acceleration or some other important gameplay input. So why did we choose the trigger? Because we needed a button that allowed stick movement while pressed and therefore only shoulder buttons were a real option and all other buttons were already taken by some more “natural” fits. Understandably this breaks the expectations of a console player and maybe it is even more problematic as the rest of the layout tries to stick to the “console conventions”. On the one hand we are still not sure if it was a good idea or not to map a complex and new feature like our camera controls to a button that players are used to doing so many other things with. On the other hand we think that it might have been just the right decision to confront the player in this way and make him more aware of the feature. Other problems were more clear however: We certainly missed the chance to give camera controls more space in the tutorial by having all trigger for tutorials in the same space as the PC version. For most cases this worked okay, which might also be the reason why we overlooked the fact that depending on the control input and the target audience, larger parts of a tutorial need to be different. We only changed the displayed text and pictures, but should have changed some parts of the tutorial structure as well."
880,Mimimis Shadow Tactics: Blades of the Shogun,2017,https://www.gamasutra.com/view/news/310894/Postmortem_Mimimis_Shadow_Tactics_Blades_of_the_Shogun.php,Shadow Tactics: Blades of the Shogun,console pc,strategy,single,management-people,team,"Our players and the Mimimi team would expect the DLC to be on the same level of quality as the main game. That means that our most experienced team members would have to be heavily involved instead of, let’s say, just finding an outsourcing partner or hiring new personnel. But everyone is already on the new project, which has even higher expectations to fulfill, and we are neither fans of crunch nor did we find any available cloning devices. For the sake of simply making sure that our new game won’t disappoint, we have to stay focused on one big task. So while the financial aspect plays a role, the dealbreaker here is really the available time we have. We would never consider releasing a subpar DLC just to make money. We probably should have done the DLC right after release, but hindsight is easier than foresight, and at that moment it simply didn’t happen."
881,Mimimis Shadow Tactics: Blades of the Shogun,2017,https://www.gamasutra.com/view/news/310894/Postmortem_Mimimis_Shadow_Tactics_Blades_of_the_Shogun.php,Shadow Tactics: Blades of the Shogun,console pc,strategy,single,management-feature,budget,"While the “all in”-success-story probably sounded romantic in some way, it was an absolutely awful experience. And we had predicted it: by adding four more months to the project, the game became much better, but all our savings were gone. When we realized that our backup plans for new projects didn’t work out as planned, we knew we were screwed. Because we exclusively focused on Shadow Tactics, we didn’t invest in any new pitches and had nearly nothing to offer to new partners. On top of that, they understandably waited for the release and the first weeks of SteamSpy data before they wanted to sign a project. (...) Although many fans are asking us for additional content and we’d love to deliver it, we simply can’t. It’s incredibly expensive to do so. The game features 13 different languages and completely spoken English and Japanese dialogue. We would have to translate the DLC to all of them and invest heavily to get back the original cast for the voice over recordings. Bug testing and running full QA would be another huge investment (this genre is a beast to test, due to the sandboxy structure of all the levels). Although Shadow Tactics is generating revenue, it can be questioned if we could ever recoup the investments."
882,Mimimis Shadow Tactics: Blades of the Shogun,2017,https://www.gamasutra.com/view/news/310894/Postmortem_Mimimis_Shadow_Tactics_Blades_of_the_Shogun.php,Shadow Tactics: Blades of the Shogun,console pc,strategy,single,management-feature,planning,"Mimimi was always a kind of safe haven, never having to let anyone go due to insufficient funds, always having at least a budget worth three months on our account. This was the first time we had been really unstable, and we knew it months before. Adjusting the workload without increasing the budget from a safe source was a risky and ultimately bad decision, because the toll this whole mess took on us was much higher than anticipated. I consider it a personal failure in not securing the potential follow-up projects with specific deal terms and signatures. This is something I normally always do, but for personal reasons and by trusting people I didn’t do at the time."
883,Mimimis Shadow Tactics: Blades of the Shogun,2017,https://www.gamasutra.com/view/news/310894/Postmortem_Mimimis_Shadow_Tactics_Blades_of_the_Shogun.php,Shadow Tactics: Blades of the Shogun,console pc,strategy,single,business,marketing,"A few weeks after launch, somebody from Germany visited our studio and told me how awesome our game was, but that he had only heard about it two weeks before and that our marketing was really bad. I replied: “We’ve been covered multiple times in all relevant German games media, both digitally and in print, since announcement and up to release. We’ve even been on some of the largest German Let’s Play and Stream-channels. Even international press like Rock Paper Shotgun and Kotaku featured us.” But that guy didnt use any of these channels, though he was very much a gamer and definitely part of our target audience. We actually both didn’t know how to reach him other than being on his favorite channels, which were far too exotic to be on our radar, and we just cant afford putting up posters on bus stops. Presenting the game at events post-release often highlighted the same issue: we think we had great coverage, but lots of potential buyers still never ever heard about our game. And while the demo was doing a great job, many gamers don’t even know that it exists. On Steam, we’ve found many people to be not even aware of the download option, probably due to it’s weird button-position outside of the “buy the game” section. There are still players waiting for a huge sale, because they want to test the game on their hardware … yet it’s only a click away. On PlayStation 4, we are not even showing up in the store’s demo category, because we chose to deliver a “trial” instead – which essentially is identical to our PC demo, but can be unlocked to the full version within the running game without downloading a new application. It’s a great user-experience without any of the usual friction included, but resulted in really bad store placement. Facing the whole “how do we sell our game in a cinematic, appealing way” situation, we really struggled to deliver anything that would explain the genre to newcomers. Our announcement trailer aimed for a cinematic approach with actual game visuals, but people complained about animations and graphics. Our release trailer then tried to go the CGI route to attract a larger audience but ultimately failed to gain people’s attention. A second CGI and more stylized console launch trailer followed the same fate, even worse, with both being a significant investment compared to the production budget. And, if you’ve watched the videos you’ll quickly realize, there wasn’t any actual gameplay trailer out for over six months after release – which was only delivered shortly before console launch and a result of no one having enough resources to do it earlier. We think it’s the first trailer that has a chance of really communicating how Shadow Tactics works and plays. In hindsight, I guess we should have focused on this gameplay trailer first and just lived with the fact that we can’t shoot a blockbuster trailer within the engine. CGI trailers need to be really big and expensive to still make a bang – or, you have to have an insanely clever idea that’s cost-efficient and goes viral."
884,Mimimis Shadow Tactics: Blades of the Shogun,2017,https://www.gamasutra.com/view/news/310894/Postmortem_Mimimis_Shadow_Tactics_Blades_of_the_Shogun.php,Shadow Tactics: Blades of the Shogun,console pc,strategy,single,business,monetization,"Given the success, it’s difficult to say whether investing all the money and resources, risking everything, was the right decision. We can only say for sure that we won’t do it again and we’d have to find a different solution – of course without the game suffering a loss in quality. That’s a dilemma that many developers are facing: going all in and potentially laying off your team is horrible, but so is releasing an unfinished game, because you can never make up for a bad first impression. Knowing that great and polished games are released every single day and still fail to make any money doesn’t improve the situation. We are grateful for the success we had and now it’s on us to keep delivering."
885,Making a Game Boy game in 2017: Sheep It Up,2017,https://www.gamasutra.com/blogs/DoctorLudos/20171207/311143/Making_a_Game_Boy_game_in_2017_A_quotSheep_It_Upquot_PostMortem_part_12.php,Sheep It Up,mobile,platformer,single,production,technical,"The most bare bone solution is to make your own “music player”. Remember, the only way to make sounds on a Game Boy is to set values to the hardware registers that controls the 4 sound generation channels. So you can quite easily make your own “music player” by storing “notes” in an array. (...) To be more specific, my “notes” are only played on the sound channel 2. Indeed, the 4 sound channels are shared for both sound effects and music. So, if you are playing a note on a channel, you can’t use it to play a sound effect at the same time. And, as each channel is somewhat “specific”, sometimes it may be preferable to use some channels for music only, while others channels may be reserved for sound effects. For example, the “scratching” sound that you hear whenever the sheep get attached to a flying strap is played on channel 4 (noise). As it’s a very common sound in my game, I decided to avoid using this channel for music. Same goes for channel 1 that I used for all the other sound effects. As my music skills are very limited, I choose not to use the waveforms of channel 3, and to focus on the tones of channel 2 instead (...) As you can imagine, Nintendo have discontinued manufacturing Game Boy cartridges (err.. I mean Game Paks) since a long time ago. So, two alternative solutions exists to make your own game cartridge today: The first one, named “cartmodding”, consists in recycling vintage Game Boy games. The games released during the Game Boy commercial era are stored on non-rewritable cartridges. So, to replace the game stored on it, you have to open it, desolder the memory chip, and replace it by another memory chip where you uploaded you own game ROM file. This solution allows you to create games of any size. But, as a game collector myself, I didnt want to destroy any Game Boy games to produce mine. So, the second solution is to build a new cartridge from scratch. As I know nothing about electronics, I started to search online for people able to build Game Boy cartridges. After several failed attempts, I was lucky enough to get in touch with Catskull. He’s a brilliant electronic wizard who build and sells a lot of Game Boy related hardware on his shop Catskull Electronics. Among others things, he designed a device to connect the Gameboy to a MIDI interface, enabling musicians to use Game Boy with actual instruments and synthesizers. He also designed his own Game Boy cartridge. For his cartridge, everything is manufactured anew: the PCB, the chips, the shells, and even the stickers are new parts - nothing is recycled from previous games. That was the perfect solution for me (...) Originally, the Game Boy console was designed to be able to access to 32KB of ROM data only. In order to have games with more than 32KB of data, you need to ""browse"" through all the data in your cartridge, by accessing only a subsection of the whole ROM data at a time. This method is called ""Bank Switching"": the whole ROM data is segmented in banks of 16KB each, and you can swap them out anytime you want (with some limitations). However, to be able to do bank switching, the cartridge need to have an additional chip on it: the “Memory Bank Controller” (MBC). Several chips exists (MBC1, MBC5, etc.), allowing for larger ROM sizes, battery-powered RAM for savegames, etc. Unfortunately, for now, there is no real solution to produce new cartridges from scratch with such a chip on it. So people who are creating homebrew games larger than 32KB are usually doing cartmodding, in order to reuse the MBC chip of the vintage Game Boy cartridge they are “recycling.” Another solution is to buy counterfeit copies of actual Game Boy games, and to reflash them. Indeed, since several years, Chinese manufacturers have been able to ""clone"" the MBC chip, in order to produce pirate copies of large games like Pokemon. And, as these pirate carts use EEPROM chips instead of the ROM chips found on vintage games, its usually possible to ""reflash"" them to modify the game stored on it. For that, you’ll need to use a cartridge flasher, such as the BennVenns Joey. Several homebrew games larger than 32KB have been released using this solution. "
886,Making a Game Boy game in 2017: Sheep It Up,2017,https://www.gamasutra.com/blogs/DoctorLudos/20171207/311143/Making_a_Game_Boy_game_in_2017_A_quotSheep_It_Upquot_PostMortem_part_12.php,Sheep It Up,mobile,platformer,single,business,marketing,"For starter, several people complained that the game wasnt available in a “boxed version.” As I collect retro games in loose cartridges (both for money and shelf space constraints), a boxed version didnt crossed my mind at first. But now, I realize that it would have been a good idea to offer it to people who asked for it. "
887,The Adventure Behind The Gallery: Call of the Starseed,2017,https://www.gamasutra.com/blogs/DennyUnger/20170410/295703/The_Adventure_Behind_The_Gallery_Call_of_the_Starseed.php,The Gallery: Call of the Starseed,console pc,adventure,single,production,design,"What we learned as we built our first roomscale demo was that smaller, more well-considered spaces with a tight narrative loop fit the format. We stepped back into the whole arc of The Gallery’s narrative and started to sculpt it down to be something more intimate. (...) The playtime also varied; for many, Starseed was a 2 to 3-hour experience. But players more acclimated to VR were less likely to stop and touch the roses, and could finish it in half the time."
888,The Adventure Behind The Gallery: Call of the Starseed,2017,https://www.gamasutra.com/blogs/DennyUnger/20170410/295703/The_Adventure_Behind_The_Gallery_Call_of_the_Starseed.php,The Gallery: Call of the Starseed,console pc,adventure,single,production,technical,"First came overcoming motion sickness during artificial rotations. We introduced snap turns (“VR Comfort Mode”) as a way to skip the perceptual hiccup of seeing movement while the inner ear doesn’t feel it. The only way to skip it was to literally skip it; skip increments of rotation. (We found our sweet spot to be at 10-degree increments.) We consulted for the Perceptual Psychologist at Oculus, and they ended up including snap turns in their Best Practices guide. Next was iterating hand interaction systems that just didn’t exist yet. We had to figure out how to manipulate, grab, carry, and use objects in a 3D space with virtual hands in a natural way. As well, we needed constraint systems. If you grab and turn a door handle in VR, for instance, your meat-space (aka real world) hand will move independent of that fixed object in virtual space, creating a cognitive disconnect. We found that we could trick the brain by giving the virtual hand some affordance to stick to the handle, even when the meat-space hand isn’t perfectly in place, and then unsnap it if it moves too far away. That process repeated with DK2 and positional tracking. Technologies improved, our team grew in size, and every time we were introduced to new hardware capabilities, we had to rethink design fundamentals. (...) When Valve brought us to a secret summit in 2014, everything changed. The implementation of roomscale was a dramatic shift in design. On the one side, it was a huge wave of relief; tracked hand input and full, volumetric movement was going to be ‘a thing’ with commercial hardware. On the other side, we had to reverse-engineer our entire game and reconstruct its framework to fit roomscale VR. Not only that, but as soon as we crossed the 90fps threshold, perceiving VR became like looking into a true representation of reality. Even if you’re holding up something cartoony, the smoothness of the motion makes your brain think, “Oh, that’s a real thing, it’s just painted to look cartoony.” It also meant that smooth, artificial forward traversal could make people feel ill or uncomfortable because peripheral vection was more easily perceived—an issue that only affected artificial rotation beforehand. So, how do we move an entire room through 3D space without artificially pushing it forward? And what happens if the player only has the carpet in front of their TV as their play area? What if they only have the space in front of their desk? What if they have a full living room? All of these questions came before Valve had time to introduce chaperone as the VR standard."
889,The Adventure Behind The Gallery: Call of the Starseed,2017,https://www.gamasutra.com/blogs/DennyUnger/20170410/295703/The_Adventure_Behind_The_Gallery_Call_of_the_Starseed.php,The Gallery: Call of the Starseed,console pc,adventure,single,management-feature,cutting-features,"When we launched Call of the Starseed alongside the HTC Vive in April 2015, we weren’t sure what the response would be. We worked countless long nights to meet that release date, and had to scope down many ideas that we just couldn’t make work in time."
890,The Adventure Behind The Gallery: Call of the Starseed,2017,https://www.gamasutra.com/blogs/DennyUnger/20170410/295703/The_Adventure_Behind_The_Gallery_Call_of_the_Starseed.php,The Gallery: Call of the Starseed,console pc,adventure,single,business,marketing,"At launch, the reviews were polarizing. There were comments that the experience was too short, or that we priced it too high at $29.99. Both were completely valid concerns from the public, but it was difficult for us to contextualize those comments, because every developer in VR had worked so hard and taken so many risks (financial and otherwise) to be there years prior. In the general Steam landscape, players expect that a game X hours long is worth X. It left us in a pickle, because we had to find a price to make a good ROI in a very small VR market."
891,Collaborating on an indie sensation - Cuphead,2018,https://www.gamasutra.com/blogs/PierreOlivierMace/20180410/316341/Collaborating_on_an_indie_sensation__Cuphead.php,Cuphead,console pc,action,multi single,production,bugs,"On the coding part, the biggest challenge we encountered was a crash on the parry jump which appeared a little before the end of the development. When you do a successful parry, there is a small pause, however, when you took a shot and died, the game would crash and it took us some time to find out what the problem actually was. Turns out the problem was a dependency between the player and the parry function: the player disappears but the function still needs it. The programmer in charge, Marc-André, told me it was complex to track down since Simon, our QA tester, was having a lot of trouble reproducing the crash. In cases like these, using breakpoints in Visual Studio to stop the game in runtime and see what’s happening in the code is your best option."
892,Another One Bites the Dust: Dynasty Feud Postmortem,2018,https://www.gamasutra.com/blogs/JonSanchez/20170623/300333/Another_One_Bites_the_Dust_Dynasty_Feud_Postmortem.php,Dynasty Feud,console pc,action,multi,production,design,"Dynasty Feud is a brawler, but an only multiplayer brawler. You can play the game on local or online, but you always need someone else to play. That can be a huge problem if the sales are low, because if you don’t have an active community that wants to play your game, the game will inevitably die."
893,Another One Bites the Dust: Dynasty Feud Postmortem,2018,https://www.gamasutra.com/blogs/JonSanchez/20170623/300333/Another_One_Bites_the_Dust_Dynasty_Feud_Postmortem.php,Dynasty Feud,console pc,action,multi,production,testing," Those efforts we did to be able to deliver on the online side were also more than we initially expected. Since this was the first time we were doing an online game, we did not know what it involved. The testing process for an online game scales exponentially, because factors like latency or connection loss can show up anytime. That is why for a small team like ours, you need to have a testing plan. We did have a plan for this, but since we were newbies in this area, we made lots of mistakes, or at least we could say we underestimated the amount of work just the testing would be."
894,Another One Bites the Dust: Dynasty Feud Postmortem,2018,https://www.gamasutra.com/blogs/JonSanchez/20170623/300333/Another_One_Bites_the_Dust_Dynasty_Feud_Postmortem.php,Dynasty Feud,console pc,action,multi,management-people,communication,"In our case, we ended up talking about Smash Bros as a reference most of the time (many media did the same too), which leads to confusion, because Dynasty Feud has actually very little in common with Nintendo’s brawler. We tried to find that awesome pitch for too long without results, so we got to a simple conclusion: probably not every game can have an awesome pitch."
895,Another One Bites the Dust: Dynasty Feud Postmortem,2018,https://www.gamasutra.com/blogs/JonSanchez/20170623/300333/Another_One_Bites_the_Dust_Dynasty_Feud_Postmortem.php,Dynasty Feud,console pc,action,multi,management-feature,scope,"Actually the initial plan of the development included an AI to battle against and we even started working on it. Until we realized that with 40 different characters, each one of them with different abilities and strategies, the tweaking was going to take forever, so we decided to discard it. "
896,Another One Bites the Dust: Dynasty Feud Postmortem,2018,https://www.gamasutra.com/blogs/JonSanchez/20170623/300333/Another_One_Bites_the_Dust_Dynasty_Feud_Postmortem.php,Dynasty Feud,console pc,action,multi,business,marketing,"Our approach for the testing was mainly going through a free beta, closed first and open later, so that anyone would be able to try the game and test it. One of the problems whenever you do a beta, if you want people to play it, even if it’s free, you need to do some marketing just for the beta in order to have a decent amount of players. We did not know the amount of players we would need to be able to gather data and consider the beta succesful, so we started the marketing blindly. (...) The worse aspect of having 18.000 subscribers was that it made us think that the marketing we were doing was somehow working, because we were able to get that many people in a really short period of time. Now we know that it was just a delusion. There are lots of giveaway communities where people share these kind of free betas and they spread really fast, our marketing had very little influence on that. (...) We even hired a PR company assuming they would give us advice on how to improve the marketing plan and that they would guide us throughout the process. Warning: PR companies do not work that way. I think they should, because they are supposed to have the know-how of the marketing side, but get rid of that idea. The only one who can market your game properly is YOU. (...) Steam is not the place where you want to do your marketing. You need to get the visibility outside and bring your traffic to your Steam page. Once you have that traffic and a good visit to sale/wishlist conversion Steam will add you to the positive spiral. Otherwise, since no one knows your game exists, it’s hard for anyone to buy it the first time they see it on the storefront and Steam will bury you."
897,Another One Bites the Dust: Dynasty Feud Postmortem,2018,https://www.gamasutra.com/blogs/JonSanchez/20170623/300333/Another_One_Bites_the_Dust_Dynasty_Feud_Postmortem.php,Dynasty Feud,console pc,action,multi,business,monetization,"New potential players will buy the game, wait for someone to play online, get frustrated because they found none, exit the game and refund."
898,"Outrealm Post-Mortem, Part 1",2018,https://www.gamasutra.com/blogs/NickThandi/20180206/314372/Outrealm_PostMortem_Part_1.php,Outrealm,pc,roguelike,single,production,tools,"Something I didn’t realise is just how important choosing the correct game engine is. Your game engine shapes your entire development and limits what you can and can’t do. In this matter, I chose poorly. This isn’t a jab at Game Maker Studio: The software I used. It just means that I, the developer, chose poorly. In my case, picking GMS limited me in two major ways. It stopped me from being able to release Outrealm on the Nintendo Switch, and it stopped me from implementing multiplayer. Not that GMS does not support multiplayer, quite the opposite. But I didn’t have the skills or time to implement it. Choosing a different engine (Unreal 4, for instance) would have let me, me specifically, achieve those two goals. GMS was perfect for me when I was first learning how to create games. It lets you rapidly prototype game concepts. You can take an idea and turn it into a game quickly and easily. It’s very strong for developing single player 2D games for PC, Xbox, PS4 and Mobile. And even with my criticism, GMS made laying a lot of the early groundwork very easy. I traded early development strength for later limitations. At the time I felt that it was a good decision, but now I am paying the price near the end of development. 7/10 This also applies to all tool choice. Choose wisely! Don’t take the easiest path, make the best decision for the long-term. Take some time and make an educated, calculated choice. Of course, actually being able to make the correct choice all comes from experience."
899,"Outrealm Post-Mortem, Part 1",2018,https://www.gamasutra.com/blogs/NickThandi/20180206/314372/Outrealm_PostMortem_Part_1.php,Outrealm,pc,roguelike,single,management-people,team,"Let’s start with the biggest, most glaring mistake I made when developing Outrealm. Everything else pales in comparison to this one. Trying to do it all by myself. And I mean ALL. Everything from the coding, art, design, music and even some SFX (Although I did mostly use creative commons sounds!). (...) When developing Outrealm, I felt like I was spreading myself too thinly. I have always felt that broader work is more difficult than deeper work. I would rather do a large amount of one task, as opposed to smaller amounts of more varied tasks. I’m not sure if this is the same for everyone, so I’m chalking it down as a lesson purely about myself. Unless you are just starting out, or doing this as a hobby only, I would advise against going it solo. If you’re just tinkering with a new engine, or making your very first ever game project. However, if you’re in any way serious about game development or the product you’re making, then I would highly advise you to work with others. Those others could be anyone. A friend of yours. A publisher. But getting help will lessen the load by a huge margin. (...) If you are constantly growing and improving, then your work standards are also rising. So if you work on a project for long enough, you will eventually feel the need to redo your older work. This is a problem I had never encountered before, since I only worked on multiple smaller projects. As a commercial project, you have to release at some point. Which means that at some point, you will have to compromise with yourself. Nothing you create will ever be finished, it will never be perfect and it will never be representative of what you feel is your “best work”. That’s something we all have to accept eventually, otherwise we will keep working on the same project forever. (...) By limiting myself to a team of one, I was secretly hoping that when people looked at my game, they would say “Well, it’s pretty good for a game made by one guy”. (...) So what does this have to do with putting myself out there? It means from day one, I was afraid to put myself out there. Really show my skills with nothing to fall back on. I was absolutely terrified to show off my work. Thinking about it now, instead of giving myself excuses for failure, I should’ve given myself reasons to succeed. I had to stop sabotaging myself."
900,"Outrealm Post-Mortem, Part 1",2018,https://www.gamasutra.com/blogs/NickThandi/20180206/314372/Outrealm_PostMortem_Part_1.php,Outrealm,pc,roguelike,single,business,marketing,"Lastly, thinking about your game as a product will get you thinking about things such as cost, placement and marketing material. These are often inconvenient thoughts that get pushed back to later. Speaking for myself, I was so caught up in the actual development that I never considered these things until much later. The easiest way to get this opinion is to ask someone else. Would you buy my game? Would you recommend it? Why? Why not? Start marketing early: as early as you have something worth showing off. Reddit, Imgur and Discord are all places to make yourself known. By going public early, you also create accountability for yourself. Let the expectations of others drive you forward. Now, full disclosure. I did basically none of the things in the above paragraph. Learn from my mistakes! (And get advice from people much better at marketing than me)."
901,Chasing Carrots Pressure Overdrive,2018,https://www.gamasutra.com/blogs/PatrickTejada/20180322/315717/Postmortem_Chasing_Carrots_Pressure_Overdrive.php,Pressure Overdrive,pc,racing,multi single,production,tools,"The physics simulation had to be rebuilt in Unity, but the difference between Havoc (Vision) and PhysX proved to be a problem, in particular, the so-called WheelCollider, a PhysX-specific abstraction for the wheels of vehicles, because it had a major effect on the driving behavior of all vehicles in the game. Lots of extra code had to be written for the vehicles to act the way our game design intended. There were obstacles for the weapons and effects in this area as well, some of which made the project structure more complex than it needed to be. We would have had to test alternative approaches for the physics, e.g. more 2D physics, and then maybe we could have retained the online multiplayer mode from the original. But under the circumstances, it was extremely difficult to synchronize the game on two computers. There are techniques for expanding the simulations of the physics engine on the server, and they are often used by AAA titles in such situations to compensate for lags in the internet connection. Unfortunately, this method isn’t possible in Unity with the standard physics engine PhysX. Abandoning online mode was no easy choice, but sadly our situation required it. (...) Porting to a new engine, including many optimizations and a multi-platform release is no walk in the park."
902,Chasing Carrots Pressure Overdrive,2018,https://www.gamasutra.com/blogs/PatrickTejada/20180322/315717/Postmortem_Chasing_Carrots_Pressure_Overdrive.php,Pressure Overdrive,pc,racing,multi single,production,technical,"Pressure Overdrive was supposed to run on both the PS4 and Xbox One at 60 fps with a resolution of 1920 x 1080, which ultimately not only required optimization of the physics but also of the graphics. While “profiling” it became evident that we had too many draw-calls per frame, which resulted in optimization of the textures, meshes, and materials."
903,Chasing Carrots Pressure Overdrive,2018,https://www.gamasutra.com/blogs/PatrickTejada/20180322/315717/Postmortem_Chasing_Carrots_Pressure_Overdrive.php,Pressure Overdrive,pc,racing,multi single,production,testing,"We also should have planned out our playtesting better and earlier on. (...) Despite all of the tests we missed details that would have improved the game experience even further. It took a little step back, some surprisingly analytical let’s-plays, and the abundant sessions at Gamescom to open our eyes to some aspects."
904,Chasing Carrots Pressure Overdrive,2018,https://www.gamasutra.com/blogs/PatrickTejada/20180322/315717/Postmortem_Chasing_Carrots_Pressure_Overdrive.php,Pressure Overdrive,pc,racing,multi single,production,bugs,"Pressure Overdrive was the first commercial product that we developed with Unity. In some aspects, this left us on uncharted territory. Even when the tasks were very clearly distributed among the team, certain project structures became too complex over time, too entangled, and that came with consequences. As we were gearing up for finalization, bug fixing became a hot issue. We not only learned that many bugs that had already been fixed were popping back up, but some fixes resulted in new bugs. Instead of shrinking, our Trello lists temporarily got longer. It took a lot of time and was simply frustrating. At this point, all we could do was accept and maintain a certain level of chaos."
905,Chasing Carrots Pressure Overdrive,2018,https://www.gamasutra.com/blogs/PatrickTejada/20180322/315717/Postmortem_Chasing_Carrots_Pressure_Overdrive.php,Pressure Overdrive,pc,racing,multi single,business,marketing,"Steamspy reports a rather surprising number of owners of Pressure: over 700,000. This seems to contradict the story first described by TopWare. Unfortunately not: until their rights to Pressure expired, TopWare mass-distributed keys throughout the entire world for almost nothing. That left a bitter taste in our mouths. (...) Sadly, our story-related, hand-crafted give-aways for selected journalists and streames did not help our marketing much."
906,Chasing Carrots Pressure Overdrive,2018,https://www.gamasutra.com/blogs/PatrickTejada/20180322/315717/Postmortem_Chasing_Carrots_Pressure_Overdrive.php,Pressure Overdrive,pc,racing,multi single,business,monetization,"The current sales numbers are loud and clear: just over 15,000 units is a disappointing figure. We used our opportunities and circumstances as well as we could, but a lot of it fizzled into nothingness. We are still looking for the answer to the “why”."
907,Cultist Simulator: the retrospective,2019,https://www.gamasutra.com/blogs/LottieBevan/20180716/322016/Cultist_Simulator_the_retrospective.php,Cultist Simulator,mobile pc,roguelike,single,production,design,"The most contentious decision of the whole project was whether to include a tutorial or not. Alexis was dead set against it: it was fundamentally at odds with Cultist’s design. Our publisher, myself and a bunch of beta testers worried that without a tutorial, people wouldn’t know what the hell was going on. Alexis was right. Tutorials have been mentioned in almost every review of the game, but most of them say that they understand why there isn’t one, and approve of the decision. But the testers, our publisher, and myself were right, too: there was a problem. We’d originally intended the last month of development to be spent adding additional Legacies into the game, but Alexis instead ended up having to go through the text to add clues. These breadcrumbs had to be obscure enough that they didn’t undermine the rest of the game’s design, but apparent enough to lead all players usefully from objective to objective. We also spent a bunch more money and time on improvements to the UI system, so these too would lead the player subtly but constantly through the game."
908,Cultist Simulator: the retrospective,2019,https://www.gamasutra.com/blogs/LottieBevan/20180716/322016/Cultist_Simulator_the_retrospective.php,Cultist Simulator,mobile pc,roguelike,single,production,bugs,"My takeaway here honestly is to book in a goddamn holiday before our next launch, so Alexis doesn’t get that torrent of negativity when he’s already tired and worried and painfully aware of all the flaws in the game (have you ever seen a designer sit back at launch and go, yup, happy with that?). We also need to set up a more coherent feedback process, so it doesn’t manifest as a deluge of DMs to Alexis’s Twitter account, or an unwieldy number of support tickets, or a bitter taste in the backs of our mouths when we’ve just had a release more positive than we’d ever dared dream. We’ll also devote more time to closing in our next project, so there’s a higher level of polish and a lower chance of getting avoidable UI/UX tickets."
909,Cultist Simulator: the retrospective,2019,https://www.gamasutra.com/blogs/LottieBevan/20180716/322016/Cultist_Simulator_the_retrospective.php,Cultist Simulator,mobile pc,roguelike,single,management-people,team,"There’s lots of work when you’re the only two people on a project full-time. Working with your other half in your shared flat is also, as you might imagine, quite intense. On top of that, we committed early to getting the game out by the 31st May, which meant we sat beneath a ticking clock for the whole of development. This caused some tension between design and production, most of which resulted in a better outcome than either could have achieved on their own, but some of which caused some grumpiness between us. We wanted this constraint, because we wanted to make sure Cultiststayed small and experimental. But it did mean we had to section off a bunch of great creative ideas for post-launch consideration. (...) Let me first just say: we worked with a number of freelancers on Cultist Simulator and they were all great. Our mistake was our freelance pipeline, not our beloved freelancers themselves. Ten different freelancers worked on Cultist Simulator, and most of them doubled up in some way (we’ve had three UI/tech freelancers, for example, and four people created our in-game art assets). This surprisingly high number is primarily because coherent, consistent production didn’t happen until the Kickstarter in September 2017: prior to that, Cultist had been this weird tinkery side-project Alexis had been playing with in his downtime in between his own freelancing gigs. We started off with some freelancers who then weren’t free when we came back to them six months later; other freelancers had their own projects and personal commitments which meant they weren’t always on tap. The end result is that we didn’t end up with the same level of consistency we’d have had if we’d commissioned fewer freelancers for the whole duration of the project. Next time, I think we’d be better off either committing sooner to ongoing, uninterrupted production, or waiting to work with freelancers until we had a constant development road ahead of us."
910,Cultist Simulator: the retrospective,2019,https://www.gamasutra.com/blogs/LottieBevan/20180716/322016/Cultist_Simulator_the_retrospective.php,Cultist Simulator,mobile pc,roguelike,single,management-feature,cutting-features," The release build of Cultist doesn’t contain all the fun stuff we’d have ideally wanted, if we were operating in that magical wonderland of infinite money and time."
911,Cultist Simulator: the retrospective,2019,https://www.gamasutra.com/blogs/LottieBevan/20180716/322016/Cultist_Simulator_the_retrospective.php,Cultist Simulator,mobile pc,roguelike,single,business,marketing,"Cultist Simulator was designed to be a niche game. It was not designed for mass-market appeal, but mass-market was exactly what we got when we went to Steam #1 and started getting front-page store billing. The direct result of this was that our user reviews took a beating. (For the love of the Hours, if you like the game and fancy leaving a positive Steam review, please do!) We’re currently hovering at around 73% positive, which isn’t terrible, but certainly doesn’t reflect the generally very positive reception we’ve seen elsewhere. We hope this will trend upwards over time, as people find Cultist via genre filters and recommendations. But we’re not very happy about it right now. (...) With the exception of post-launch production, I didn’t plan for this at all. It’s one of those things where as soon as you say it, it’s incredibly obvious that you should have planned for it, you total moron. I should have a bunch of social media lined up to keep our momentum; I should have sales and storefront plans to keep Cultist relevant once our launch-week offers expire; I should have paid ads, press articles and podcast interviews booked in to capitalise on launch visibility. But I don’t, because we both worked flat out to get Cultist ready for launch, and I’ve never been in charge of a game’s marketing before. Don’t Do What Donny Don’t Does, kids! We had a basic but useful marketing plan for the duration of development: ‘this month is about getting press previews’; ‘we should shout about Perpetual Edition here’. That ran out in the first week of June, when apparently I stopped selling our game. We’ve had a good enough launch that this hasn’t damaged the studio’s prospects, but I bet we could have made more money and more noise if I’d had the foresight to see beyond release."
912,Das Geisterschiff Postmortem,2019,https://www.gamasutra.com/blogs/RomanusSurt/20190412/340291/Das_Geisterschiff_Postmortem.php,Das Geisterschiff,pc,adventure,single,production,design,"Due to low amount of artwork the amount of NPCs and chatter had to be cut down to the barest minimum. While this decision may have turned away story-oriented players, in the end, it added to the barren, lifeless atmosphere that we wanted to create."
913,Das Geisterschiff Postmortem,2019,https://www.gamasutra.com/blogs/RomanusSurt/20190412/340291/Das_Geisterschiff_Postmortem.php,Das Geisterschiff,pc,adventure,single,production,technical,"Due to the way the graphics style is implemented, the level design process took a lot of time and felt like designing two similar levels at once. Eventually, due to limitations of development hardware (a cheap laptop from 2010), the levels had to be cut down into smaller pieces, which eventually worked to our advantage, as it allowed designing multi-layered dungeons from tiny segments. Even with that in mind, it wasnt as quick and enjoyable as putting together a Doom or even a Quake level, and thats something that we must address in our next game. (...) There were other hurdles, as we could not decide the right date for the Steam release due to lack of familiarity with its inner workings. In the end, DG launched on November 24 on Steam -- even though we expected it to launch there about a month later."
914,Das Geisterschiff Postmortem,2019,https://www.gamasutra.com/blogs/RomanusSurt/20190412/340291/Das_Geisterschiff_Postmortem.php,Das Geisterschiff,pc,adventure,single,management-feature,scope,The game used to shift a lot during the development due to various roadblocks along the way as it became apparent that some content and features required more time or resources than we could allocate.
915,Das Geisterschiff Postmortem,2019,https://www.gamasutra.com/blogs/RomanusSurt/20190412/340291/Das_Geisterschiff_Postmortem.php,Das Geisterschiff,pc,adventure,single,management-feature,cutting-features,"The project had to be refocused too many times to fit into the design and resource limits, and because of that the story had to be simplified until it became just a background and glue for the gameplay and levels, which, on the bright side, forced us to make them work better on their own"
916,Das Geisterschiff Postmortem,2019,https://www.gamasutra.com/blogs/RomanusSurt/20190412/340291/Das_Geisterschiff_Postmortem.php,Das Geisterschiff,pc,adventure,single,management-feature,multiple-projects,"Most of the time DG was a part-time project, and working on it full-time would give more time to develop better solutions instead of relying on fastest in terms of development time, which worked, but hurt our workflow in one way or another."
917,Das Geisterschiff Postmortem,2019,https://www.gamasutra.com/blogs/RomanusSurt/20190412/340291/Das_Geisterschiff_Postmortem.php,Das Geisterschiff,pc,adventure,single,business,marketing,"Due to its unique nature, DG proved to be harder to market than we expected. The majority of similar games were too old to be referenced and too obscure to catch even the old school players. How many of you have heard of Carmine, the spiritual predecessor of DG? Yeah, right."
918,Hero-U: Rogue to Redemption Postmortem,2019,https://www.gamasutra.com/blogs/RobertaVaughan/20190404/340065/HeroU_Rogue_to_Redemption_Postmortem.php,Hero-U: Rogue to Redemption,pc,rpg,single,production,technical,"Hero-U had a very granular time system. The clock was always ticking. Classes, dinnertime, and bedtime all took place on a set schedule. Usually the player character was forced to go to bed at 1am, but some events had him up late at night. In concept, this was really cool. This was how the Quest for Glory clock worked; it was realistic. Most simulation games and JRPGs have a very abstract concept of time; either an action takes no time, or it takes the entire night. This allows for time optimization logic puzzles, such as maximizing all of the social links in Persona 3, but it doesn’t allow for flexibility and roleplaying. Hero-U, in contrast, gave you several hours in the afternoon. You could spend time in the practice room, or run around the castle to wrap up an errand for the school receptionist, or grab the school supplies you need from the store in the basement, and then still make your elective class. It turned out that this was a nightmare to code, and a nightmare to design for. The beginning of the game felt overwhelming for a lot of players; the constant sense of the clock ticking discouraged exploration. The ending was also a bit empty, and there were sections of the game that were just slow. I fixed dozens of bugs where staying up past midnight broke scripting conditionals and made the game think the plot had already advanced to the following day. (...) The character models weren’t compatible with Unity’s Mecanim animation system, which was released in the middle of our production. While we hired an animator who was able to make a lot of improvements, cutscenes were often flat because it was difficult to animate the NPC rigs within Unity. Shawn’s weapons and armor didn’t show up in the gameworld, which many playtesters reported as a bug. In fact, his model was never “generic” enough to easily accommodate costume changes, even with texture swapping. (...) We launched only in English, and localized versions might improve sales. However, localization is expensive due to the huge amount of text and dialogue in the game and the many puns, jokes, and pop culture references."
919,Hero-U: Rogue to Redemption Postmortem,2019,https://www.gamasutra.com/blogs/RobertaVaughan/20190404/340065/HeroU_Rogue_to_Redemption_Postmortem.php,Hero-U: Rogue to Redemption,pc,rpg,single,management-feature,feature-creep,"We were focused on getting a playable demo for the Kickstarter, but there was clearly much more than a year of development time left to have a finished game. The scope had also increased. The original Hero-U pitch had been a 2D puzzle/RPG, which would have been relatively easy to program. But the backers, by and large, wanted something that was more like Quest for Glory. "
920,Hero-U: Rogue to Redemption Postmortem,2019,https://www.gamasutra.com/blogs/RobertaVaughan/20190404/340065/HeroU_Rogue_to_Redemption_Postmortem.php,Hero-U: Rogue to Redemption,pc,rpg,single,management-feature,planning,"By the time the programming team was assembled, the game script had already been written, the character models were already in the game, and most of this was final. This led to a lot of issues that couldn’t cheaply be solved, because so much of the game’s budget had already gone into creating the assets we had. (...) We were able to redo much of the game art-- including the user interface, 3D environments, and in-game vignette paintings-- but all of this should have been something the designers accounted for in pre-production, not something that came up at the last minute."
921,Hero-U: Rogue to Redemption Postmortem,2019,https://www.gamasutra.com/blogs/RobertaVaughan/20190404/340065/HeroU_Rogue_to_Redemption_Postmortem.php,Hero-U: Rogue to Redemption,pc,rpg,single,business,marketing,"Hero-U: Rogue to Redemption shipped in July of 2018, two years after the release date promised in the Kickstarter. The game appeared quietly on Steam as soon as we had a stable version of the game in beta test. All of the developers, including me, were busy fixing bugs and getting the game solvable. The designers were doing all of the production materials, including the trailer and press contacts, themselves. This resulted in a “stealth” release, with little buildup and very little coordination. We hit Steam right during a bug with Steam’s discovery algorithms, impacting most indies released in late 2018 - Six months after launch, Hero-U was still listed as “Steam is still learning about this game,” which likely reduced player confidence. Many people are still telling us “wow, we didn’t know that Hero-U was out yet!” on social media. (...) At the advice of an investor, Transolar chose to release the game at a premium price point of $35 to position it as a highend game. Most indie games on Steam have a $10, $15, or $20 price. Unfortunately, we didn’t have enough of a marketing push to be treated as a premium AAA game. Companies such as Electronic Arts and Activision spend millions of dollars in advertising to promote their AAA games, which pushes most other games into the “cheap indie game” category."
922,Hero-U: Rogue to Redemption Postmortem,2019,https://www.gamasutra.com/blogs/RobertaVaughan/20190404/340065/HeroU_Rogue_to_Redemption_Postmortem.php,Hero-U: Rogue to Redemption,pc,rpg,single,business,monetization,"We were unable to contact Steam to get a personal representative, so were flying blind on pricing, marketing strategy, and so on. Steam is largely built around automated algorithms. In particular, reaching $100,000 in first-month sales and maintaining a similar level is critical to getting premium “front page” placement during Steam promotions. We did not come close to hitting that level. In early 2019, we reduced the game price to $20. Sales since then have been modest, but are a steady trickle. Steam buyers are used to buying most games during sales; we have not yet participated in a sale since lowering the base price."
923,Robothorium Post Mortem,2019,https://www.gamasutra.com/blogs/YannickElahee/20190221/337113/Robothorium_Post_Mortem.php,Robothorium,pc,roguelike,multi single,production,design,Matching procedural missions building with history & gameplay. It was hard to do and the result is quite deceiving.
924,Robothorium Post Mortem,2019,https://www.gamasutra.com/blogs/YannickElahee/20190221/337113/Robothorium_Post_Mortem.php,Robothorium,pc,roguelike,multi single,production,tools,"Using the old engine was a bit hard to do at first. We used the basis of Dungeon Keepers. Using an old basis seems flawless and the best use case. That’s you know, in programmers dreams. Not in reality."
925,Robothorium Post Mortem,2019,https://www.gamasutra.com/blogs/YannickElahee/20190221/337113/Robothorium_Post_Mortem.php,Robothorium,pc,roguelike,multi single,management-people,communication,The creative direction at the beginning was very weak. It created a lot of problem around writing and art direction. People weren’t too sure on where the project was going.
926,Robothorium Post Mortem,2019,https://www.gamasutra.com/blogs/YannickElahee/20190221/337113/Robothorium_Post_Mortem.php,Robothorium,pc,roguelike,multi single,management-people,team,"Johann hired Mathieu to do Robothorium! It’s quite important because it was Mathieu’s first project. He learned a lot but still had to gain experience to make something cool. Mathieu accommodated nicely but the art and creative direction were a bit clunky from the beginning. The team had to do a complete rework of the art direction and change all sprites, for the sake of the game. It did help but we still noticed players were not interested in it that much. (...) Not everyone on remote work was fitting. Remote can be great for some people, harsh for others. (...) The project wasn’t super easy & chill. The reshaping of the art direction was exhausting and took a lot of time. Some people didn’t really live it well! (...) People lacked a bit of experience so the production value is a bit weak, but they definitely learned a lot."
927,Robothorium Post Mortem,2019,https://www.gamasutra.com/blogs/YannickElahee/20190221/337113/Robothorium_Post_Mortem.php,Robothorium,pc,roguelike,multi single,business,marketing,"Dungeon Rushers was very fun and put cheesy adventurers in crazy dungeons. Robothorium was “serious business” and the writing was different from Dungeon Rushers. Some players didn’t really recognize themselves in it. Our marketing was very focused on robots, sci-fi, story until we realized that the very best thing of Robothorium is it’s gameplay. The gameplay is generous, with skill trees, crafting, looting and such. The progression curve is nice. We decided to shift the marketing more onto the gameplay and less around the story."
